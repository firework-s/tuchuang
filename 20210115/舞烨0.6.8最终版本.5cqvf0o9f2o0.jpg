function write( fileName, content ) local f = assert( io.open( fileName, 'w'))   f:write( content )     f:close()  end
function read( fileName )    local f = assert( io.open(fileName, 'r'))    local content = f:read("*all")   f:close()   return content  end

function panduan(rec)  
    file,err=io.open(rec)  
  if file==nil then 
	  return false  
   else 
	return true 
   end 
end

function check()
  A=os.date("%y.%m.%d.%H", os.time()) 
  path="/storage/emulated/0/tencent/msflogs/com/tencent/mobileqq/com.tencent.mobileqq."..A..".log"    
  file=io.open(path,"r")
  --gg.alert(path)
  Y=file:read("*a")
  Y1=string.find(Y,"124126660")  ---群号1
  Y2=string.find(Y,"1164808915")  ---群号2
  if Y1~=nil or Y2~=nil then 
  gg.alert("🎉验证通过🎉") 
  else 
  gg.copyText("1164808915")
  gg.alert("🈲你没有进群，群号已复制到剪切板🈲\n🔜如果是误判，在群内发送一条消息即可验证通过🔜")   
  os.exit()
  end
end
--check()

YF_Start = nil
YF_End = nil

-- data[1]：角色坐标内存地址
-- data[2]：角色光翼能量内存地址
-- data[5]：当前位置内存地址
-- data[6]：蜡烛内存地址
-- data[7]：花朵内存地址
-- data[8]：全局速度内存地址
-- data[9] :光芒坐标
data = {}

--energyStatus = false -- 是否开启无限能量
ignitionStatus = false -- 是否点燃所有蜡烛和黑暗植物
UnlimitedFireworksStatus = false -- 是否已经开启无限烟花

EdenCount = 0 -- 伊甸小黑人计数器
wingCount = 0 -- 光翼计数器
prevCurrentLocationIndex = nil -- 上一次所在地图 index
currentLocationIndex = nil -- 当前地图索引

Menu = nil
TempMenu = "HomeMenu"
local CandleSleepTime = 500
local GTJG= 10000
local GSJG= 5000

gameSpeed = 1
candle = {}
flower = {}
----------------------------------------------------------------------------------------------------------------- 先祖任务坐标
xz_cd = {}
  xz_cd[1] = {
    {
      {64.80686187744,5.14548636,105.91326141357},
      {74.07012939453,4.99455643,113.85317993164}},
    {
      {105.90128326416,4.79724311829,48.25633621216},
      {101.79879760742,4.12522029877,109.09219360352}
    },
    {
      {136.74867248535,90.44455718994,-257.50369262695},
      {152.95227050781,86.44084167481,-249.8868560791}
    }
  }
  xz_cd[2] = {155.77127075195,103.30429077148,-292.78778076172}
  xz_yy = {}
  xz_yy[1] = {
    {
      {101.264656,154.880845,17.439484},
	  {116.690376, 157.202316, 31.787988},
	  {109.515472, 156.458953, 26.809562},
	  {103.318199, 157.648086, 32.537815},
      {111.582458,156.433929,26.943059}
    }
  }
  xz_yy[2] = {
    {
      {-192.701782,193.627963,83.731369},
      {-197.085662,205.879479,86.774139}
    }
  }
  xz_yy[3] = {
    {
      {315.276154,188.257264,210.622498},
      {413.294433,187.036023,209.076461}
    }
  }
  xz_yy[4] = {
    {
      {110.485199,181.221405,250.571335},
      {90.299225,198.882599,270.072845}},
    {
      {75.583969,184.344529,331.810486},
	  {82.888336, 188.670532, 348.228973},
      {73.112548,194.19812,361.487304},
	  {68.70941925048828, 197.86489868164062, 364.1943664550781}
    },
    {
      {60.022,185.073,365.051},
      {63.396,185.281,365.771}
    },
    {
      {-40.428947,183.276749,313.635895},
      {-15.466066,192.646286,314.935302}
    }
  }
  xz_yy[5] = {-112.08637237548828,88.39525604248047,42.315372467041016}
  xz_yl = {}
  xz_yl[1] = {
    {
      {30.70751953125,97.58390808105,-179.40824890137},
	  {16.93806076049, 96.87742614746, -177.86671447753},
	  {16.11702919006, 96.39558410644, -166.99340820312},
	  {10.033204078674316, 98.16629028320312, -155.86553955078125},
	  {14.20316410064, 99.33074951171, -145.80369567871},
	  {18.036705017089844, 98.87513732910156, -134.38833618164062}
    }
  }
  xz_yl[2] = {
    {
      {69.49216461182,106.90505218506,-87.62112426758},
      {108.0757904053,112.31512451172,-48.17158126831}
	},
    {
      {85.16683959961,102.52812194824,12.71730327606},
      {78.27222442626,96.64196014404,34.59815597534}
    },
    {
      {36.74116134644,96.14245605469,-14.23884391785},
      {40.07267761231,113.47927856445,30.47058486938}
    }
  }
  xz_yl[-1] = {66.6671371459961,101.0167465209961,56.97434616088867}
  xz_yl[3] = {
    {
      {22.097645,139.748154,5.682589},
      {3.03052,139.422988,77.747024}
    },
    {
      {57.04404449463,143.89994812012,50.25771331787},
      {35.9840888977,144.35447692871,75.76773071289}
    },
    {
      {-82.67083740234,134.6703338623,223.05491638184},
	  {-82.97026824951, 134.56648254394, 214.90242004394},
	  {-71.8573989868164, 134.69012451171875, 222.29745483398438},
	  {-80.37356567382, 135.00367736816, 230.83522033691},
	  {-83.63902282714, 134.94985961914, 222.74227905273},
      {-91.27504730224,136.2408752442,225.23333740234}
    }
  }
  xz_yl[4] = {0,115.80418396,-3.9}
  xz_yl[5] = {0,115.66765,-1.72}
  xz_xg = {}
  xz_xg[1] = {
    {
      {168.41310119629,67.07646179199,-448.99984741211},
	  {161.02091979981, 70.21444702149, -460.69677734375},
	  {151.66075134277, 74.83198547364, -453.40322875976},
	  {161.27262878418, 76.88271331788, -443.13027954102},
	  {167.41955566406, 76.35299682617, -444.99737548828},
      {171.43809509277344, 75.87872314453125, -444.20306396484375}
    }
  }
  xz_xg[2] = {
    {
      {59.75024032593,490.71014404297,32.25593185425},
      {96.21322631836,530.40673828125,-45.15312194824}
    },
    {
      {120.2495,473.49,6.83055},
      {120.2495,473.49,6.83055}
    }
  }
  xz_xg[3] = {
    {
      {90.73419189453,154.29534912109,-171.61741638184},
      {118.79520416259,154.29566955566,-215.32118225098}
    }
  }
  xz_xg[4] = {9.506819725036621,138.1128692626953,-182.22122192382812}
  xz_mt = {}
  xz_mt[1] = {
    {
      {-21.26772689819,7.72060775757,262.90121459961},
	  {-31.89016532897, 2.02924919128, 245.10450744628},
	  {-27.447704, 0.392863, 230.614608},
	  {-18.65313339233, 1.50483536720, 219.92141723632},
      {-21.32256698608,0.96985554695,207.28706359863},
	  {-20.5474796295166, 1.3168145418167114, 203.19607543945312}
    },
    {
      {-33.87367630005,0.47998189926,388.09027099609},
      {-96.65264129638,1.6455951929,325.35794067382}
    }
  }
  xz_mt[2] = {
    {
      {-1.81847178936,67.47225952148,-109.97587585449},
      {7.00378704071,77.45749664307,-139.02146911621}
	},
    {
      {62.99663543701,92.83907318115,261.21282958984},
	  {44.69726562500, 91.15282440185, 237.41056823730},
	  {47.80560684204, 89.81167602539, 218.16560363769},
	  {52.00352478027, 89.71234893798, 207.11741638183},
	  {58.70776748657, 92.12214660644, 195.47552490234},
	  {60.31597518920, 95.37597656250, 189.33790588378},
	  {62.42349624633789, 100.00210571289062, 181.20494079589844},
      {68.34260559082,99.15675354003,145.23588562011}
    }
  }
  xz_mt[3] = {
    {
      {-209.48788452148,1.04883360863,398.78448486328},
      {-171.7741241455,10.85400676727,373.55349731445}
    }
  }
  xz_mt[4] = {
    {
      {-231.60386657715,102.21933746338,-191.23571777344},
      {-212.57273864746,148.37248229981,-162.73057556152}
    }
  }
  xz_mt[5] = {-0.039361242204904556,206.32229614257812,2.1473278999328613}
  xz_jg = {}
  xz_jg[1] = {
    {
      {-62.09304428101,40.73058319092,22.32921409607},
      {-56.5495223999,49.66357040405,31.19394874572}
    },
    {
      {47.82119369507,83.53661346436,42.63860702515},
	  {35.74782943725586, 83.19325256347656, 48.05976486206055},
	  {29.401132583618164, 89.53671264648438, 60.26103973388672},
	  {28.699665069580078, 82.99332427978516, 39.39664077758789},
      {21.2452545166,82.84236145019,44.06553649902}
    },
    {
      {-37.25931549072,143.38360595703,-22.54124641418},
	  {-18.95537757873, 146.77537536621, -29.63357925415},
	  {-3.594398021697, 146.94731140136, -32.64868164062},
	  {26.130910873413, 152.24751281738, -37.39312362670},
      {31.476238250732,153.90464782714,-42.26019287109}
    }
  }
  xz_jg[2] = {
    {
      {-11.23779010773,149.86012268066,-44.61698913574},
      {-13.58221244812,164.15745544433,-49.86547470092}
    }
  }
  xz_jg[3] = {0.12063739448785782,309.5761413574219,66.80390167236328}
----------------------------------------------------------------------------------------------------------------- 先祖任务坐标
-- 遇境进入6图坐标
map_door = {
    {11.12615299225,0.5613989234,1.11112654209},
    {8.9,1.5,4.48},
    {5.02718019485,1.4,7.5},
    {-2.919485333058,2.1257559395,7.52585887909},
    {-6.29799985886,1.58005309105,4.30489492416},
    {-8.35639858246,1.20372593403,0.50843590498}
  }
-------彩蛋瞬移坐标-----------
 cdmap_yj = {}
  cdmap_yj[1] = {
    796,
    0.2,
    -0.3
  }
  cdmap_yj[2] = {
    1,
    0.8,
    -0.3
  }
  cdmap_cd = {}
  cdmap_cd[1] = {
    298.00839233398,
    413.13671875,
    -283.45837402644
  }
  cdmap_cd[2] = {
    298.00839233398,
    750,
    -283.45837402644
  }
  cdmap_cd[3] = {
    117.80199432373,
    1.0181401968,
    -1733.9892578125
  }
  cdmap_yy = {}
  cdmap_yy[1] = {
    314.92810058594,
    235.1559753418,
    162.17864990234
  }
  cdmap_yy[2] = {
    97.56925201416,
    174.57604980469,
    265.3330078125
  }
  cdmap_yy[3] = {
    -151.39393615723,
    112.16463470459,
    46.31144332886
  }
  cdmap_yy[4] = {
    -529.29986572266,
    8.66990280151,
    -213.8560333252
  }
  cdmap_yl = {}
  cdmap_yl[1] = {
    -32.09742736816,
    206.96907043457,
    0.02679648809
  }
  cdmap_yl[2] = {
    -4.87363386154,
    9.68434524536,
    506.74230957031
  }
  cdmap_xg = {}
  cdmap_xg[1] = {
    314.91091918945,
    173.49656677246,
    -783.53955078125
  }
  cdmap_xg[2] = {
    -478.84976196289,
    1573.01025390625,
    76.278465271
  }
  cdmap_xg[3] = {
    -813.96313476562,
    1547.04602050781,
    -506.09045410156
  }
  cdmap_xg[4] = {
    58.26231384277344,
	135.72137451171875,
	-219.90045166015625
  }  
  cdmap_mt = {}
  cdmap_mt[1] = {
    -84.72422790527,
    5047.2763671875,
    -842.01507568359
  }
  cdmap_mt[2] = {
    -339.77133178711,
    185.78332519531,
    404.22909545898
  }
  cdmap_mt[3] = {
    -416.30792236328,
    12.31269836426,
    410.81399536133
  }
  cdmap_jg = {}
  cdmap_jg[1] = {
    32.18392944336,
    347.24133300781,
    41.18384552002
  }
  cdmap_jg[2] = {
    -1.04423522949,
    195.06649780273,
    4.06247663498
  }
  cdmap_jg[3] = {
    68.92450714111,
    240.40475463867,
    -185.50691223145
  }
  cdmap_jg[4] = {
    -2.3683698177337646,
    37.12582778930664,
    -172.75494384765625
  }
  cdmap_jg[5] = {
     7066.701171875, 
     6927.85888671875, 
     9084.11328125
  }
  cdmap_bfy = {}
  cdmap_bfy[1] = {
    -22.318044662475586,
    221.76121520996094,
    -362.0965576171875
  }
  cdmap_bfy[2] = {
    -504.72369384765625,
    7.738282680511475,
    -472.343017578125
  }
  cdmap_cszl = {}
  cdmap_cszl[1] = {
    194.7921295166,
    1552.53833007812,
    566.3759765625
  }
  cdmap_cszl[2] = {
    335.68902587891,
    1927.6708984375,
    99.81793212891
  }
  cdmap_cszl[3] = {
    254.16377258301,
    1878.54760742188,
    73.97454833984
  }
  cdmap_cszl[4] = {
    250.36479187012,
    1844.25329589844,
    -1.34167420864
  }
  cdmap_cszl[5] = {
    201.36094665527,
    1832.62463378906,
    56.0168762207
  }
  cdmap_cszl[6] = {
    321.23587036133,
    1962.60498046875,
    -21.15508079529
  }
  cdmap_cszl[7] = {
    713.50329589844,
    2548.65478515625,
    152.37353515625
  }
  cdmap_cszl[8] = {
    862.8026733398438,
    2692.793212890625,
    154.70008850097656
  }
  cdmap_cszl[9] = {
    129.14239501953,
    5499.90185546875,
    1277.72985839844
  }
  cdmap_cszl[10] = {
    -36.77297592163086,
    2435.26513671875,
    2214.6943359375
  }
  cdmap_cszl[11] = {
    8.84585189819,
    130,
    42.62521743774
  }
  cdmap_cszl[12] = {
    9.62896347046,
    20.34807777405,
    31.97480583191
  }
  cdmap_cszl[13] = {
    -21.38742637634,
    5.05461454391,
    39.82778549194
  }
  cdmap_cszl[14] = {
    -1.13085877895,
    0.6369894743,
    238.60090637207
  }

-- 晨岛烛光坐标
map1 = {}
map1[1] = {152.8448486328125, 86.9371109008789, -251.80824279785156}
map1[2] = {157.90138244628906, 85.43553161621094, -247.1419677734375}
map1[3] = {151.6625518798828, 87.41319274902344, -235.54896545410156}
map1[4] = {146.7664794921875, 103.32555389404297, -264.7947082519531}
map1[5] = {156.17796325683594, 103.7519760131836, -293.8846740722656}
map1[6] = {155.7158966064453, 102.77755737304688, -264.3856506347656}
map1[7] = {371.93402099609375, 53.026241302490234, -11.075493812561035}
map1[8] = {375.4615478515625, 51.8211784362793, -13.985779762268066}
map1[9] = {207.74447631835938,4.33616828918457,-74.61812591552734}--晨岛进山谷
map1[10] = {-13.580814361572266, 247.49691772460938, -269.1416931152344}--晨岛山谷
map1[11] = {-3.0753376483917236, 236.10751342773438, -300.12933349609375}--大蜡烛
map1[12] = {-13.504182815551758, 303.2855224609375, -325.5300598144531}--心蜡烛
map1[13] = {-89.24166870117188, 245.06314086914062, -304.4986877441406}--水试炼打坐坐标
map1[14] = {36.868011474609375, 65.70532989501953, -99.9117202758789}--水试炼小烛火
map1[15] = {-107.43086242675781, 65.50455474853516, -210.9021759033203}--水试炼小烛火2
map1[16] = {43.75042724609375, 68.01750183105469, -273.5027160644531}--水试炼终点变成小金人
map1[17] = {-0.13781248033046722, 78.87855529785156, -411.2085876464844}--返回山谷打坐
map1[18] = {-25.354103088378906, 190.19381713867188, -22.509429931640625}--返回晨岛主图

-- 云野图 1 烛光坐标
map2 = {}
map2[1] = {115.48479461669922, 197.05914306640625, -435.31060791015625}
map2[2] = {119.0742416381836, 196.92567443847656, -431.1767578125}
map2[3] = {121.01982879638672, 197.08273315429688, -427.153564453125}
map2[4] = {111.138427734375, 196.75003051757812, -420.8542175292969} -- 大蜡烛
map2[5] = {144.45449829101562, 161.98834228515625, 5.942216873168945}
map2[6] = {102.84137725830078, 155.22340393066406, 15.917468070983887}
map2[7] = {82.38233947753906, 157.65191650390625, 49.99785614013672}
map2[8] = {81.4575424194336, 150.40586853027344, 0.5714755654335022} -- 大蜡烛
map2[9] = {76.14342498779297, 150.32098388671875, 3.218270778656006}
map2[10] = {58.76516342163086, 151.26339721679688, 7.294255256652832}
map2[11] = {26.84194564819336, 158.91793823242188, -20.204557418823242}

-- 云野图 1 右隐藏图烛光坐标
map3 = {}
map3[1] = {-102.72406768798828, 172.00039672851562, 57.29758834838867}
map3[2] = {-104.61917114257812, 158.479248046875, 52.91344451904297}
map3[3] = {-144.9787139892578, 180.60699462890625, 120.11329650878906}
map3[4] = {-157.32229614257812, 197.1489715576172, 118.38020324707031}
map3[5] = {-181.80294799804688, 189.67514038085938, 124.67640686035156}
map3[6] = {-159.25479125976562, 158.50054931640625, 116.65164947509766}
map3[7] = {-194.96311950683594, 178.2412872314453, 84.0169677734375}
map3[8] = {-192.6273956298828, 195.7891845703125, 86.5670394897461}
map3[9] = {-197.6678466796875, 206.66650390625, 86.62047576904297}

-- 圣岛图烛光坐标
map4 = {}
map4[1] = {246.29551696777344, 95.98173522949219, 220.51290893554688}
map4[2] = {55.86386489868164, 102.47203063964844, 303.0420227050781}
map4[3] = {24.8445987701416, 55.75832748413086, 327.8701477050781}
map4[4] = {50.6432991027832, 1.1883434057235718, 332.25750732421875}
map4[5] = {78.66218566894531, 29.037817001342773, 331.4103698730469}
map4[6] = {109.26742553710938, 19.498355865478516, 332.973388671875}
map4[7] = {118.38353729248047, 20.151569366455078, 325.0567932128906}
map4[8] = {102.47428894042969, 1.2866320610046387, 362.28643798828125}
map4[9] = {99.53500366210938, 2.076920986175537, 292.7664794921875}
map4[10] = {92.7822494506836, 2.805234670639038, 292.47149658203125}
map4[11] = {79.09291076660156, 8.494146347045898, 298.1864929199219}
map4[12] = {74.98672485351562, 18.251327514648438, 281.7445068359375}
map4[13] = {143.95436096191406, 15.134726524353027, 283.8544006347656}

-- 云野图 2 烛光坐标
map5 = {}
map5[1] = {89.16019439697266, 181.4801025390625, 231.5431365966797}
map5[2] = {99.32698059082031, 195.05580139160156, 252.80810546875}
map5[3] = {94.08389282226562, 199.24281311035156, 271.3441467285156} -- 左边祭坛
map5[4] = {95.18511962890625, 201.31727600097656, 275.1767272949219} -- 左边祭坛
map5[5] = {97.44329833984375, 203.4636688232422, 272.0531005859375} -- 左边祭坛
map5[6] = {27.240928649902344, 183.7237548828125, 272.9090576171875} -- 大蜡烛
map5[7] = {-41.747825622558594, 183.70962524414062, 316.7105407714844}
map5[8] = {-15.484185218811035, 192.60939025878906, 317.7074890136719} -- 右边祭坛
map5[9] = {-18.705961227416992, 196.6973876953125, 317.388916015625} -- 右边祭坛
map5[10] = {-17.38096809387207, 196.69662475585938, 320.20477294921875} -- 右边祭坛
map5[11] = {-11.093417167663574, 188.31732177734375, 325.0796813964844}
map5[12] = {31.590986251831055, 184.79364013671875, 349.33770751953125}
map5[13] = {48.454166412353516, 186.25103759765625, 356.8443298339844}
map5[14] = {56.876258850097656, 186.21533203125, 368.1684875488281}
map5[15] = {65.94346618652344, 187.62173461914062, 363.1958312988281}
map5[16] = {61.97955322265625, 185.31687927246094, 362.0692443847656}
map5[17] = {66.58229064941406, 194.9496307373047, 362.1305236816406} -- 中间祭坛
map5[18] = {64.68788146972656, 198.6065673828125, 363.6100769042969} -- 中间祭坛
map5[19] = {68.12422943115234, 198.61207580566406, 363.54644775390625} -- 中间祭坛
map5[20] = {90.38285827636719, 187.86312866210938, 350.6998291015625}
map5[21] = {133.9384765625, 251.07675170898438, 455.7601318359375}
map5[22] = {122.09642791748047, 254.81861877441406, 477.214111328125}

-- 云野图 1 左隐藏图烛光坐标
map6 = {}
map6[1] = {302.4640808105469, 188.2180938720703, 66.2318344116211}
map6[2] = {282.23663330078125, 196.46990966796875, 97.43014526367188}
map6[3] = {258.6083068847656, 199.4098358154297, 128.2257537841797}
map6[4] = {297.0113830566406, 182.94273376464844, 133.86355590820312}
map6[5] = {399.1648254394531, 181.7296600341797, 200.51043701171875}
map6[6] = {409.76226806640625, 185.5255126953125, 209.93289184570312}
map6[7] = {374.7478942871094, 181.43202209472656, 225.23904418945312}
map6[8] = {314.226318359375, 188.3144073486328, 203.29872131347656}
map6[9] = {268.46466064453125, 193.73458862304688, 213.0453643798828}

-- 云野终点图烛光坐标
map7 = {}
map7[1] = {-101.02740478515625, 83.7573013305664, 44.255611419677734} -- 大蜡烛/普通烛火
map7[2] = {-106.5224380493164, 84.51943969726562, 40.61974334716797}
map7[3] = {-109.8510513305664, 87.7599105834961, 45.42829513549805}
map7[4] = {-128.4947052001953, 75.63372802734375, 42.53487014770508}

-- 雨林图 1 烛光坐标
map8 = {}
map8[1] = {136.64593505859375, 217.46261596679688, -621.9605102539062} -- 季节蜡烛
map8[2] = {143.2452850341797, 217.30882263183594, -619.9794921875} -- 季节蜡烛
map8[3] = {142.65968322753906, 219.37799072265625, -607.0445556640625} -- 大蜡烛
map8[4] = {-0.43522924184799194, 95.1641616821289, -226.27761840820312}
map8[5] = {29.81440544128418, 98.65093994140625, -278.3616943359375} -- 季节蜡烛
map8[6] = {18.573566436767578, 96.0674819946289, -216.64297485351562} -- 季节蜡烛/普通烛火
map8[7] = {20.26995849609375, 97.34878540039062, -198.21612548828125} -- 动画/普通烛火
map8[8] = {15.071944236755371, 97.25405883789062, -197.6328125} -- 季节蜡烛
map8[9] = {1.6669111251831055, 100.19026184082031, -190.62030029296875}
map8[10] = {18.55992889404297, 97.1917495727539, -177.71388244628906} -- 季节蜡烛
map8[11] = {26.48802947998047, 97.98910522460938, -176.7247772216797}
map8[12] = {10.136116027832031, 98.17671203613281, -158.52853393554688} -- 季节蜡烛
map8[13] = {9.238836288452148, 98.18597412109375, -154.28988647460938}
map8[14] = {32.44158172607422, 98.2885971069336, -145.9171142578125} -- 大蜡烛/普通烛火
map8[15] = {8.166414260864258, 100.07686614990234, -139.3579864501953}
map8[16] = {18.208715438842773, 99.26398468017578, -134.83221435546875} -- 季节蜡烛
map8[17] = {14.993736267089844, 99.53871154785156, -131.90835571289062}
map8[18] = {30.064395904541016, 99.77946472167969, -132.74742126464844}
map8[19] = {28.656333923339844, 98.69447326660156, -117.65922546386719}

-- 雨林图 2 烛光坐标
map9 = {}
map9[1] = {27.2297306060791, 100.1480941772461, -106.47602081298828}
map9[2] = {15.788555145263672, 106.4130859375, -66.71271514892578}
map9[3] = {28.610111236572266, 106.30989837646484, -71.03495025634766}
map9[4] = {24.578794479370117, 117.97195434570312, -25.99541473388672}
map9[5] = {38.859619140625, 105.32427978515625, -3.318370819091797}
map9[6] = {51.61458969116211, 102.67337036132812, 31.708463668823242}
map9[7] = {77.46121978759766, 97.02770233154297, 29.7091064453125}
map9[8] = {92.50033569335938, 99.61803436279297, 34.000972747802734}
map9[9] = {86.19263458251953, 103.95256042480469, 13.63452434539795}
map9[10] = {81.92912292480469, 103.5016098022461, 19.14788818359375}
map9[11] = {64.08094787597656, 96.60437774658203, 10.69919490814209}
map9[12] = {38.474937438964844, 96.19072723388672, -9.993888854980469}
map9[13] = {45.724063873291016, 96.66008758544922, -3.327793836593628}
map9[14] = {54.45687484741211, 97.71238708496094, -3.1649718284606934}
map9[15] = {88.06234741210938, 99.86153411865234, -30.640443801879883}
map9[16] = {40.71074676513672, 98.19569396972656, -45.0050048828125}
map9[17] = {67.44992065429688, 106.77729797363281, -52.70377731323242}
map9[18] = {71.48072052001953, 107.62105560302734, -62.091163635253906}
map9[19] = {106.29356384277344, 112.2842788696289, -48.73659133911133}
map9[20] = {98.40345001220703, 112.600830078125, -103.03898620605469}
map9[21] = {68.62696838378906, 107.48607635498047, -90.58170318603516}

-- 雨林图 2 右边隐藏图烛光坐标
map10 = {}
map10[1] = {14.093618392944336, 83.80313110351562, -57.158668518066406}
map10[2] = {0.438847154378891, 86.19342041015625, -52.89059829711914}
map10[3] = {-16.188232421875, 85.34444427490234, -31.793790817260742}
map10[4] = {-0.313793808221817, 85.3848876953125, -12.01846981048584}
map10[5] = {8.308245658874512, 92.94706726074219, 6.331696510314941}
map10[6] = {-29.679935455322266, 95.28089904785156, 16.07071876525879}
map10[7] = {-17.95949363708496, 96.29936981201172, 21.148794174194336}
map10[8] = {-0.18099981546401978, 89.98403930664062, 72.0385971069336}
map10[9] = {16.63738250732422, 88.81788635253906, 98.36229705810547}

-- 雨林地底隐藏图烛光坐标
map11 = {}
map11[1] = {63.133087158203125, 78.68209075927734, -281.0220642089844}
map11[2] = {59.82920455932617, 80.52953338623047, -285.0467529296875}
map11[3] = {62.86695861816406, 80.25634765625, -287.9561462402344}
map11[4] = {1.565952181816101, 121.35784149169922, -366.2314758300781}
map11[5] = {-32.52448272705078, 134.81565856933594, -195.00222778320312}
map11[6] = {-38.242759704589844, 132.21322631835938, -196.2104949951172}
map11[7] = {-53.936790466308594, 132.70791625976562, -199.58773803710938}

-- 雨林图 3 烛光坐标
map12 = {}
map12[1] = {-79.73004913330078, 153.44081115722656, 155.1716766357422}
map12[2] = {-73.80951690673828, 134.6925506591797, 176.84243774414062}
map12[3] = {-83.05793762207031, 134.8419647216797, 212.008056640625}
map12[4] = {-93.92444610595703, 136.37928771972656, 225.1204071044922}
map12[5] = {-76.26531982421875, 134.84457397460938, 230.4995880126953}
map12[6] = {-48.42366409301758, 134.70265197753906, 224.3935546875}
map12[7] = {-69.97320556640625, 144.42230224609375, 228.35198974609375}
map12[8] = {-63.18576431274414, 143.57485961914062, 221.1514892578125}
map12[9] = {-36.249603271484375, 137.33914184570312, 159.4209747314453}
map12[10] = {-16.076581954956055, 135.1142578125, 165.84742736816406}
map12[11] = {-10.399127960205078, 134.98397827148438, 137.53016662597656}
map12[12] = {-4.608091354370117, 138.17416381835938, 109.81646728515625}
map12[13] = {-6.736457347869873, 139.99037170410156, 112.82355499267578} -- 大蜡烛
map12[14] = {-11.023809432983398, 138.54660034179688, 85.2462158203125}
map12[15] = {22.09412384033203, 140.3455810546875, 11.843871116638184}
map12[16] = {45.549381256103516, 145.6094970703125, 52.76596450805664}
map12[17] = {52.826351165771484, 144.30552673339844, 71.81737518310547}
map12[18] = {89.52125549316406, 138.7575225830078, 107.07864379882812}
map12[19] = {73.14789581298828, 146.43463134765625, 134.08485412597656}
map12[20] = {123.52459716796875, 164.8363800048828, 156.08770751953125}
map12[21] = {47.91238784790039, 135.40536499023438, 218.2177734375}
map12[22] = {25.580482482910156, 135.10916137695312, 220.395263671875}
map12[23] = {3.9994819164276123, 137.35569763183594, 194.03443908691406}
map12[24] = {-20.476383209228516, 134.72459411621094, 199.0067901611328}
map12[25] = {-23.49690818786621, 140.3407440185547, 220.99594116210938}
map12[26] = {-23.949256896972656, 140.67259216308594, 246.7093963623047}

-- 雨林终点图烛光坐标
map13 = {}
map13[1] = {16.81786346435547, 110.69120788574219, -15.396407127380371}
map13[2] = {6.204503536224365, 104.94120025634766, -12.311569213867188}
map13[3] = {-0.14475655555725098, 116.03755950927734, -0.9655322432518005}
map13[4] = {-16.26152229309082, 104.94120788574219, -5.576430320739746}
map13[5] = {-13.266974449157715, 104.94120788574219, 7.555410385131836}
map13[6] = {-9.23095703125, 108.53633880615234, 66.9581298828125}
map13[7] = {8.60228443145752, 110.07240295410156, 70.02392578125}
map13[8] = {-10.575921058654785, 109.21115112304688, 98.15709686279297}
map13[9] = {-0.3784639835357666, 107.02091979980469, 96.34779357910156} -- 大蜡烛
map13[10] = {17.842937469482422, 107.65394592285156, 84.57618713378906}

-- 霞谷图 1 烛光坐标
map14 = {}
map14[1] = {-44.76485443115, 306.10290527344, 22.63001441956} -- 霞谷大蜡烛1
map14[2] = {-32.5977897644, 306.44381713867, 1.42672419548} -- 霞谷大蜡烛2
map14[3] = {-92.59186553955078, 255.79177856445312, -148.4453125}
map14[4] = {-98.97477722167969, 251.66648864746094, -164.38717651367188}
map14[5] = {-103.35491943359375, 249.83128356933594, -172.832763671875}
map14[6] = {-105.87772369384766, 248.24029541015625, -179.77073669433594}
map14[7] = {-108.69766235351562, 246.6088104248047, -187.23260498046875}
map14[8] = {-110.41412353515625, 244.8678436279297, -194.4726104736328}
map14[9] = {-122.05194091796875, 239.70791625976562, -223.7830047607422}
map14[10] = {-125.28434753417969, 267.6664123535156, -110.53711700439453}
map14[11] = {-149.92735290527344, 226.8570556640625, -227.44825744628906}
map14[12] = {-135.61172485351562, 198.6570281982422, -332.2059020996094}
map14[13] = {-64.35780334472656, 124.6812515258789, -449.7171936035156}
map14[14] = {10.450285911560059, 87.33418273925781, -454.9671936035156}
map14[15] = {67.18917846679688, 75.29890441894531, -478.4848327636719}
map14[16] = {94.21472930908203, 72.43785095214844, -490.087158203125}
map14[17] = {158.03570556640625, 75.53165435791016, -446.781982421875}
map14[18] = {172.24948120117188, 44.3740119934082, -486.6772766113281}
map14[19] = {220.70950317382812, 44.45427322387695, -518.063232421875}
map14[20] = {188.4931182861328, 44.58057403564453, -547.1014404296875}
map14[21] = {186.60269165039, 48.10845947266, -526.18041992188} -- 霞谷大蜡烛3
map14[22] = {160.35694885254, 45.13550949097, -531.51977539062} -- 霞谷大蜡烛4
map14[23] = {197.02517700195312, 51.77299880981445, -575.8638916015625} -- 霞光城门口

-- 霞光城烛光坐标
map15 = {}
map15[1] = {57.659942626953125, 474.9138488769531, 57.2840461730957} -- 大蜡烛
map15[2] = {114.98999786376953, 477.35107421875, 15.91044807434082}
map15[3] = {98.52658081054688, 472.4549255371094, 0.8773763179779053}
map15[4] = {79.14765167236328, 480.7848205566406, 24.38382339477539}
map15[5] = {18.057613372802734, 507.27227783203125, -4.270402431488037}
map15[6] = {26.901260375976562, 530.76806640625, -38.54109573364258}
map15[7] = {95.3380126953125, 560.7011108398438, -47.24789047241211}
map15[8] = {105.48892211914062, 558.63818359375, -37.67180252075195}
map15[9] = {92.43052673339844, 531.0474853515625, -50.78471374511719}
map15[10] = {112.9118423461914, 534.65087890625, -27.70171356201172}
map15[11] = {112.4807434082, 474.06539916992, -68.50860595703} -- 大蜡烛
map15[12] = {129.90821838378906, 478.8478698730469, -71.49417877197266} -- 柱子 1
map15[13] = {105.7688217163086, 478.84783935546875, -91.19339752197266}
map15[14] = {122.5434341430664, 480.7247619628906, -114.43705749511719}
map15[15] = {142.8031768798828, 480.7247619628906, -98.2867202758789}
map15[16] = {156.24014282226562, 485.72064208984375, -120.77572631835938}
map15[17] = {140.10903930664062, 485.7206115722656, -132.05943298339844}
map15[18] = {155.67628479003906, 495.374755859375, -158.9532470703125}
map15[19] = {174.69984436035156, 495.32135009765625, -144.05995178222656} -- 柱子 8

-- 飞行赛道烛光坐标
map16 = {}
map16[1] = {189.8597869873047, 1187.10693359375, 407.1302185058594} -- 小烛光 1
map16[2] = {185.1713104248047, 1187.1192626953125, 406.19061279296875}
map16[3] = {180.45726013183594, 1187.106689453125, 404.9832458496094}
map16[4] = {175.53744506835938, 1187.10693359375, 403.8429260253906}
map16[5] = {170.6326446533203, 1187.1068115234375, 402.6811218261719}
map16[6] = {193.2035369873047, 1187.56005859375, 393.5738830566406}
map16[7] = {188.4181365966797, 1187.106689453125, 392.3818664550781}
map16[8] = {183.63967895507812, 1187.1070556640625, 391.3121643066406}
map16[9] = {178.66842651367188, 1187.1068115234375, 390.05914306640625}
map16[10] = {173.9131317138672, 1187.1070556640625, 388.9735107421875} -- 小烛光 10
map16[11] = {168.34164428710938, 1186.6915283203125, 390.5431213378906} -- 赶紧坐下
map16[12] = {-178.26507568359375, 1174.606201171875, 348.378173828125} -- 拿赛道烛光 1
map16[13] = {-324.1112060546875, 1179.1864013671875, 265.057373046875} -- 拿赛道烛光 2
map16[14] = {-407.42694091796875, 1163.4678955078125, 103.96121978759766} -- 拿赛道烛光 3
map16[15] = {137, 1017, -100} -- 云传
map16[16] = {54, 155, -138} -- 霞谷终点
map16[17] = {57.669464111328125;135.58766174316406;-218.8708953857422} -- 霞谷终点台子上
map16[18] = {36.634857177734375, 135.49508666992188, -221.30673217773438} -- 大蜡烛 1
map16[19] = {79.17082214355469, 135.49465942382812, -218.5108184814453} -- 大蜡烛 2
map16[20] = {55.87027359008789, 134.99655151367188, -259.8233947753906} -- 小蜡烛 1
map16[21] = {63.55938720703125, 136.3941650390625, -263.87701416015625} -- 小蜡烛 2

-- 霞谷终点光标收集完拿蜡烛
map16_1 = {}
map16_1[1] = {57.75697326660156, 133.09896850585938, -196.26304626464844} -- 小烛光 1
map16_1[2] = {46.345577239990234, 132.23667907714844, -210.33326721191406}
map16_1[3] = {37.390159606933594, 132.85409545898438, -222.93154907226562}
map16_1[4] = {31.112226486206055, 133.90196228027344, -226.71005249023438}
map16_1[5] = {47.12499237060547, 132.64666748046875, -234.6924591064453}
map16_1[6] = {58.926307678222656, 133.47616577148438, -244.31137084960938}
map16_1[7] = {68.85228729248047, 132.53900146484375, -233.09878540039062}
map16_1[8] = {84.1445083618164, 133.6859130859375, -222.54019165039062}
map16_1[9] = {78.33949279785156, 133.02871704101562, -210.6060333251953}
map16_1[10] = {69.46537017822266, 132.06674194335938, -219.75816345214844} -- 
map16_1[11] = {58.82284164428711, 131.98773193359375, -209.3418731689453} -- 

map16_1[12] = {61.49257278442383, 132.68045043945312, -213.73779296875}
map16_1[13] = {49.057716369628906, 132.0406951904297, -206.1204833984375}
map16_1[14] = {68.24615478515625, 133.02523803710938, -199.46165466308594}-- 

map16_1[15] = {57.07792282104492, 131.9891357421875, -204.0220184326172}-- 
map16_1[16] = {50.715145111083984, 132.61715698242188, -198.96188354492188}-- 
map16_1[17] = {68.24615478515625, 133.02523803710938, -199.46165466308594}-- 

-- 霞谷终点烛光坐标
map17 = {}
map17[1] = {9.373971939086914, 141.13034057617188, -188.0401153564453}
map17[2] = {9.239028930664062, 141.1038360595703, -190.01651000976562}
map17[3] = {-30.518871307373047, 146.9903564453125, -149.07537841796875}
map17[4] = {-30.08305549621582, 140.20761108398438, -149.08651733398438}
map17[5] = {-29.187597274780273, 146.8710174560547, -136.1443634033203}
map17[6] = {-19.137134552001953, 153.4862060546875, -127.01026916503906}
map17[7] = {-11.19961166381836, 153.62245178222656, -120.9801254272461}

-- 墓土图 1 烛光坐标
map18 = {}
map18[1] = {-70.51749420166016, 66.21754455566406, -759.3367919921875} -- 墓土大蜡烛 1
map18[2] = {-97.19038391113281, 62.81600570678711, -789.6600341796875} -- 墓土大蜡烛 2
map18[3] = {-96.18739318847656, 65.0024642944336, -776.6886596679688} -- 墓土大蜡烛 3

-- 墓土图 2 烛光坐标

map19 = {}
map19[1] = {86.12965393066406, 0.4427396357059479, 324.669677734375}
map19[2] = {82.25169372558594, 0.44120779633522034, 303.2436828613281}
map19[3] = {46.911598205566406, 0.4412083625793457, 228.97743225097656}
map19[4] = {40.52914810180664, 0.984470009803772, 232.92359924316406}
map19[5] = {32.62031555175781, 0.4412060081958771, 235.6400146484375}
map19[6] = {7.620354652404785, 0.44115006923675537, 300.7615966796875}
map19[7] = {-4.629152774810791, 0.44120311737060547, 295.5107116699219}
map19[8] = {-93.56448364257812, 1.9673174619674683, 326.7623291015625}
map19[9] = {-29.634593963623047, 1.5946605205535889, 240.22073364257812}
map19[10] = {-31.278032302856445, 1.1062878370285034, 236.39837646484375}
map19[11] = {-26.428335189819336, 1.3417320251464844, 236.43975830078125}
map19[12] = {-26.108684539794922, 1.0891401767730713, 216.0970916748047}
map19[13] = {-52.56371307373047, 1.217241883277893, 220.2973175048828}
map19[14] = {-56.60007858276367, 0.4417218565940857, 227.39996337890625}
map19[15] = {-59.91208267211914, 1.3157551288604736, 231.3960723876953}
map19[16] = {-78.58231353759766, 8.480829238891602, 166.01026916503906}
map19[17] = {-80.62359619140625, 10.001020431518555, 160.64407348632812}

-- 墓土图 3 烛光坐标
map20 = {}
map20[1] = {68.99695587158203, 90.9939956665039, 258.82012939453125}
map20[2] = {44.83624267578125, 89.80580139160156, 227.8531951904297}
map20[3] = {52.44704818725586, 99.35067749023438, 154.4717559814453}
map20[4] = {47.86932373046875, 93.76128387451172, 143.38861083984375}
map20[5] = {34.56322479248047, 93.77136993408203, 138.96728515625}
map20[6] = {41.35456085205078, 95.7224349975586, 119.43244934082031}
map20[7] = {80.70177459716797, 72.14690399169922, -19.81279182434082}
map20[8] = {63.72593688964844, 66.7302474975586, -15.373942375183105}
map20[9] = {49.57315444946289, 69.871337890625, -61.89060592651367}
map20[10] = {8.112893104553223, 78.34172821044922, -143.56869506835938}
map20[11] = {-5.95924711227417, 83.31596374511719, -124.45013427734375}
map20[12] = {-6.900688171386719, 84.60919952392578, -126.58866882324219}
map20[13] = {-7.39254903793335, 85.70655822753906, -129.17257690429688}
map20[14] = {-7.610290050506592, 87.14704895019531, -131.38693237304688}
map20[15] = {0.7993340492248535, 89.19051361083984, -134.571044921875}
map20[16] = {35.88026428222656, 69.30430603027344, -213.2656707763672}
map20[17] = {72.94100952148438, 69.00760650634766, -155.7871551513672}
map20[18] = {85.94247436523438, 64.44117736816406, -99.37796783447266}

-- 墓土沉船烛光坐标
map21 = {}
map21[1] = {-179.6332244873047, 4.394157409667969, 491.9729309082031}
map21[2] = {-188.6711883544922, 2.0737662315368652, 477.164306640625}
map21[3] = {-132.70828247070312, 3.958029270172119, 416.12255859375}
map21[4] = {-158.82406616210938, 0.4412059783935547, 377.2613525390625}
map21[5] = {-167.95567321777344, 11.094985961914062, 366.191162109375}
map21[6] = {-188.87449645996094, 1.0881474018096924, 401.74267578125}
map21[7] = {-172.98233032226562, 0.44119948148727417, 421.0482177734375}
map21[8] = {-199.2071533203125, 0.44121018052101135, 432.53228759765625}
map21[9] = {-268.6388244628906, 5.906670570373535, 428.5260009765625}
map21[10] = {-268.46197509765625, 7.034134387969971, 423.38519287109375}
map21[11] = {-273.5856018066406, 11.449101448059082, 426.07550048828125}
map21[12] = {-289.17974853515625, 18.791976928710938, 419.7063293457031}
map21[13] = {-288.1048583984375, 28.78353500366211, 405.8936767578125}

-- 墓土古战场烛光坐标
map22 = {}
map22[1] = {-49.082149505615234, 104.97611236572266, -77.2868423461914}
map22[2] = {-185.75494384765625, 121.71110534667969, -170.03884887695312}
map22[3] = {-214.32716369628906, 141.39805603027344, -162.96131896972656}
map22[4] = {-245.53831481933594, 119.088134765625, -152.96429443359375}
map22[5] = {-229.0124053955078, 102.65209197998047, -184.0843963623047}
map22[6] = {-250.77102661132812, 100.45775604248047, -196.67221069335938}
map22[7] = {-230.81268310546875, 100.4437026977539, -229.68875122070312}
map22[8] = {-270.5896911621094, 105.68498229980469, -234.38107299804688}
map22[9] = {-237.8809356689453, 96.33998107910156, -285.84698486328125}
map22[10] = {-207.30393981933594, 96.65544128417969, -305.5923156738281}
map22[11] = {-225.9290313720703, 83.53019714355469, -362.76287841796875}
map22[12] = {-276.09381103515625, 85.05728149414062, -338.646728515625}
map22[13] = {-270.22357177734375, 88.6943130493164, -368.76019287109375}

-- 墓土终点图烛光坐标
map23 = {}
map23[1] = {-0.18003951013088226, 206.78781127929688, 2.450892686843872}
map23[2] = {-3.4571220874786377, 208.15689086914062, -1.7596217393875122}
map23[3] = {3.3420333862304688, 208.1595458984375, -1.952472448348999}
map23[4] = {0.16110922396183014, 208.3452606201172, -4.477570056915283}

-- 禁阁一楼隐藏图烛光坐标
map24 = {}
map24[1] = {49.47584533691406, 541.7752685546875, 25.87529945373535}
map24[2] = {69.59448242188, 541.40093994141, 27.65027618408}
map24[3] = {72.85754394531, 565.47186279297, -17.47369194031}
map24[4] = {76.08060455322, 563.00994873047, -23.10515213013}
map24[5] = {72.93733978271, 565.47320556641, -31.49273681641}
map24[6] = {61.79039001465, 551.71429443359, -37.71782302856}
map24[7] = {75.95713043213, 552.21374511719, -13.3358745575}
map24[8] = {56.93070602417, 552.21441650391, -18.62998008728}
map24[9] = {61.66952896118, 543.85046386719, -41.39209368545}
map24[10] = {54.76568603516, 543.84802246094, -41.38636779785}
map24[11] = {78.69750976562, 554.70959472656, -31.58866119385}
map24[12] = {85.27835083008, 554.71136474609, -31.59345626831}
map24[13] = {76.20945739746, 541.38464355469, -10.92284202576}

-- 禁阁低层图烛光坐标
map25 = {}
map25[1] = {28.26111793518, 37.39163208008, -134.52861022949}
map25[2] = {34.28949356079, 42.328956604, -118.72557830811}
map25[3] = {38.79634094238, 47.1720123291, -126.31859588623}
map25[4] = {31.71107292175, 47.16427230835, -137.21899414062}
map25[5] = {6.91684961319, 37.764503479, -70.84230041504}
map25[6] = {-5.76319360733, 40.401512146, -32.668384552}
map25[7] = {-21.63892555237, 42.0424041748, -1.71010291576}
map25[8] = {-46.57090377808, 40.40052032471, -16.48282623291}
map25[9] = {-62.28732681274, 41.82263183594, -12.90044879913}
map25[10] = {-60.73867034912, 41.10559463501, 22.90926742554}
map25[11] = {-0.9080491065979004, 40.549259185791016, 25.020217895507812} -- 一楼大蜡烛
map25[12] = {-21.98505210876465, 78.67003631591797, -6.959120750427246} -- 二楼大蜡烛
map25[13] = {21.35787582397, 79.29556274414, 6.68214130402} -- 禁阁二层
map25[14] = {11.27268409729, 82.20293426514, 21.91019821167}
map25[15] = {19.32908248901, 82.73078155518, 19.42357254028}
map25[16] = {40.81945800781, 83.96297454834, 38.4188079834}
map25[17] = {23.88597106934, 83.90636444092, 48.79845809937}
map25[18] = {-15.748322486877441, 149.14781188964844, -35.37989807128906} -- 禁阁三层
map25[19] = {-3.2968742847442627, 146.90927124023438, -30.131757736206055}

-- 禁阁高层图烛光坐标
map26 = {}
map26[1] = {-16.05261611938, 164.30964660645, -48.09916687012}
map26[2] = {25.078054428100586, 148.16799926757812, 34.003509521484375}
map26[3] = {-38.91857528687, 129.68870544434, 9.5477372158}
map26[4] = {-44.272762298583984, 140.26426696777344, 11.441617012023926} -- 大蜡烛
map26[5] = {11.904129028320312, 182.9726104736328, 41.81214904785156}
map26[6] = {-5.22235155106, 294.52462768555, -0.12603969872} -- 禁阁五层
map26[7] = {3.71660423279, 294.91845703125, 2.12295842171}
map26[8] = {-3.01484441757, 295.54183959961, 6.47273492813}
map26[9] = {6.21425771713, 302.41970825195, 47.98390579224}
map26[10] = {-10.96362018585, 307.49496459961, 58.38714599609}
map26[11] = {-1.83383011818, 304.40658569336, 58.78987121582}
map26[12] = {9.81625366211, 306.41543579102, 56.92166137695}
map26[13] = {-0.04365674778819084, 310.6197204589844, 69.89323425292969}
map26[14] = {9.14206600189209, 303.6913146972656, 51.21821594238281}
map26[15] = {8.72283935547, 303.875, 51.66994857788}
-- 遗忘方舟烛光坐标
map27 = {}
map27[1] = {105.84814453125, 116.32081604004, 462.41174316406}
map27[2] = {77.37850189209, 109.62291717529, 486.12353515625}
map27[3] = {42.14425277710, 108.72409057617, 500.89166259766}
map27[4] = {79.73130798340, 108.74385070801, 523.66644287109}
map27[5] = {96.17122650146, 108.55562591553, 510.29357910156}
map27[6] = {61.19565582275, 109.15430450439, 501.40725708008}
map27[7] = {280.19207763672, 104.21625518799, 363.10455322266}
map27[8] = {285.39682006836, 103.35955810547, 344.58203125000}
map27[9] = {302.95071411133, 113.31649017334, 349.68161010742}
map27[10] = {285.56661987305, 121.38081359863, 353.24407958984}
map27[11] = {282.82232666016, 115.49257659912, 513.79394531250}
map27[12] = {283.13558959961, 116.17700958252, 532.32537841797}
map27[13] = {300.85494995117, 122.43910980225, 522.30999755859}
map27[14] = {302.52099609375, 120.60543060303, 544.35998535156}
map27[15] = {330.75439453125, 120.46106719971, 557.20898437500}
map27[16] = {147.56947326660156, 133.7787322998047, 306.81341552734375} -- 船上烛光 1
map27[17] = {160.43431091308594, 124.61090087890625, 323.8167724609375} -- 船上烛光 2
map27[18] = {121.91839599609375, 123.96684265136719, 372.076416015625} -- 船上烛光 3
map27[19] = {112.61019134521484, 141.7353515625, 385.7739562988281} -- 船上烛光 4

--伊甸石像坐标
map28 = {}
map28[1] = {17.1362247467041, 84.59017944335938, 52.7556266784668} -- 1
map28[2] = {11.67835807800293, 84.59013366699219, 49.86378860473633} -- 2
map28[3] = {14.261826515197754, 84.62869262695312, 44.48333740234375} -- 3
map28[4] = {9.648727416992188, 84.5901870727539, 39.77193069458008} -- 4
map28[5] = {11.405400276184082, 84.69538116455078, 35.79512405395508} -- 5(隔壁有灯)
map28[6] = {0.6324533820152283, 84.59015655517578, 31.428503036499023} -- 6
map28[7] = {-0.7277868986129761, 84.5945053100586, 28.166793823242188} -- 7
map28[8] = {1.0655664205551147, 84.88699340820312, 23.76950454711914} -- 8(隔壁有灯)
map28[9] = {-9.954971313476562, 84.59011840820312, 23.45583724975586} -- 9(隔壁有灯)
map28[10] = {-5.5323357582092285, 84.59015655517578, 37.17253494262695} -- 10(隔壁有灯)
map28[11] = {-18.2912654876709, 84.5901107788086, 10.4401216506958} -- 11(隔壁有灯)
map28[12] = {-18.24886703491211, 84.59391021728516, 0.9725069403648376} -- 12
map28[13] = {-18.190832138061523, 84.59005737304688, -15.269527435302734} -- 13(隔壁有灯)
map28[14] = {-8.512870788574219, 84.69757080078125, 0.11132355779409409} -- 14(隔壁有灯)
map28[15] = {-6.3827338218688965, 84.72525787353516, 8.116943359375} -- 15(隔壁有灯)
map28[16] = {4.557214736938477, 84.59088134765625, 20.087839126586914} -- 16(隔壁有灯)
map28[17] = {13.382345199584961, 85.08402252197266, 21.995567321777344} -- 17(隔壁有灯)
map28[18] = {17.032325744628906, 87.4391098022461, 20.440502166748047} -- 18
map28[19] = {4.242427349090576, 84.59485626220703, 16.340682983398438} -- 19
map28[20] = {6.808095455169678, 86.08200073242188, 4.1699628829956055} -- 20(隔壁有灯)
map28[21] = {10.744169235229492, 84.59005737304688, -14.457193374633789} -- 21 22
map28[22] = {-0.3559841215610504, 84.71795654296875, -24.448881149291992} -- 23
map28[23] = {5.085831642150879, 84.590087890625, -24.446128845214844} -- 24(隔壁有灯)
map28[24] = {-4.767724514007568, 84.72459411621094, -40.07948684692383} -- 25
map28[25] = {-23.594802856445312, 84.59003448486328, -37.52499008178711} -- 26
map28[26] = {-11.341020584106445, 84.58984375, -59.251609802246094} -- 27 28
map28[27] = {6.14993953704834, 84.80549621582031, -50.6509895324707} -- 29 30 31(隔壁有灯)
map28[28] = {15.067083358764648, 84.59000396728516, -53.382530212402344} -- 32 33
map28[29] = {7.48034143447876, 84.5899658203125, -68.58716583251953} -- 33 之后的灯(第一段最后一个灯)
map28[30] = {-2.718961477279663, 84.58990478515625, -81.83026885986328} -- 34
map28[31] = {-12.39515209197998, 84.58997344970703, -74.80325317382812} -- 35 36
map28[32] = {18.626697540283203, 84.92305755615234, -90.72434997558594} -- 37 38
map28[33] = {8.342559814453125, 84.59000396728516, -91.65619659423828} -- 39
map28[34] = {1.3921042680740356, 84.58983612060547, -98.06446838378906} -- 40
map28[35] = {1.2335063219070435, 84.72296142578125, -104.29704284667969} -- 41
map28[36] = {3.8695507049560547, 84.63296508789062, -118.63890838623047} -- 42 43
map28[37] = {-5.019567966461182, 84.58991241455078, -123.93669891357422} -- 44
map28[38] = {2.3602640628814697, 84.66744232177734, -129.4680938720703} -- 45
map28[39] = {-0.8254585862159729, 84.72489166259766, -139.34872436523438} -- 46
map28[40] = {16.00242805480957, 84.92571258544922, -139.6103973388672} -- 47
map28[41] = {-2.089083433151245, 84.604736328125, -146.89447021484375} -- 48
map28[42] = {15.87905502319336, 84.58982849121094, -153.5755157470703} -- 49
map28[43] = {10.851850509643555, 84.76964569091797, -155.97242736816406} -- 50 51
map28[44] = {-4.897811412811279, 84.58258056640625, -163.2749481201172} -- 52
map28[45] = {0.28604069352149963, 84.72785186767578, -174.1020050048828} -- 53
map28[46] = {8.449742317199707, 84.67659759521484, -176.17343139648438} -- 54
map28[47] = {-3.461054801940918, 84.58985900878906, -181.7225799560547} -- 55
map28[48] = {2.2352476119995117, 84.58975219726562, -185.6851043701172} -- 56
map28[49] = {7.927798271179199, 84.66654968261719, -190.36685180664062} -- 57
map28[50] = {0.5534535646438599, 84.67137908935547, -191.2899932861328} -- 58
map28[51] = {-0.2645934820175171, 84.5896987915039, -206.89016723632812} -- 59
map28[52] = {-3.0562803745269775, 84.8485336303711, -210.66928100585938} -- 60
map28[53] = {8.214439392089844, 84.1397705078125, -245.43698120117188} -- 61
map28[54] = {0.0779876708984375, 84.15475463867188, -250.86431884765625} -- 62
map28[55] = {9.34404182434082, 83.99461364746094, -270.9444885253906} -- 63

door = {}
-- door[x] = {"文本",代码,"名称",花,光翼，烛火}
door[1] = {"CandleSpace", -768833570, "遇境"}
door[2] = {'Dawn', 1649439303, "晨岛"}
door[3] = {'Prairie_ButterflyFields', -1817621630, "云野一图"}
door[4] = {'Prairie_Village', -1944435120, "云野二图"}
door[5] = {'Prairie_Cave', -1050035699, "云野左图"}
door[6] = {'Prairie_NestAndKeeper', 312004957, "云野右图"}
door[7] = {'Prairie_Island', -1237641587, "云野圣岛"}
door[8] = {'DayHubCave', -1900248111, '云野八人门'}
door[9] = {'DayEnd', 1190972738, "云野宫殿"}
door[10] = {"Rain", 164626931, "雨林一图"}
door[11] = {"RainForest", -1455381650, '雨林二图'}
door[12] = {"RainShelter", -1574275404, '雨林隐藏图'}
door[13] = {"Rain_Cave", -161371567, '雨林地底隐藏图'}
door[14] = {"RainMid", -2135324521, '雨林水母图'}
door[15] = {"RainEnd", 128844448, '雨林宫殿'}
door[16] = {"Sunset", 1638008359, '霞谷一图'}
door[17] = {"Sunset_Citadel", -2115418256, '霞光城'}
door[18] = {"Sunset_FlyRace", 1844499196, '霞谷飞行赛道'}
door[19] = {"SunsetRace", 571720490, '霞谷滑雪赛道'}
door[20] = {"SunsetEnd", -1934656620, '霞谷赛道终点'}
door[21] = {"SunsetEnd2", 507487826, '霞谷宫殿'}
door[22] = {"DuskStart", 817373972, '墓土一图'}
door[23] = {"Dusk", 1147491976, '墓土二图'}
door[24] = {"DuskOasis", 170656205, '墓土方舟'}
door[25] = {"DuskGraveyard", 864432821, '墓土三图'}
door[26] = {"Dusk_CrabField", -1644045427, '墓土沉船图'}
door[27] = {"DuskMid", 1597085778, '墓土古战场'}
door[28] = {"DuskEnd", -136010643, '墓土宫殿'}
door[29] = {"Night", -1936060159, '禁阁低层'}
door[30] = {"NightArchive", 2518601, '禁阁隐藏图'}
door[31] = {"Night2", -1987505335, '禁阁高层'}
door[32] = {"NightEnd", -2027781754, '禁阁终点'}
door[33] = {"TGCOffice", 295816905, '办公室'}
door[34] = {"StormStart", -1184245578, '暴风一图'}
door[35] = {"Storm", 1705189686, '暴风二图'}
door[36] = {"StormEnd", -815180717, '伊甸'}
door[37] = {"OrbitMid", -857831781, '重生一图'}
door[38] = {"OrbitEnd", 567986524, '重生二图'}
door[39] = {"CandleSpaceEnd", -2043682661, '星光大道'}
door[40] = {"Credits", 261807733, '结尾动画'}
-- 新增预言季地图
door[41] = {"DawnCave", 748712866, '预言山谷'}
door[42] = {"Dawn_TrialsWater", -410824576, '水试炼'}
door[43] = {"Dawn_TrialsEarth", 1887730855, '土试炼'}
door[44] = {"Dawn_TrialsAir", 2050064391, '气试炼'}
door[45] = {"Dawn_TrialsFire", 1241316521, '火试炼'}

wing1 = {}
wing1[1] = {52.305667877197266, 34.469661712646484, 370.6624450683594} -- 晨岛 1
wing1[2] = {117.65298461914062, 2.1573851108551025, 310.5875244140625} -- 晨岛 2
wing1[3] = {281.7460021972656, 2.428713798522949, 188.7839813232422} -- 晨岛 3
wing1[4] = {107.19894409179688, 24.660232543945312, 48.34667205810547} -- 晨岛 4
wing1[5] = {414.7082824707031, 95.05179595947266, -6.85574197769165} -- 晨岛 5

wing2_1 = {}
wing2_1[1] = {125.77339172363281, 148.59371948242188, -28.086668014526367} -- 云野一图 1
wing2_1[2] = {106.4784927368164, 174.97898864746094, 26.620683670043945} -- 云野一图 2
wing2_1[3] = {80.70025634765625, 160.77032470703125, 62.58359909057617} -- 云野一图 3

wing2_2 = {}
wing2_2[1] = {347.9954833984375, 198.1394805908203, 111.96548461914062} -- 云野左图 1
wing2_2[2] = {289.7991638183594, 200.19906616210938, 178.42237854003906} -- 云野左图 2

wing2_3 = {}
wing2_3[1] = {-138.44383239746094, 159.76779174804688, 145.01927185058594} -- 云野右图 1
wing2_3[2] = {-214.6240234375, 181.38917541503906, 153.04727172851562} -- 云野右图 2

wing2_4 = {}
wing2_4[1] = {240.8968048095703, 94.34611511230469, 205.6313934326172} -- 云野圣岛图 1
wing2_4[2] = {63.70275115966797, 94.92633056640625, 308.20428466796875} -- 云野圣岛图 2
wing2_4[3] = {-20.61448097229004, 14.688538551330566, 382.9339599609375} -- 云野圣岛图 3
wing2_4[4] = {107.94367218017578, 2.541093111038208, 333.92913818359375} -- 云野圣岛图 4
wing2_4[5] = {94.66068267822266, 10.993300437927246, 362.16229248046875} -- 云野圣岛图 5
wing2_4[6] = {60.621437072753906, 18.751977920532227, 273.5213317871094} -- 云野圣岛图 6
wing2_4[7] = {76.60189056396484, 1.3998603820800781, 326.5812072753906} -- 云野圣岛图 7
wing2_4[8] = {-146.8343963623047, 80.664794921875, 119.52056121826172} -- 云野圣岛图 8

wing2_5 = {}
wing2_5[1] = {101.13986206054688, 181.57308959960938, 256.6242370605469} -- 云野二图 1
wing2_5[2] = {27.78605842590332, 185.07664489746094, 278.78515625} -- 云野二图 2
wing2_5[3] = {67.00910949707031, 186.4366912841797, 376.621337890625} -- 云野二图 3
wing2_5[4] = {138.58847045898438, 266.9640197753906, 478.8299560546875} -- 云野二图 4
wing2_5[5] = {146.8998260498047, 304.5901184082031, 536.7174072265625} -- 云野二图 5

wing2_6 = {}
wing2_6[1] = {-3.5362441539764404, 38.86030578613281, -3.554537534713745} -- 云野八人门

wing3_1 = {}
wing3_1[1] = {2.287740468978882, 114.78730010986328, -258.23382568359375} -- 雨林一图 1 
wing3_1[2] = {27.55278205871582, 98.49266052246094, -117.6263198852539} -- 雨林一图 2

wing3_2 = {}
wing3_2[1] = {23.752243041992188, 127.39244079589844, -65.29088592529297} -- 雨林二图 1
wing3_2[2] = {103.89476013183594, 111.79769897460938, -111.07088470458984} -- 雨林二图 2
wing3_2[3] = {79.80472564697266, 129.50234985351562, -12.047870635986328} -- 雨林二图 3
wing3_2[4] = {66.00760650634766, 100.04045867919922, 45.365966796875} -- 雨林二图 4

wing3_3 = {}
wing3_3[1] = {-44.215057373046875, 103.66735076904297, -19.170103073120117} -- 雨林隐藏图 1
wing3_3[2] = {-20.749156951904297, 96.56121826171875, 23.03103256225586} -- 雨林隐藏图 2

wing3_4 = {}
wing3_4[1] = {26.301719665527344, 78.44698333740234, -416.4278869628906} -- 雨林地底图 1
wing3_4[2] = {9.676410675048828, 137.5003662109375, -213.44920349121094} -- 雨林地底图 2
wing3_4[3] = {-65.75367736816406, 208.80593872070312, -202.2288360595703} -- 雨林地底图 3
wing3_4[4] = {-68.65911865234375, 210.41383361816406, -295.2980041503906} -- 雨林地底图 4

wing3_5 = {}
wing3_5[1] = {-50.74190139770508, 149.72854614257812, 58.82693099975586} -- 雨林水母图 1
wing3_5[2] = {118.12211608886719, 178.6919403076172, 157.51565551757812} -- 雨林水母图 2
wing3_5[3] = {-21.95285415649414, 142.04832458496094, 273.39337158203125} -- 雨林水母图 3

wing3_6 = {}
wing3_6[1] = {31.750734329223633, 111.88538360595703, 58.470367431640625} -- 雨林宫殿

wing4_1 = {}
wing4_1[1] = {-151.74984741210938, 263.6294860839844, -149.57485961914062} -- 霞谷一图 1
wing4_1[2] = {165.64878845214844, 41.660888671875, -540.732177734375} -- 霞谷一图 2
wing4_1[3] = {198.50112915039062, 48.584510803222656, -517.106689453125} -- 霞谷一图 3

wing4_2 = {}
wing4_2[1] = {195.60191345214844, 631.0466918945312, -421.26873779296875} -- 霞谷滑雪 1

wing4_3 = {}
wing4_3[1] = {40.471229553222656, 184.94927978515625, 72.66858673095703} -- 霞谷滑雪第二段
wing4_3[2] = {27.74183464050293, 183.27052307128906, -278.33258056640625} -- 霞谷赛道终点

wing4_4 = {}
wing4_4[1] = {115.72106170654297, 502.42578125, -38.5916748046875} -- 霞谷霞光城 1
wing4_4[2] = {84.23135375976562, 558.4590454101562, -55.568031311035156} -- 霞谷霞光城 2

wing4_5 = {}
wing4_5[1] = {-396.884033203125, 1163.6419677734375, 48.3006477355957} -- 霞谷飞行赛道 1
wing4_5[2] = {69.06665802001953, 1053.656494140625, -33.57658767700195} -- 霞谷飞行赛道 2
--wing4_5[3] = {68.99817657470703, 1048.197021484375, -32.196861267089844} -- 霞谷飞行赛道 2

wing4_6 = {}
wing4_6[1] = {-26.89392852783203, 150.39735412597656, -164.49758911132812} -- 霞谷宫殿

wing5_1 = {}
wing5_1[1] = {97.7798843383789, 45.73994445800781, 367.7820739746094} -- 墓土一图 1
wing5_1[2] = {28.558834075927734, 0.7952382564544678, 343.2400817871094} -- 墓土一图 2

wing5_2 = {}
wing5_2[1] = {83.78272247314453, 92.79405975341797, 185.8589324951172} -- 墓土二图前半段 1
wing5_2[2] = {67.279052734375, 99.17205047607422, 121.21357727050781} -- 墓土二图前半段 2
wing5_2[3] = {92.09860229492188, 78.28145599365234, -55.74094009399414} -- 墓土二图四龙 1
wing5_2[4] = {15.420543670654297, 84.20460510253906, -139.0518341064453} -- 墓土二图四龙 2
wing5_2[5] = {-12.265501976013184, 65.32738494873047, -91.68331909179688} -- 墓土二图四龙 3
wing5_2[6] = {28.15451431274414, 71.39746856689453, -222.3702392578125} -- 墓土二图四龙 4

wing5_3 = {}
wing5_3[1] = {-22.421829223632812, 32.61198806762695, 527.5032958984375} -- 墓土沉船 1
wing5_3[2] = {-165.12155151367188, 2.0128772258758545, 369.3706970214844} -- 墓土沉船 2
wing5_3[3] = {-293.037841796875, 3.5009078979492188, 335.59564208984375} -- 墓土沉船 3

wing5_4 = {}
wing5_4[1] = {-205.37586975097656, 130.55145263671875, -160.61920166015625} -- 墓土远古战场 1
wing5_4[2] = {-238.01834106445312, 86.29669952392578, -394.52593994140625} -- 墓土远古战场 2

wing5_5 = {}
wing5_5[1] = {4.385961532592773, 202.72157287597656, 32.26084899902344} -- 墓土宫殿

wing5_6 = {}
wing5_6[1] = {112.5379409790039, 141.76492309570312, 385.3811950683594} -- 墓土方舟 1
wing5_6[2] = {305.22039794921875, 121.9886703491211, 559.5912475585938} -- 墓土方舟 2

wing6_1 = {}
wing6_1[1] = {55.53321838378906, 540.8466186523438, -34.16820526123047} -- 禁阁隐藏图 1 （有螃蟹）
wing6_1[2] = {79.17311096191406, 554.5930786132812, -41.27006912231445} -- 禁阁隐藏图 2

wing6_2 = {}
wing6_2[1] = {20.375452041625977, 46.96974563598633, -67.80459594726562} -- 禁阁一楼
wing6_2[2] = {33.83650207519531, 160.9486541748047, -41.861209869384766} -- 禁阁三楼

wing6_3 = {}
wing6_3[1] = {13.375667572021484, 183.33518981933594, 41.8192253112793} -- 禁阁四楼 1
wing6_3[2] = {-38.861026763916016, 140.81689453125, 9.540506362915039} -- 禁阁四楼 2
wing6_3[3] = {48.29155349731445, 228.25335693359375, 9.058124542236328} -- 禁阁五楼
wing6_3[4] = {-0.31235575675964355, 303.815673828125, 58.40700149536133} -- 禁阁顶层

mapDoor1_1 = {}
mapDoor1_1[2] = {207.74447631835938,4.33616828918457,-74.61812591552734} -- 晨岛 去 预言山谷
mapDoor1_1[1] = {479.30438232421875, 213.60411071777344, -1033.25390625} -- 晨岛 去 云野

mapDoor1_2 = {}
mapDoor1_2[1] = {-26.03814697265625, 189.7858428955078, -20.024099349975586} -- 预言山谷 去 云野

mapDoor2_1 = {}
mapDoor2_1[1] = {78.14214324951, 160.35305786133, 67.12189483643} -- 云野一图 去 云野二图
mapDoor2_1[2] = {171.47674560546875, 162.5426025390625, 7.549071788787842} -- 云野一图 去 云野图一左图
mapDoor2_1[3] = {-17.372812271118164, 171.26510620117188, -2.61037540435791} -- 云野一图 去 云野图一右图

mapDoor2_2 = {}
mapDoor2_2[1] = {29.394287109375, 194.86085510253906, 178.98739624023438} -- 云野二图 去 云野一图
mapDoor2_2[2] = {167.26300048828125, 199.05149841308594, 220.2218780517578} -- 云野二图 去 云野左图
mapDoor2_2[3] = {-66.16556549072266, 202.1513671875, 205.2864227294922} -- 云野二图 去 云野右图
mapDoor2_2[4] = {-52.46832275390625, 180.03219604492188, 324.8914489746094} -- 云野二图 去 云野八人门图
mapDoor2_2[5] = {132.1917266845703, 255.7042694091797, 486.8236083984375} -- 云野二图 去 云野宫殿

mapDoor2_3 = {}
mapDoor2_3[1] = {189.4759521484375, 171.7332763671875, 11.3231201171875} -- 云野左图 去 云野图一
mapDoor2_3[2] = {242.37313842773438, 198.94761657714844, 227.39906311035156} -- 云野左图 去 云野图二

mapDoor2_4 = {}
mapDoor2_4[1] = {-44.61409378051758, 167.82762145996094, 35.79931640625} -- 云野右图 去 云野图一
mapDoor2_4[2] = {-101.64898681640625, 185.3963623046875, 177.490966796875} -- 云野右图 去 云野图二
mapDoor2_4[3] = {-355.1221923828125, 128.1268768310547, 96.45269012451172} -- 云野右图 去 云野圣岛

mapDoor2_5 = {}
mapDoor2_5[1] = {271.6481018066406, 174.65869140625, -30.689847946166992} -- 云野圣岛 去 云野右图

mapDoor2_6 = {}
mapDoor2_6[1] = {31.9806209564209, 42.6748161315918, 0.2945832312107086} -- 云野八人门 去 云野图二
mapDoor2_6[2] = {-0.3089582026004791, 39.503684997558594, 0.2412000596523285} -- 云野八人门 去 云野八人高层
mapDoor2_6[3] = {31.96832275390625, 42.56799604492188, 0.5813889746094} -- 云野八人门高层 去 云野图二桥上	  

mapDoor2_7 = {}
mapDoor2_7[1] = {-60.7454719543457, 85.2723159790039, 42.225738525390625} -- 云野宫殿 去 云野二图
mapDoor2_7[2] = {-132.80177307128906, 108.91059875488281, 41.570411682128906} -- 云野宫殿 去 雨林

mapDoor3_1 = {}
mapDoor3_1[1] = {29.446800231933594, 98.68903350830078, -108.74456024169922} -- 雨林图一 去 雨林图二

mapDoor3_2 = {}
mapDoor3_2[1] = {20.685760498046875, 99.02713012695312, -136.04139709472656} -- 雨林图二 去 雨林一图
mapDoor3_2[2] = {66.42562866210938, 101.82526397705078, 59.000404357910156} -- 雨林图二 去 雨林水母图
mapDoor3_2[3] = {-3.5930891036987305, 110.26566314697266, -50.209415435791016} -- 雨林图二 去 雨林隐藏图

mapDoor3_3 = {}
mapDoor3_3[1] = {54.191062927246094, 54.770408630371094, 43.37236785888672} -- 雨林隐藏图 去 雨林地底隐藏图
mapDoor3_3[2] = {17.838523864746094, 87.8037338256836, 124} -- 雨林隐藏图 去 雨林水母图

mapDoor3_4 = {}
mapDoor3_4[1] = {-57.56206130981445, 210.17996215820312, -283.5279541015625} -- 雨林地底隐藏图 去 雨林隐藏图

mapDoor3_5 = {}
mapDoor3_5[1] = {34.54833221435547, 140.7898712158203, -24.909517288208008} -- 雨林水母图 去 雨林二图
mapDoor3_5[2] = {-88.6059341430664, 153.13893127441406, 107.5584716796875} -- 雨林水母图 去 雨林隐藏图
mapDoor3_5[3] = {-17.36788558959961, 182.655517578125, 402.27899169921875} -- 雨林水母图 去 雨林宫殿

mapDoor3_6 = {}
mapDoor3_6[1] = {6.131390571594238, 196.65492248535156, 224.84304809570312} -- 雨林宫殿 去 霞谷

mapDoor4_1 = {}
mapDoor4_1[1] = {206.29270935058594, 57.820106506347656, -604.9664916992188} -- 霞谷一图 去 霞光城
mapDoor4_1[2] = {290.24816894531, 39.45797729492, -527.30267333984} -- 霞谷一图 去 滑雪赛道

mapDoor4_2 = {}
mapDoor4_2[1] = {73.36077117919922, 401.12408447265625, 419.9203186035156} -- 霞光城 去 霞谷一图
mapDoor4_2[2] = {204.70770263671875, 491.51055908203125, -205.14031982421875} -- 霞光城 去 飞行赛道

mapDoor4_3 = {}
mapDoor4_3[1] = {197.74876403808594, 1187.371826171875, 401.7279968261719} -- 飞行赛道 去 霞光城
mapDoor4_3[2] = {137, 1017, -100} -- 飞行赛道 去 赛道终点

mapDoor4_4 = {}
mapDoor4_4[1] = {159.67559814453125, 935.6044921875, 694.3646850585938} -- 滑雪赛道 去 霞谷一图
mapDoor4_4[2] = {256.20028686523, 585.98559570312, -564.76477050781} -- 滑雪赛道 去 赛道终点

mapDoor4_5 = {}
mapDoor4_5[1] = {60.74193572998047, 137.8476104736328, -292.3225402832031} -- 赛道终点 去 霞谷宫殿

mapDoor4_6 = {}
mapDoor4_6[1] = {10.245643615722656, 138.33311462402344, -111.68052673339844} -- 霞谷宫殿 去 赛道终点
mapDoor4_6[2] = {8.038422584533691, 141.21749877929688, -197.4063262939453} -- 霞谷宫殿 去 墓土

mapDoor5_1 = {}
mapDoor5_1[1] = {-210.83389282226562, 43.8532829284668, -825.1362915039062} -- 墓土图一 去 墓土图二（漩涡）

mapDoor5_2 = {}
mapDoor5_2[1] = {-91.55247497558594, 11.722831726074219, 155.88690185546875} -- 墓土图二 去 墓土图三（五龙图）
mapDoor5_2[2] = {151.09547424316, 1.08663058281, 46.78000259399} -- 墓土图二 去 墓土方舟

mapDoor5_3 = {}
mapDoor5_3[1] = {-54.07447052001953, 142.2625732421875, 166.9073028564453} -- 墓土方舟 去 墓土二图

mapDoor5_4 = {}
mapDoor5_4[1] = {54.025001525878906, 92.6716079711914, 366.3347473144531} -- 墓土三图 去 墓土二图
mapDoor5_4[2] = {192.6549835205078, 68.13046264648438, -72.91191864013672} -- 墓土三图 去 墓土沉船图
-- mapDoor5_4[2] = {107.2874526977539,90.1808090209961,-6.916711330413818} -- 墓土三图 去 墓土沉船图（不是水管）
mapDoor5_4[3] = {33.42117691040039, 78.67302703857422, -258.74566650390625} -- 墓土三图 去 墓土古战场图

mapDoor5_5 = {}
mapDoor5_5[1] = {-41.51137161254883, 9.873563766479492, 530.5987548828125} -- 墓土沉船图 去 墓土三图
mapDoor5_5[2] = {-349.27203369140625, 34.950706481933594, 387.2141418457031} -- 墓土沉船图 去 墓土古战场图

mapDoor5_6 = {}
mapDoor5_6[1] = {46.06527328491211, 92.09526062011719, -39.3640022277832} -- 古战场 去 墓土三图
mapDoor5_6[2] = {-289.4688415527344, 93.0536117553711, -404.3544921875} -- 古战场 去 墓土宫殿
mapDoor5_6[3] = {59.64519119262695, 112.9639892578125, -263.3550109863281} -- 古战场 去 墓土沉船

mapDoor5_7 = {}
mapDoor5_7[1] = {-1.7305372953414917, 207.7891387939453, -66.75567626953125} -- 墓土宫殿 去 禁阁

mapDoor6_1 = {}
mapDoor6_1[1] = {-42.6407585144043, 38.3612060546875, -98.20526123046875} -- 禁阁底层 去 禁阁隐藏图
mapDoor6_1[2] = {-0.1043953374, 214.60452270508, 2.59286475182} -- 禁阁底层 去 禁阁高层
mapDoor6_1[3] = {-2.3683698177337646,37.12582778930664,-172.75494384765625} -- 禁阁底层 去 禁阁办公室

mapDoor6_2 = {}
mapDoor6_2[1] = {40.35205459595, 541.86962890625, -25.08329963684} -- 禁阁隐藏图 去 禁阁底层

mapDoor6_3 = {}
mapDoor6_3[1] = {7.157510280609131,62.34695816040039,-26.602800369262695} -- 禁阁办公室 去 禁阁底层

function Exit()
    gg.clearResults()
    gg.clearList()
    os.exit()
end

-- 内存范围
function YF_Search(value, type)
    gg.clearResults()
    gg.searchNumber(value, type, false, gg.SING_EQUAL, "0x" .. YF_Start,
                    "0x" .. YF_End)
end

local zera = {}
local zerb = {}
local xyz = {}
zerb.address = gg.getValues({[1] = {address =gg.getRangesList('libBootloader.so')[1].start+0x1E711D0,flags = 32}})[1].value+3550372--人物核心
zera.address = gg.getValues({[1] = {address =gg.getRangesList('libBootloader.so')[1].start+0x22C1210,flags = 32}})[1].value+21451920--地图核心

huazhi = {}
huazhi[1] = {}
huazhi[1].address = zera.address - 21451696-124
huazhi[1].flags = 4

zhenlu = {}
zhenlu[1] = {}
zhenlu[1].address = zera.address - 21451696-116
zhenlu[1].flags = 4

function sethuazhi(b)
  huazhi[1].value = b
  huazhi[1].freeze = true
  gg.addListItems(huazhi)
end
function setzhenlu(b)
  zhenlu[1].value = b
  zhenlu[1].freeze = true
  gg.addListItems(zhenlu)
end

function hzzl()
  huazhi = gg.getValues(huazhi)
  zhenlu = gg.getValues(zhenlu)
  bin = gg.prompt({
    "tip:提高帧率可以增加游戏的流畅度。\n画质0~3级[0;3]",
    "帧率1~144[1;144]"
  }, {
    huazhi[1].value,
    zhenlu[1].value
  }, {"number", "number"})
  if bin == nil then
    return nil
  end
  sethuazhi(bin[1])
  setzhenlu(bin[2])
  gg.alert("设置成功[" .. bin[1] .. "级画质][" .. bin[2] .. "帧]\n打开游戏设置，随便切换一下画质就可以生效。")
end

  --显示隐藏蜡烛
xianlazhu = {}
for i = 1, 193 do 
  xianlazhu[i] = {}
  xianlazhu[i].address = zera.address + 112 *( i - 1)  + 4934240
  xianlazhu[i].flags = 4
end

 --显蜡烛
function xianlazhuk()
  for i = 1,193 do
  xianlazhu[i].value = 28673
  end
  gg.setValues(xianlazhu)
end
-- 秒坐坛
function miaozuotan()
  gg.toast("坐坛CD归零完成")
  for i = 1, 5 do
    zuotan[i].value = 65535
    zuotan[i].freeze = true
  end
  gg.setValues(zuotan)
  gg.addListItems(zuotan)
end
zuotan = {}
      for i=1,5 do
        zuotan[i] = {}
        zuotan[i].address = zera.address + (i - 1) * 24 + 10383528
        zuotan[i].flags = 4
     end
-- 人等级
  dengji = {}
  dengji[1] = {}
  dengji[1].address = zerb.address - 56684  
  dengji[1].flags = 4
  gg.addListItems(dengji)	 
--人坐标
renzuobiao = {}
for i = 1, 3 do
  renzuobiao[i] ={}
  renzuobiao[i].address = zerb.address + 4 * (i - 1) - 23220
  renzuobiao[i].flags = 16
end
--吸光球
function lt()
mems=gg.getRangesList("anon:libc_malloc") function search(...) gg.clearResults() local tem = {...} gg.searchNumber(tem[1],tem[2],false,gg.SIGN_EQUAL,mems[1]["start"],mems[#mems-3]["end"]) end
gg.setRanges(4)
search("412316861107",32)
local a=gg.getResults(1)[1].address
gg.clearResults()
lightcor={}
renzuobiao = gg.getValues(renzuobiao)
for i=1,3 do
lightcor[i]={}
lightcor[i]={address=a+0x90+4*(i-1),flags=16}
end
gg.addListItems(lightcor)
for i=1,10 do
lightcor = gg.getValues(lightcor)
Teleport({lightcor[1].value;lightcor[2].value;lightcor[3].value})
gg.toast("光球任务完成✔")
end
end

-- 光芒
guangmangzuobiao = {}
for v = 1, 3 do
    guangmangzuobiao[v] = {}
    for i = 1, 77 do
        guangmangzuobiao[v][i] = {}
        guangmangzuobiao[v][i].address =
            zera.address + 528 * (i - 1) + 4 * (v - 1) + 8215712
        guangmangzuobiao[v][i].flags = 16
    end
end
--吸光翼值
  guangyi= {}
for i = 1,9 do
  guangyi[i] = {}
  guangyi[i].address = zera.address + 304 * (i - 1) + 4795112
  guangyi[i].flags = 4 
end
  -- 花坐标
huazuobiao = {}
  for v = 1, 3 do
      huazuobiao[v] = {}
      for i = 1, 266 do
          huazuobiao[v][i] = {}
          huazuobiao[v][i].address =
              zera.address + 416 * (i - 1) + 4 * (v - 1) + 7790864
          huazuobiao[v][i].flags = 16
      end
  end

--吸花
function xihua()
      for i = 1, 3 do
          renzuobiao = gg.getValues(renzuobiao)
          xyz[i] = renzuobiao[i].value
      end
      for v = 1, 3 do
          for i = 1, 266 do huazuobiao[v][i].value = xyz[v] end
          gg.setValues(huazuobiao[v])
         -- gg.addListItems(huazuobiao[v])
      end
end

-- 琛加速
function speedUp(speed)
  if data[8] == nil then
    gg.setSpeed(speed)
  else
    data[8][1].value = speed
    gg.setValues(data[8])
    gg.addListItems(data[8])
  end
end

-- 琛重置速度
function resetSpeed()
  if data[8] == nil then
    gg.setSpeed(1)
  else
    data[8][1].value = 1
    gg.setValues(data[8])
    gg.addListItems(data[8])
  end
end

-- 吸光翼
function xiguangyi()
    for i = 1, 3 do
        renzuobiao = gg.getValues(renzuobiao)
        xyz[i] = renzuobiao[i].value
    end
    for v = 1, 3 do
        for i = 1, 9 do guangyi[v][i].value = xyz[v] end
        gg.setValues(guangyi[v])
    end
    gg.toast("光芒吸取完成")
end

--无翼
function wuyi()
      gg.clearResults()
      gg.setRanges(4)
      YF_Search("256", gg.TYPE_DWORD)
      local wxfks = gg.getResultCount()
      if wxfks ~= 0 then
        local wxf = gg.getResults(wxfks)
        local tmp = {}
        
            for _FORV_6_, _FORV_7_ in pairs(wxf) do
              tmp[#tmp + 1] = {}
              tmp[#tmp].address = _FORV_7_.address + 60
              tmp[#tmp].flags = gg.TYPE_FLOAT
            
        end
        tmp = gg.getValues(tmp)
        
          for _FORV_6_, _FORV_7_ in pairs(tmp) do
            if _FORV_7_.value == 1.25 then
              energy = tonumber(_FORV_7_.address)
              break
          end
        end
      gg.clearResults()
      if energy == nil or wxfks == 0 then
        gg.toast("能量地址获取失败❌请重试或重启游戏")
        gg.sleep(1000)
        return false
      end
    local senergy={}
    senergy[1] = {}
    senergy[1].flags = gg.TYPE_FLOAT
    senergy[1].address = energy -56
    senergy[1].value = "14"
    senergy[1].freeze = true
    senergy[2] = {}
    senergy[2].flags = gg.TYPE_FLOAT
    senergy[2].address = energy -16
    senergy[2].value = "0"
      if wy == "on" then
    gg.removeListItems(senergy)
    wy = "off"
    gg.toast("已关闭，切图后生效")
    gg.setVisible(false)
    
    else 
    senergy[2].freeze = true
    gg.addListItems(senergy)
    gg.clearResults()
    wy = "on"
    gg.toast("开启成功")
    gg.setVisible(false)
    
  end
  end
  gg.clearResults()
  end
--临时光翼
function ChangeGY()
    local num_GY = gg.prompt({
      "请输入光翼的数量"}, {[1] = "100"}, { [1] = "number" })
    if num_GY == nil then
      return 0
    else
      num_GY = tonumber(num_GY[1])
      if num_GY == 0 or num_GY == 1056964608 then
        num_GY = 1056964608
      elseif num_GY > 300 then
        gg.alert("请输入大于0，且不超过300的整数")
        return 0
      end
    end
    A_xggy(num_GY)
end

function A_xggy(x)
  dengji[1].value = x
    gg.setValues(dengji)
end
-- 多少秒倒计时
function TimeCountdown(s)
    for i = 1, s do
        gg.toast("倒计时 " .. s - i .. " 秒")
        gg.sleep(1000)
    end
end

function A_PTJG()
  local tmp = gg.prompt({
    "瞬移间隔（默认500毫秒）[100,5000]",
    "过图间隔（默认10000毫秒）[500,20000]",
	"光速过图间隔（默认5000毫秒）[500,20000]"
  }, {
    [1] = CandleSleepTime,
    [2] = GTJG,
    [3] = GSJG,	
  }, {
    [1] = "number",
    [2] = "number",
    [3] = "number",	
  })
  if tmp == nil then
    return 0
  end
  if tmp[1] == "" then
     tmp[1] = 500
  end
  if tmp[2] == "" then
     tmp[2] = 10000
  end
   if tmp[3] == "" then
      tmp[3] = 5000
  end 
  CandleSleepTime = tonumber(tmp[1])
  GTJG = tonumber(tmp[2])
  GSJG = tonumber(tmp[3])
  gg.toast("✔设置成功ヾﾉ≧∀≦)o\n\n瞬移间隔：" .. CandleSleepTime .. "毫秒\n过图间隔：" .. GTJG .. "毫秒\n光速过图间隔：" .. GSJG .. "毫秒")
  --SaveSchedule(-1)
end

function initRamRange()
    gg.toast("正在初始化内存范围")
    gg.clearResults()
    gg.setRanges(gg.REGION_C_BSS)
    gg.searchNumber("000003E7h", 4)
    local address = gg.getResults(1)[1].address
    gg.clearResults()
    YF_Start = string.format("%#x", address - 2000000000)
    YF_End = string.format("%#x", address + 500000000)

    if YF_End ~= nil then
        gg.toast("\r\nYiFang Anti Flashback：√")
    else
        gg.toast("\r\nYiFang Anti Flashback：× ")
        Exit()
    end
    gg.toast(
        "感谢各位大佬的开源")
    gg.clearResults()
end

-- 获取角色坐标内存地址
function getCoordinate()
    gg.toast("正在初始化角色坐标")
    gg.clearResults()
    gg.setRanges(4)
    YF_Search("-1,067,909,120", gg.TYPE_DWORD)
    gg.refineNumber("-1,067,909,120", gg.TYPE_DWORD)
    local resultCount = gg.getResultCount()
    if resultCount >= 1 then
        local results = gg.getResults(resultCount)
        local temp = {}
        for k, v in pairs(results) do
            temp[#temp + 1] = {}
            temp[#temp].address = v.address + 60
            temp[#temp].flags = gg.TYPE_DWORD
        end
        temp = gg.getValues(temp)
        for k, v in pairs(temp) do
            if v.value == 1 then
                results[1] = temp[k]
                break
            end
        end

        local tempData = {}
        tempData[1] = {}
        tempData[1].address = results[1].address + 92
        tempData[1].flags = gg.TYPE_DWORD
        data[1] = gg.getValues(tempData)[1]
        gg.clearResults()
        gg.toast("人物坐标获取成功")
    else
        gg.toast("人物坐标获取失败")
        os.exit()
    end
end

-- 获取能量内存地址
function getEnergyAddress()
    gg.toast("正在初始化能量核心")
    local address = {}
    gg.clearResults()
    gg.setRanges(4)
    YF_Search("256", gg.TYPE_DWORD)
    gg.refineNumber("256", gg.TYPE_DWORD, false, gg.SIGN_EQUAL,
                    "0x" .. YF_Start, "0x" .. YF_End)
    local resultCount = gg.getResultsCount()

    if resultCount == 0 then
        gg.toast("获取能量核心失败")
        Exit()
    end
    local resultList = gg.getResults(resultCount)
    local tmp = {}
    for i, v in pairs(resultList) do
        tmp[#tmp + 1] = {}
        tmp[#tmp].address = v.address + 60
        tmp[#tmp].flags = gg.TYPE_FLOAT
    end
    tmp = gg.getValues(tmp)
    for i, v in pairs(tmp) do
        if v.value == 1.25 then
            resultList[1] = tmp[i]
            break
        end
    end
    local tempData = {}
    tempData[1] = {}
    tempData[1].address = resultList[1].address - 56
    tempData[1].flags = gg.TYPE_FLOAT
    tempData[1].value = "14"

    data[2] = tempData
    MagicAddress = resultList[1].address
    -- freeze 为 true 时无限能量，为 false 时不是无限能量
    -- tempData[1].freeze = true
end

function getLightAndMap()
    local addr = gg.getValues({
        [1] = {
            address = gg.getRangesList('libBootloader.so')[1].start + 0x22C1210,
            flags = 32
        }
    })[1].value + 21451920
	
        data[8] = {}
        data[8][1] = {}
        data[8][1].address = addr - 21451696
        data[8][1].flags = 16
        local tempSpeed = gg.getValues(data[8])
        gameSpeed = tempSpeed[1].value -- 初始化默认速度
  end
  
function dianlazhu()
 tmp = {}
    for i=1,450 do
      tmp[i] = {}
      tmp[i].address = zera.address + (i - 1) * 448
      tmp[i].flags = gg.TYPE_FLOAT
      tmp[i].value = 2
      tmp[i].freeze = true
    end
    gg.setValues(tmp)
    gg.addListItems(tmp)
end


function fdianlazhu()
 tmp = {}
    for i=1,450 do
      tmp[i] = {}
      tmp[i].address = zera.address + (i - 1) * 448
      tmp[i].flags = gg.TYPE_FLOAT
      tmp[i].value = 0
      tmp[i].freeze = false
    end
    gg.setValues(tmp)
    gg.addListItems(tmp)
	gg.removeListItems(tmp)
end

-- 全图点燃开关
KG_qtdr = "启动"
function A_qtdr()
if KG_qtdr == "启动" or KG_qtdr == "开" then
    dianlazhu()
    KG_qtdr = "关"
    gg.toast("蜡烛点燃开启")
 else
    fdianlazhu()
    KG_qtdr = "开"
    gg.toast("蜡烛点燃关闭")
end
end

--光芒吸取
function xiguangmang()
    for i = 1, 3 do
        renzuobiao = gg.getValues(renzuobiao)
        xyz[i] = renzuobiao[i].value
    end
    for v = 1, 3 do
        for i = 1, 77 do guangmangzuobiao[v][i].value = xyz[v] end
        gg.setValues(guangmangzuobiao[v])
    end
    gg.toast("光芒吸取完成")
end

-- 人物内存地址
function getMapLocationAddress()
     local addr = gg.getValues({
        [1] = {
            address = gg.getRangesList('libBootloader.so')[1].start + 0x1E711D0,
            flags = 32
        }
    })[1].value + 3550372
    data[5] = {}
    data[5][1] = {}
    data[5][1].address = addr - 1522560
    data[5][1].flags = 4
end

-- 初始化花朵内存地址
function getFlowerAddress()

    tmp = {}
    for i = 1, 266 do
        tmp[i] = {}
        tmp[i].address = zera.address + i * 8 + 10359708
        tmp[i].flags = gg.TYPE_FLOAT
        tmp[i].value = 0
        tmp[i].freeze = true
    end
    gg.setValues(tmp)
    gg.addListItems(tmp)
end

-- 恢复花朵内存地址
function NgetFlowerAddress()

    tmp = {}
    for i = 1, 266 do
      tmp[i] = {}
      tmp[i].address = zera.address  + i * 8 + 10359708
      tmp[i].flags = gg.TYPE_FLOAT
      tmp[i].value = 1
      tmp[i].freeze = false
    end
    gg.setValues(tmp)
    gg.addListItems(tmp)
	gg.removeListItems(tmp)
end

-- 全图炸花开关
KG_qtzh = "启动"
function A_qtzh()
if KG_qtzh == "启动" or KG_qtzh == "开" then
    getFlowerAddress()
    KG_qtzh = "关"
    gg.toast("炸花开启")
 else
   NgetFlowerAddress()
    KG_qtzh = "开"
    gg.toast("炸花关闭")
end
end


-- 判断当前位置
function getLocation()
    local currentLocationNum = gg.getValues(data[5])
    for i = 1, 45 do
        if currentLocationNum[1].value == door[i][2] then
            currentLocationIndex = i
        end
    end
end

-- 修改角色状态（站：0，一级坐：2，二级坐：1，躺：3）
function changeRoleStatus(status)
    local action = {
        {flags = 4, value = status, address = zerb.address - 10076}
    }
    gg.setValues(action)
end

-- 修改角色状态原版（站：0，一级坐：2，二级坐：1，躺：3）
--[[function changeRoleStatus(status)
    local action = {
        {flags = 4, value = status, address = data[1].address + 13148}
    }
    gg.setValues(action)
end]]

-- 全图点火
function LightAFire() gg.setValues(candle) end


-- 无限能量切换
-- status：Boolean
function UnlimitedEnergyStatus(status)
    data[2][1].freeze = status
    gg.addListItems(data[2])
    gg.clearResults()
    energyStatus = status
    if energyStatus == true then
        gg.toast("『无限能量』已开启")
    else
        gg.toast("『无限能量』已关闭")
    end
end

-- 琛无限能量无敌状态
KG_wxnl = '启动'
function A_wxnl() -- 无限能量
	if KG_wxnl == '启动' then
		gg.clearResults()
		gg.setRanges(4)
		YF_Search('256', gg.TYPE_DWORD)
		local wxfks = gg.getResultCount()
		if wxfks ~= 0 then
			local wxf = gg.getResults(wxfks)
			local tmp = {}
			for k, v in pairs(wxf) do
				tmp[#tmp + 1] = {}
				tmp[#tmp].address = v.address + 60
				tmp[#tmp].flags = gg.TYPE_FLOAT
			end
			tmp = gg.getValues(tmp)
			
			for k, v in pairs(tmp) do
				if v.value == 1.25 then
					energy = tonumber(v.address)
					break
				end
			end
		end
		gg.clearResults()
		
		if energy == nil or wxfks == 0 then
			gg.toast('能量地址获取失败❌请重试或重启游戏')
			gg.sleep(1000)
			return false
		end
		
		wxfpy = {}
		wxfpy[1] = {}
		wxfpy[1].address = energy - 56
		wxfpy[1].flags = gg.TYPE_FLOAT
		wxfpy[1].value = 14
		
		wxfpy[2] = {}
		wxfpy[2].address = energy + 69
		wxfpy[2].flags = gg.TYPE_DWORD
		wxfpy[2].value = 0
		
		gg.toast('✔获取能量地址成功！')
		KG_wxnl = '开'
	end
	
	if KG_wxnl == '开' then
		wxfpy[1].freeze = true
		wxfpy[2].freeze = true
		gg.addListItems(wxfpy)
		gg.toast('✔无限能量+无敌状态 开启⚡⚡⚡')
		KG_wxnl = '关'
	else
		wxfpy[1].freeze = false
		wxfpy[2].freeze = false
		gg.addListItems(wxfpy)
		gg.toast('无限能量+无敌状态 关闭❌')
		KG_wxnl = '开'
	end
end

--开七门
function KQM()
  renyimen(32)
  speedUp(300)
  gg.setVisible(false) 
  gg.sleep(9000)
  Teleport({9.934490203857422;328.060546875;14.1777982711792})
  gg.sleep(3000)
  renyimen(1) 
  gg.sleep(1000)
  Teleport({1.249151587486267;0.7454519867897034;5.2902655601501465})
  gg.sleep(800) 
  changeRoleStatus(1) gg.sleep(600) changeRoleStatus(2) gg.sleep(2000)
  Teleport({9.934490203857422;328.060546875;14.1777982711792})
  gg.sleep(9000) speedUp(1)
end

--任意门
local init_tabkey={"address","flags","value"}
function seaio(t,a,b,c)
  t[#t+1]={}
  t[#t][init_tabkey[1]]=a
  t[#t][init_tabkey[2]]=b
  if c then t[#t][init_tabkey[3]]=c end
end
function renyimen(str)
    map_color="0"
    local dat,offset,date,door,doorx,zb,tem,temb,color
    if not Any_daddr then
      gg.clearResults()
      gg.setRanges(gg.REGION_C_ALLOC)
      YF_Search("14700~14800" ,4)
      resultCount = gg.getResultCount()
      if resultCount == 0 then
        return 0
      end
      result = gg.getResults(resultCount)
      tmp = {}
      gg.clearResults()
      for k, v in pairs(result) do
        tmp[#tmp+1] = {}
        tmp[#tmp].address = v.address + 0x84
        tmp[#tmp].flags = 16
      end
      tmp = gg.getValues(tmp)
      for k, v in ipairs(tmp) do
        if v.value ==1 then
          Any_daddr = result[k].address+0x84
          break
        end
      end
    end
    door,doorx=Any_daddr,{mapN[str][1]:byte(0,-1)}
    color={(string.char(#map_color*2)..map_color):byte(0,-1)}
    tem,temb={},{}
    seaio(tem,door-0x14,16,80000)
    seaio(tem,door-0x28,16,80000)
    seaio(tem,door-0x3C,16,80000)
    for j=1,24 do seaio(temb,door+0x3738+j-1,1,doorx[j] or 0)end
    seaio(temb,door+0x34,32,49)
    seaio(temb,door+0x34+8,32,24)
    seaio(temb,door+0x34+16,32,door+0x3738)
    for j=1,16 do seaio(temb,door+0x34+24+j-1,1,color[j] or 0)end
    seaio(temb,door+0x68,4,1)
    seaio(temb,door+0x3818-0x84,4,1)
    gg.setValues(temb)
    gg.setValues(tem)
      renyimentime = os.time()
      X=nil
      while (X ~= str) do
        wzpd()
        renyimentime1 = os.time() - renyimentime
        if renyimentime1 > 7 then break end
      end
    return true
end

-- 修改角色坐标(瞬移)
function Teleport(xzy)
    Menu = nil
    local x = xzy[1]
    local z = xzy[2]
    local y = xzy[3]
    local t = {}
    t[1] = {}
    t[1].address = data[1].address + 4
    t[1].flags = 16
    t[1].value = x
    t[2] = {}
    t[2].address = data[1].address + 8
    t[2].flags = 16
    t[2].value = z
    t[3] = {}
    t[3].address = data[1].address + 12
    t[3].flags = 16
    t[3].value = y
    gg.setValues(t)
end

-- 吸烛火
function absorbCandlelight()
    gg.clearResults()
    gg.setRanges(gg.REGION_C_ALLOC)
    YF_Search("-842203136", 4)
    local resultCount = gg.getResultCount()
    if resultCount == 0 then
        gg.toast("地图核心获取失败")
        os.exit()
    end
    local result = gg.getResults(resultCount)
    local tmp = {}
    for i, v in ipairs(result) do
        tmp[#tmp + 1] = {}
        tmp[#tmp].address = v.address - 12
        tmp[#tmp].flags = 16
    end
    local x = {}
    tmp = gg.getValues(tmp)
    for i, v in ipairs(tmp) do
        if "" .. v.value == "3.5" then
            x[#x + 1] = {}
            x[#x].address = tmp[i].address
            x[#x].flags = 16
            x[#x].value = 999999
        end
    end
    gg.setValues(x)
    gg.clearResults()
    gg.toast("烛火吸收完毕")
end

--动作升级
function dzsj()
gg.setRanges(4)
gg.clearResults()
YF_Search(':emote_upgrade',gg.TYPE_BYTE)
gg.getResults(gg.getResultCount())
gg.setRanges(10000)
gg.editAll(':0',gg.TYPE_BYTE)
gg.clearResults()
gg.setRanges(4)
YF_Search("1936026722", gg.TYPE_QWORD)
gg.refineNumber("1936026722", gg.TYPE_QWORD)
ResultCount = gg.getResultCount()
local bbc = {}
local tmp = {}
if ResultCount ~= 0 then
  result = gg.getResults(ResultCount)
  for k, v in pairs(result) do
    tmp[#tmp + 1] = {}
    tmp[#tmp].address = v.address + 248
    tmp[#tmp].flags = gg.TYPE_DWORD
  end
  tmp = gg.getValues(tmp)
  for k, v in pairs(tmp) do
    if v.value == 1 then
      for i = 1, 100 do
        bbc[#bbc + 1] = {}
        bbc[#bbc].address = tmp[k].address + 8 + i * 48
        bbc[#bbc].flags = gg.TYPE_DWORD
        bbc[#bbc].value = 6
      end
      break
    end
  end
  gg.addListItems(bbc)
  gg.setValues(bbc)
end
gg.isVisible(false)
gg.toast("动作升级:√")
end

  -----无限烟花
function wxyh()
    gg.setVisible(false)
    gg.clearResults()
    gg.setRanges(4)
    YF_Search("-1076845609", gg.TYPE_DWORD)
    local XianShen_Jg = gg.getResultCount()
    if XianShen_Jg ~= 0 then
      local XianShen_Zjg = gg.getResults(XianShen_Jg)
      local jb = {}
      for k, v in pairs(XianShen_Zjg) do
        jb[#jb + 1] = {}
        jb[#jb].address = v.address + 28
        jb[#jb].flags = gg.TYPE_DWORD
      end
      jb = gg.getValues(jb)
      for k, v in pairs(jb) do
        if v.value == 5 then
          XianShen_Zjg[1] = jb[k]
          break
        end
      end
      local XianShen_Wxyh = {}
      XianShen_Wxyh[1] = {}
      XianShen_Wxyh[1].address = XianShen_Zjg[1].address - 4
      XianShen_Wxyh[1].flags = gg.TYPE_DWORD
      XianShen_Wxyh[1].value = "6"
      XianShen_Wxyh[1].freeze = true
      gg.addListItems(XianShen_Wxyh)
      gg.clearResults()
      gg.alert('无限烟花开启成功\n若无效请手持烟花棒到放烟花界面重新执行') gg.setVisible(false)
    else
      gg.toast('无限烟花开启失败')
    end
end

-- 晨岛主图
function PT1Small_00()
if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    if TempMenu ~= "RunModeSmallMenu" then
        gg.toast("请一定要及时跳过动画喔！")
    end
    for i = 1, 8 do
        if (i == 6 or i == 8) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        Teleport(map1[i])
        gg.toast("瞬移晨岛蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("晨岛跑图完成")
end

-- 预言山谷地图
function PT1Small_0()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
     Teleport({-13.580814361572266, 247.49691772460938, -269.1416931152344})--晨岛山谷
     gg.sleep(1000)
     Teleport({-3.0753376483917236, 236.10751342773438, -300.12933349609375})--大蜡烛
     gg.sleep(CandleSleepTime)
     Teleport({-13.504182815551758, 303.2855224609375, -325.5300598144531})--心蜡烛
     gg.sleep(CandleSleepTime)
	 Teleport({-14.003534317016602, 236.26931762695312, -296.08087158203125})--传送到预言先祖
	 gg.sleep(1000)
end

-- 晨岛水试炼
function PT1Small_1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({-79.38170623779297, 245.55145263671875, -304.3076477050781})--水试炼大门口
    gg.sleep(4000)
    Teleport({-84.78968811035156, 245.67001342773438, -303.6841125488281})--水试炼进门
    gg.sleep(4000)
    Teleport({-89.16385650634766, 244.69090270996094, -304.1976013183594})--水试炼打坐坐标
    for i=1,3 do
     getLocation()
	 if currentLocationIndex == 41 then
	    gg.sleep(1000)
        changeRoleStatus(2)
        speedUp(10)
        gg.sleep(5000)
        resetSpeed()
        gg.sleep(2000)
        end
	end
    Teleport({36.868011474609375, 65.70532989501953, -99.9117202758789})--水试炼小烛火
    gg.sleep(CandleSleepTime)
    Teleport({-107.43086242675781, 65.50455474853516, -210.9021759033203})--水试炼小烛火2
    gg.sleep(CandleSleepTime)
    Teleport({44.367279052734375, 67.7935791015625, -272.3880615234375})--水试炼终点变成小金人
	gg.sleep(1000)
    changeRoleStatus(2)
    speedUp(10)
    gg.sleep(5000)
	resetSpeed()
   for i=1,2 do
     getLocation()
	 if currentLocationIndex == 42 then
         gg.sleep(1000)
         Teleport({-0.08424784243106842, 78.7279281616211, -411.3664855957031})--水试炼终点打坐 
	     gg.sleep(1000)
         changeRoleStatus(2)
		 speedUp(10)
         gg.sleep(5000)
	     resetSpeed()
	     gg.toast("水试炼完成") 
        end
	end
    Teleport({-14.003534317016602, 236.26931762695312, -296.08087158203125})--传送到预言先祖
end

-- 晨岛土试炼
function PT1Small_2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({-28.56879425048828, 253.2388458251953, -362.6758728027344})--土试炼大门口
    gg.sleep(4000)
    Teleport({-27.168123245239258, 253.28070068359375, -366.8533630371094})--土试炼进门
    gg.sleep(4000)
    Teleport({-28.512170791625977, 253.98023986816406, -372.14373779296875})--土试炼打坐
    for i=1,3 do
     getLocation()
	 if currentLocationIndex == 41 then
	    gg.sleep(1000)
        changeRoleStatus(2)
        speedUp(10)
        gg.sleep(5000)
        resetSpeed()
        gg.sleep(2000)
        end
	end
    Teleport({1.735385537147522, 128.1443328857422, 15.329035758972168})--土试炼变金人
	gg.sleep(1000)
    changeRoleStatus(2)
    speedUp(10)
    gg.sleep(5000)
	resetSpeed()  
	absorbCandlelight()
    gg.sleep(2000)
   for i=1,2 do
     getLocation()
	 if currentLocationIndex == 43 then
         gg.sleep(1000)
         Teleport({-13.414966583251953, 134.02528381347656, 3.3821189403533936})--土试炼终点打坐
		 gg.sleep(1000)
         changeRoleStatus(2)
		 speedUp(10)
         gg.sleep(5000)
	     resetSpeed()
	     gg.toast("土试炼完成")
        end
	end	
	Teleport({-14.003534317016602, 236.26931762695312, -296.08087158203125})--传送到预言先祖
end

--晨岛风试炼
function PT1Small_3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({13.195307731628418, 259.0015869140625, -342.18206787109375})--风试炼大门口
    gg.sleep(4000)
    Teleport({18.96930503845215, 259.0000305175781, -345.9305725097656})--风试炼进门
    gg.sleep(5000)
    Teleport({24.27056121826172, 261.08831787109375, -356.6015319824219})
    gg.sleep(2000)
    Teleport({21.8641414642334, 259.192138671875, -346.8420104980469})--风试炼打坐
    for i=1,3 do
     getLocation()
	 if currentLocationIndex == 41 then
	    gg.sleep(1000)
        changeRoleStatus(2)
        speedUp(10)
        gg.sleep(5000)
        resetSpeed()
        gg.sleep(2000)
        end
	end
    Teleport({-29.30263900756836, 90.48784637451172, -130.78927612304688})--风试炼变金人
    gg.sleep(2000)
    absorbCandlelight()
    gg.sleep(2000)
   for i=1,2 do
     getLocation()
	 if currentLocationIndex == 44 then
         gg.sleep(1000)
         Teleport({-11.267420768737793, 106.16172790527344, -130.19729614257812})--风试炼终点打坐
	     gg.sleep(1000)
         changeRoleStatus(2)
		 speedUp(10)
         gg.sleep(5000)
	     resetSpeed()
	     gg.toast("风试炼完成")
        end
	end		
    Teleport({-14.003534317016602, 236.26931762695312, -296.08087158203125})--传送到预言先祖
end

--晨岛火试炼
function PT1Small_4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({48.99031448364258, 251.21823120117188, -318.751708984375})--火试炼大门口
    gg.sleep(4000)
    Teleport({53.42277908325195, 251.5115966796875, -321.8296203613281})--火试炼进门
    gg.sleep(5000)
    Teleport({57.50935745239258, 251.38218688964844, -326.727783203125})--火试炼打坐
    for i=1,3 do
     getLocation()
	 if currentLocationIndex == 41 then
	    gg.sleep(1000)
        changeRoleStatus(2)
        speedUp(10)
        gg.sleep(5000)
        resetSpeed()
        gg.sleep(2000)
        end
	end
    Teleport({-12.09290599822998, 49.98724365234375, -257.1791076660156})--火试炼变金人
    gg.sleep(1000)
    changeRoleStatus(2)
    speedUp(10)
    gg.sleep(5000)
	resetSpeed()  	
    absorbCandlelight()
    gg.sleep(2000)
   for i=1,2 do
      getLocation()
	 if currentLocationIndex == 45 then
         gg.sleep(1000)
         Teleport({-11.45339298248291, 49.98954391479492, -307.6058654785156})--火试炼终点打坐
	     gg.sleep(1000)
         changeRoleStatus(2)
		 speedUp(10)
         gg.sleep(5000)
	     resetSpeed()
	     gg.toast("火试炼完成")
        end
	end		
    Teleport({-14.003534317016602, 236.26931762695312, -296.08087158203125})--传送到预言先祖	
end

-- 预言试炼
function PT1Small_5()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    gg.sleep(3000)
    Teleport({207.74447631835938,4.33616828918457,-74.61812591552734})--晨岛进山谷
    gg.sleep(5000)
    Teleport({-13.580814361572266, 247.49691772460938, -269.1416931152344})--晨岛山谷
    gg.sleep(1000)
    Teleport({-3.0753376483917236, 236.10751342773438, -300.12933349609375})--大蜡烛
    gg.sleep(500)
    Teleport({-13.504182815551758, 303.2855224609375, -325.5300598144531})--心蜡烛
    gg.sleep(2000)
	PT1Small_1()
	PT1Small_2()
	PT1Small_3()
    PT1Small_4()
    gg.toast("预言季试炼完成")	
end


function PT1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    if TempMenu ~= "RunModeSmallMenu" then
        gg.toast("请一定要及时跳过动画喔！")
    end
	gg.sleep(2000)
	Teleport({207.74447631835938,4.33616828918457,-74.61812591552734})--晨岛进山谷
	gg.sleep(2000)
    PT1Small_0()
    Teleport({-26.03814697265625, 189.7858428955078, -20.024099349975586})--返回晨岛主图
    gg.sleep(5000)
    for i = 1, 8 do
        if (i == 6 or i == 8) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        Teleport(map1[i])
        gg.toast("瞬移晨岛蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("晨岛跑图完成")
end


-- 云野跑图
function PT2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    PT2Small_1()
    Teleport({-17.372812271118164, 171.26510620117188, -2.61037540435791}) -- 传送云野图 1 右隐藏图入口
    gg.sleep(GTJG)
    PT2Small_2()
    if KG_qtdr == "关" then
         A_qtdr()
    end
    if KG_qtzh == "关" then
         A_qtzh()
    end	
	gg.sleep(2000)	
    Teleport({-355.1221923828125, 128.1268768310547, 96.45269012451172}) -- 传送云野圣岛图入口
    gg.sleep(GTJG)
    PT2Small_3()
    Teleport({271.6481018066406, 174.65869140625, -30.689847946166992}) -- 传送云野圣岛图出口
    gg.sleep(GTJG)
    Teleport({-101.64898681640625, 185.3963623046875, 177.490966796875}) -- 传送云野图 2 入口
    gg.sleep(GTJG)
    Teleport({167.26300048828125, 199.05149841308594, 220.2218780517578}) -- 传送云野图 1 左隐藏图入口
    gg.sleep(GTJG)
    PT2Small_5()
    Teleport({242.37313842773438, 198.94761657714844, 227.39906311035156}) -- 传送云野图 1 左隐藏图出口
    gg.sleep(GTJG)
    PT2Small_4()
    Teleport({132.1917266845703, 255.7042694091797, 486.8236083984375}) -- 云野二图去云野终点图
    gg.sleep(GTJG)
    PT2Small_6()
    gg.toast("[云野] 跑图完成")
end

-- 云野图 1 跑图
function PT2Small_1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 11 do
        Teleport(map2[i])
        if (i == 11) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [云野图 1] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast(
        "[云野图 1] 跑图完成，往前走进入 [云野图 1 右隐藏图]")
end

-- 云野图 1 右隐藏图跑图
function PT2Small_2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 9 do
        Teleport(map3[i])
        if (i == 9) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [云野图 1 右隐藏图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast(
        "[云野图 1 右隐藏图] 跑图完成，往前飞进入 [圣岛图]")
end

-- 圣岛图跑图
function PT2Small_3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    gg.sleep(2000)	
    for i = 1, 13 do
        Teleport(map4[i])
        if (i == 13) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [圣岛图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[圣岛图] 跑图完成，往前走离开 [圣岛图]")
end

-- 云野图 2 跑图
function PT2Small_4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 22 do
        Teleport(map5[i])
        if (i == 22) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [云野图 2] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
	gg.sleep(1000)
	Teleport(map5[19])
	gg.sleep(1000)
	Teleport({-52.46832275390625, 180.03219604492188, 324.8914489746094})--进云野八人图
	gg.sleep(5000)
	absorbCandlelight()
	gg.sleep(2000)
    Teleport({-25.89535140991211, 58.23543930053711, -43.62322235107422})--传云野八人小狗位置
    xianlazhuk()
    gg.sleep(2000)
    absorbCandlelight()
	Teleport({31.96832275390625, 42.56799604492188, 0.5813889746094})--八人门出传终点
	gg.sleep(6000)
    gg.toast("[云野图 2] 跑图完成，往前走进入 [云野终点图]")
end

-- 云野图 1 左隐藏图跑图
function PT2Small_5()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 9 do
        Teleport(map6[i])
        if (i == 9) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [云野图 1 左隐藏图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[云野图 1 左隐藏图] 跑图完成，往前走进入 [图 2]")
end

-- 云野终点图跑图
function PT2Small_6()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(2000)
    for i = 1, 4 do
        Teleport(map7[i])
        if (i == 4) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [云野终点图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[云野终点图] 跑图完成")
end

-- 查漏补缺-云野八人
function PT2Small_7()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({78.14214324951, 160.35305786133, 67.12189483643})
    gg.sleep(8000)
    Teleport({-52.46832275390625, 180.03219604492188, 324.8914489746094})
	gg.sleep(4000)
	absorbCandlelight()
	--Teleport({-19.699052810668945, 9.386011123657227, -0.8543007969856262})
	gg.sleep(3000)
    Teleport({-25.89535140991211, 58.23543930053711, -43.62322235107422})
    xianlazhuk()
    gg.sleep(2000)
    absorbCandlelight()
    gg.toast("云野八人跑图完成")
end

-- 云野八人
function PT2Small_8()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({-3.5362441539764404, 38.86030578613281, -3.554537534713745})-- 八人蜡烛台上
    gg.sleep(2000)
	xianlazhuk()
	gg.sleep(2000)
	absorbCandlelight()
	gg.sleep(1000)
    Teleport({-25.89535140991211, 58.23543930053711, -43.62322235107422})
    gg.sleep(1000)
    gg.toast("云野八人跑图完成")
end


-- 雨林跑图
function PT3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    PT3Small_1()
    Teleport({29.446800231933594, 98.68903350830078, -108.74456024169922}) -- 雨林图 2 入口
    gg.sleep(GTJG)
    PT3Small_2()
    Teleport({-2.42549586296,111.49240112305,-52.30210113525}) -- 雨林图 2 右隐藏图入口
    gg.sleep(GTJG)
    PT3Small_3()
    Teleport({54.191062927246094, 54.770408630371094, 43.37236785888672}) -- 地底隐藏图入口
    gg.sleep(GTJG)
    PT3Small_4()
    Teleport({-57.56206130981445, 210.17996215820312, -283.5279541015625}) -- 地底隐藏图出口
    gg.sleep(GTJG)
    Teleport({17.838523864746094, 87.8037338256836, 124}) -- 隐藏图进雨林图 3
    gg.toast("正在前往图 3")
    gg.sleep(GTJG)
    PT3Small_5()
    Teleport({-17.36788558959961, 182.655517578125, 402.27899169921875}) -- 进入雨林宫殿
    gg.sleep(GTJG)
    PT3Small_6()
    gg.toast("[雨林] 跑图完成")
end

-- 雨林图 1 跑图
function PT3Small_1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(3000)
    for i = 1, 19 do
        Teleport(map8[i])
        if (i == 7) then
            CandleSleepTime = 7000
        else
            CandleSleepTime = 500
        end
        if (i == 19) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [雨林图 1] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[雨林图 1] 跑图完成")
end

-- 雨林图 2 跑图
function PT3Small_2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(1000)
    for i = 1, 21 do
        Teleport(map9[i])
        if (i == 21) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [雨林图 2] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[雨林图 2] 跑图完成")
end

-- 雨林图 2 右隐藏图跑图
function PT3Small_3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 9 do
        Teleport(map10[i])
        if (i == 9) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [雨林图 2 右隐藏图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[雨林图 2 右隐藏图] 跑图完成")
end

-- 雨林地底隐藏图跑图
function PT3Small_4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    for i = 1, 7 do
        Teleport(map11[i])
        if (i == 7) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [雨林地底隐藏图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[雨林地底隐藏图] 跑图完成")
end

-- 雨林图 3 跑图
function PT3Small_5()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 26 do
        Teleport(map12[i])
        if (i == 26) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [雨林图 3] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[雨林图 3] 跑图完成")
end

-- 雨林终点图跑图
function PT3Small_6()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(2000)
    for i = 1, 10 do
        Teleport(map13[i])
        if (i == 10) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [雨林终点图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[雨林终点图] 跑图完成")
end

-- 霞谷跑图
function PT4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    PT4Small_1()
    Teleport({206.29270935058594, 57.820106506347656, -604.9664916992188}) -- 霞光城入口
    gg.sleep(GTJG)
    PT4Small_2()
    Teleport({204.70770263671875, 491.51055908203125, -205.14031982421875}) -- 飞行赛道入口
    gg.sleep(GTJG)
    PT4Small_3()
    Teleport({60.74193572998047, 137.8476104736328, -292.3225402832031}) -- 霞谷终点门入口
    gg.sleep(GTJG)
    PT4Small_4()
    gg.toast("[霞谷]] 跑图完成")
end

-- 霞谷图 1 跑图
function PT4Small_1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    for i = 1, 23 do
        Teleport(map14[i])
        if (i == 23) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [霞谷图 1] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[霞谷图 1] 跑图完成")
end

-- 霞光城跑图
function PT4Small_2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 19 do
        Teleport(map15[i])
        if (i == 19) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [霞光城] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[霞光城] 跑图完成")
end

-- 飞行赛道跑图
function PT4Small_3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(1000)
	absorbCandlelight()
	gg.sleep(1000)
    for i = 11, 21 do
        if (i == 11) then
            changeRoleStatus(2)
			CandleSleepTime = 3000
            gg.toast("坐下开个门")
        elseif ( i == 12) then
            speedUp(10)
            gg.sleep(6000)
            speedUp(1)
            CandleSleepTime = 500
        elseif ( i == 13 or i == 14) then
            CandleSleepTime = 500
        elseif (i == 15) then
            CandleSleepTime = 7000
        elseif (i == 18) then
            if KG_qtdr == "开" then
             A_qtdr()
             end
		elseif (i == 16) then
            CandleSleepTime = 500	
        if KG_qtdr == "关" then
         A_qtdr()
        end
        if KG_qtzh == "关" then
         A_qtzh()
        end
		speedUp(3)
	    gg.sleep(5000)
		speedUp(1)
        Teleport({44.09857940674,169.2801361084,11.14154911041})
	    gg.sleep(1000)
        Teleport({46.44737625122,165.78955078125,-1.97345304489})
        gg.sleep(2000)
       if KG_qtdr == "关" then
          A_qtdr()
       end
       if KG_qtzh == "关" then
         A_qtzh()
        end
       gg.sleep(3000)			
       elseif (i == 17) then
       gg.sleep(2000)
       Teleport({58.26231384277344, 135.72137451171875, -219.90045166015625})
		    gg.sleep(4000)
		    xiguangmang()
			gg.sleep(1000)
			speedUp(10)
			gg.sleep(7000)
			speedUp(1)
            gg.toast("准备拿蜡烛")
        else
            CandleSleepTime = 500
        end
        Teleport(map16[i])
        if (i == 21) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [飞行赛道] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[飞行赛道] 跑图完成")
end

-- 霞谷终点跑图
function PT4Small_4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(2000)
    for i = 1, 7 do
        Teleport(map17[i])
        if (i == 7) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [霞谷终点] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[霞谷] 跑图完成")
end

-- 滑雪赛道跑图
function PT4Small_5()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({290.24816894531, 39.45797729492, -527.30267333984})
    gg.sleep(6000)
    Teleport({154.1555633544922, 935.1898803710938, 662.4508666992188})
    gg.sleep(3000)
    changeRoleStatus(2)
	speedUp(10)
    gg.sleep(5000)
	speedUp(1)
    Teleport({208.15991210938, 617.72698974609, -447.23425292969})
    gg.sleep(1000)
    Teleport({256.20028686523, 585.98559570312, -564.76477050781})
    gg.sleep(4000)
	if KG_qtdr == "关" then
         A_qtdr()
    end
    if KG_qtzh == "关" then
         A_qtzh()
    end
    speedUp(2)
    gg.sleep(4000)
	speedUp(1)
    Teleport({44.09857940674,169.2801361084,11.14154911041})
	gg.sleep(1000)
    Teleport({46.44737625122;165.78955078125;-1.97345304489})
    if KG_qtdr == "关" then
         A_qtdr()
    end
    if KG_qtzh == "关" then
         A_qtzh()
    end
    gg.sleep(8000)
    Teleport({58.26231384277344, 135.72137451171875, -219.90045166015625})
	gg.sleep(4000)
    xiguangmang()
    gg.sleep(1000)
    speedUp(10)
	gg.sleep(4000)
	speedUp(1)
    gg.toast("拿完蜡烛就可以走了")
end

-- 飞行赛道跑图
function PT4Small_6()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({206.29270935058594, 57.820106506347656, -604.9664916992188}) -- 霞光城入口
    gg.sleep(5000)
    Teleport(map15[19])
    gg.sleep(3000)
    Teleport({204.70770263671875, 491.51055908203125, -205.14031982421875}) -- 飞行赛道入口
    gg.sleep(6000)	
    Teleport(map16[11])
    changeRoleStatus(2)
    speedUp(10)
    gg.sleep(5000)
    resetSpeed()
    Teleport(map16[12])
    gg.sleep(1000)
    Teleport(map16[13])
    gg.sleep(1000) 
    Teleport(map16[14])
    gg.sleep(1000)
    Teleport(map16[15])
    gg.sleep(7000)
    if KG_qtdr == "关" then
         A_qtdr()
    end
    if KG_qtzh == "关" then
         A_qtzh()
    end	
    speedUp(3)
    gg.sleep(5000)
    speedUp(1)
    Teleport({44.09857940674,169.2801361084,11.14154911041})
	gg.sleep(1000)
    Teleport({46.44737625122;165.78955078125;-1.97345304489})
	if KG_qtdr == "关" then
         A_qtdr()
    end
    if KG_qtzh == "关" then
         A_qtzh()
    end
    gg.sleep(6000)
    Teleport({58.26231384277344, 135.72137451171875, -219.90045166015625})
	gg.sleep(6000)
    xiguangmang()
	gg.sleep(1000)
	speedUp(10)
	gg.sleep(4000)
	speedUp(1)
    gg.toast("准备拿蜡烛")
end


-- 墓土跑图
function PT5()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    PT5Small_1()
    Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062}) -- 进漩涡
	speedUp(2)
	gg.sleep(6000)
    resetSpeed()
    for d = 1, 5 do
    getLocation()
    if currentLocationIndex ~= 23 then
        gg.sleep(1000)
     end	
    end
    gg.sleep(5000)
    Teleport({65.5763931274414, 42.25419616699219, 410.1432189941406})--传送高台
    speedUp(5)
    gg.sleep(3000)
    speedUp(1)
    PT5Small_2()
    Teleport({-93.77214813232422, 11.91988754272461, 156.5588836669922}) -- 进图 3
    gg.sleep(GTJG)
    PT5Small_3()
    Teleport({192.6549835205078, 68.13046264648438, -72.91191864013672}) -- 进沉船
    gg.sleep(GTJG)
    PT5Small_4()
    Teleport({-349.27203369140625, 34.950706481933594, 387.2141418457031}) -- 进古战场
    gg.sleep(GTJG)
    PT5Small_5()
    Teleport({-289.4688415527344, 93.0536117553711, -404.3544921875}) -- 进终点
    gg.sleep(GTJG)
    PT5Small_6()
    gg.toast("[墓土] 跑图完成")
end

-- 墓土图 1 跑图
function PT5Small_1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 3 do
        Teleport(map18[i])
        if (i == 3) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [墓土图 1] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[墓土图 1] 跑图完成")
end

-- 墓土图 2 跑图
function PT5Small_2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
	
    for i = 1, 17 do
        Teleport(map19[i])
        if (i == 17) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [墓土图 1] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[墓土图 2] 跑图完成")
end

-- 墓土图 3 跑图
function PT5Small_3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    for i = 1, 18 do
        Teleport(map20[i])
        if (i == 18) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [墓土图 2] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[墓土图 3] 跑图完成")
end

-- 墓土沉船跑图
function PT5Small_4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    for i = 1, 13 do
        Teleport(map21[i])
        if (i == 13) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [墓土沉船图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[墓土沉船图] 跑图完成")
end

-- 墓土古战场跑图
function PT5Small_5()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    for i = 1, 13 do
        Teleport(map22[i])
        if (i == 13) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [墓土古战场图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[墓土古战场图] 跑图完成")
end

-- 墓土终点跑图
function PT5Small_6()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
	for d = 1, 10 do
	 getLocation()
	 if currentLocationIndex ~= 28 then
        gg.toast("暂未进入『墓土终点』请等待")
        gg.sleep(1000)
     end	
	end	
    for i = 1, 4 do
        Teleport(map23[i])
        if (i == 4) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [墓土终点图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[墓土] 跑图完成")
end

-- 遗忘方舟跑图
function PT5Small_7()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(3000)
    for i = 1, 19 do
        Teleport(map27[i])
        if (i == 19) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [遗忘方舟] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[遗忘方舟] 跑图完成(可回遇境继续查漏补缺)")
end

-- 禁阁跑图
function PT6()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    Teleport({-42.6407585144043, 38.3612060546875, -98.20526123046875})
    gg.sleep(GTJG)
    PT6Small_2()
    Teleport({40.35205459595, 541.86962890625, -25.08329963684})
    gg.sleep(5000)
	A_TGC()
    gg.sleep(1000)
    Teleport({-2.3683698177337646,37.12582778930664,-172.75494384765625})
	gg.sleep(5000)
	PT6Small_4()
	Teleport({7.157510280609131,62.34695816040039,-26.602800369262695})--出办公室
	gg.sleep(5000)
    PT6Small_1()
    gg.toast("正在进入 [四楼]")
    Teleport({-0.1043953374, 214.60452270508, 2.59286475182})
    gg.sleep(GTJG)
    PT6Small_3()
    gg.toast("[禁阁] 跑图完成")
end

-- 禁阁低层跑图
function PT6Small_1()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
    for i = 1, 19 do
        Teleport(map25[i])
        if (i == 19) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [禁阁低层] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[禁阁低层] 跑图完成")
end

-- 禁阁一楼隐藏图跑图
function PT6Small_2()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 13 do
        Teleport(map24[i])
        if (i == 13) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [禁阁隐藏图] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[禁阁隐藏图] 跑图完成")
end

-- 禁阁高层跑图
function PT6Small_3()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
    for i = 1, 15 do
        Teleport(map26[i])
        if (i == 15) then
            absorbCandlelight()
            gg.sleep(1000)
        end
        gg.toast("瞬移 [禁阁高层] 蜡烛 [" .. i .. "] 完成")
        gg.sleep(CandleSleepTime)
    end
    gg.toast("[禁阁高层] 跑图完成")
end

-- 禁阁办公室跑图
function PT6Small_4()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end	
	Teleport({-11.051301956176758,63.40142822265625,4.062231063842773})-- 花
	gg.sleep(1000)
	absorbCandlelight()
	gg.sleep(3000)
    gg.toast("[禁阁办公室] 跑图完成")
end

--禁阁传送遇境
function PT8()
	gg.sleep(1000)
    Teleport({-0.08083217591047287, 309.8573303222656, 67.18972778320312})
    gg.sleep(1000)
    changeRoleStatus(2)
    gg.sleep(2000)
	speedUp(10)
	gg.sleep(5000)
    resetSpeed()
    gg.sleep(3000)
    Teleport({10.420524940490723, 327.5585021972656, 14.537318000793457})	
    gg.sleep(1000)
    resetSpeed()	
    gg.toast("[传送遇镜]完成")
end

--霞谷滑行赛道+墓土失落方舟
function PT9()
    gg.sleep(3000)
	for d = 1, 5 do
	 getLocation()
	 if currentLocationIndex ~= 1 then
        gg.toast("请在『遇境』开启此功能将自动进入霞谷")
        gg.sleep(1000)
     end	
	end
    Teleport({-2.919485333058, 2.1257559395, 7.52585887909}) --进霞谷门 
    gg.sleep(5000)
	PT4Small_5()
	gg.sleep(2000)
	Teleport({60.74193572998047, 137.8476104736328, -292.3225402832031}) -- 霞谷终点门入口
    gg.sleep(8000)
	Teleport({8.038422584533691, 141.21749877929688, -197.4063262939453}) -- 传墓土
	gg.sleep(7000)
    gg.toast("[墓土传送]完成")
	Teleport({-70.51749420166016, 66.21754455566406, -759.3367919921875})-- 墓土一图柱子上
	gg.sleep(5000)
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	gg.sleep(3000)
	Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062})-- 进旋涡
	speedUp(2)
	gg.sleep(5000)
    resetSpeed()
    for d = 1, 5 do
    getLocation()
    if currentLocationIndex ~= 23 then
        gg.sleep(1000)
     end	
    end
    gg.sleep(5000)
    Teleport({65.5763931274414, 42.25419616699219, 410.1432189941406})--传送高台
    speedUp(5)
    gg.sleep(3000)
    speedUp(1)
	Teleport({151.07559204101562, 1.2903770208358765, 46.657100677490234})
	gg.sleep(2000)
	changeRoleStatus(2)
    gg.sleep(1000)
    speedUp(8)
	gg.sleep(10000)
	resetSpeed()
	PT5Small_7()	
end

-- 全图自动跑图
function AutoRunMap()
    if KG_qtdr == "开" then
         A_qtdr()
    end
    if KG_qtzh == "开" then
         A_qtzh()
    end
	start_time = os.date(os.time())
    gg.sleep(1000)
    absorbCandlelight()
    gg.sleep(1000)
    Teleport({11.33805503845, 1.07, 0.86344474554}) -- 进晨岛门
    gg.toast("正在前往 [晨岛]")
    gg.sleep(GTJG)
    PT1()
    Teleport({479.30438232421875, 213.60411071777344, -1033.25390625}) -- 传云野
    gg.toast("正在前往 [云野]")
    gg.sleep(GTJG)
    PT2()
    Teleport({-132.80177307128906, 108.91059875488281, 41.570411682128906}) -- 传雨林
    gg.toast("正在前往 [雨林]")
    gg.sleep(GTJG)
    PT3()
    Teleport({6.131390571594238, 196.65492248535156, 224.84304809570312}) -- 传霞谷
    gg.toast("正在前往 [霞谷]")
    gg.sleep(GTJG)
    PT4()
    Teleport({8.038422584533691, 141.21749877929688, -197.4063262939453}) -- 传墓土
    gg.toast("正在前往 [墓土]")
    gg.sleep(GTJG)
    PT5()
    Teleport({-1.7305372953414917, 207.7891387939453, -66.75567626953125}) -- 传禁阁
    gg.toast("正在前往 [禁阁]")
    gg.sleep(GTJG)
    PT6()
    gg.sleep(2000)
    PT8()
    gg.sleep(1000)
    PT9()
    gg.toast("全图自动跑图已完成")
	end_time = os.date(os.time())
	Totaltime=os.date("%M分%S",end_time-start_time)
    gg.alert("🈴跑图结束了，耗时"..Totaltime.."秒🈴")
end
-- [『手动跑图-小图模式』(遇境开) - 晨岛] 菜单
function RunModeMenuChild1()
    local menu = gg.choice({
        "🗻『预言山谷』🗻", "⛰️『晨岛主图』⛰️","💦『水试炼』💦","🏻『土试炼』🏻","💨『风试炼』💨","🔥『火试炼』🔥",
        "❓『接下来要去哪』❓", "⬅️『返回上页(小图模式)』⬅️"
    }, nil, "🚹重要提示：此功能需要在正确的小地图内开启🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 41 then
            gg.toast("请在『预言山谷』开启此功能")
            gg.sleep(1000)
            return false
        end
		PT1Small_0()
    end
    if menu == 2 then
        if currentLocationIndex ~= 2 then
            gg.toast("请在『晨岛主图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT1Small_00()
    end
    if menu == 3 then
        if currentLocationIndex ~= 41 then
            gg.toast("请在『预言山谷』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT1Small_1()
    end
    if menu == 4 then
        if currentLocationIndex ~= 41 then
            gg.toast("请在『预言山谷』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT1Small_2()
    end
    if menu == 5 then
        if currentLocationIndex ~= 41 then
            gg.toast("请在『预言山谷』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT1Small_3()
    end
    if menu == 6 then
        if currentLocationIndex ~= 41 then
            gg.toast("请在『预言山谷』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT1Small_4()
    end	
    if menu == 7 then
        TempMenu = "IntelligentFindDoor2"
        IntelligentFindDoor2("RunModeMenuChild1")
    end
    if menu == 8 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    Menu = nil
end

-- [『手动跑图-小图模式』(遇境开) - 云野] 菜单
function RunModeMenuChild2()
    local menu = gg.choice({
        "☁️『图 1』☁️", "☁️『图 1 右隐藏图』☁️", "☁️『圣岛图』☁️",
        "☁️『图 2』☁️", "☁️『云野八人高层』☁️","☁️『图 1 左隐藏图』☁️", "☁️『终点图』☁️",
        "❓『接下来要去哪』❓", "⬅️『返回上页(小图模式)』⬅️"
    }, nil, "🚹重要提示：此功能需要在正确的小地图内开启🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 3 then
            gg.toast("请在『云野一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_1()
    end
    if menu == 2 then
        if currentLocationIndex ~= 6 then
            gg.toast("请在『云野右图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_2()
    end
    if menu == 3 then
        if currentLocationIndex ~= 7 then
            gg.toast("请在『云野圣岛图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_3()
    end
    if menu == 4 then
        if currentLocationIndex ~= 4 then
            gg.toast("请在『云野二图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_4()
    end
    if menu == 5 then
        if currentLocationIndex ~= 8 then
            gg.toast("请在『云野八人高层』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_8()
    end
    if menu == 6 then
        if currentLocationIndex ~= 5 then
            gg.toast("请在『云野左图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_5()
    end	
    if menu == 7 then
        if currentLocationIndex ~= 9 then
            gg.toast("请在『云野宫殿图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_6()
    end
    if menu == 8 then
        TempMenu = "IntelligentFindDoor2"
        IntelligentFindDoor2("RunModeMenuChild2")
    end
    if menu == 9 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    Menu = nil
end

-- [『手动跑图-小图模式』(遇境开) - 雨林] 菜单
function RunModeMenuChild3()
    local menu = gg.choice({
        "⛈️『图 1』⛈️", "⛈️『图 2』⛈️", "⛈️『图 2 右隐藏图』⛈️",
        "⛈️『地底隐藏图』⛈️", "⛈️『水母图』⛈️", "⛈️『终点图』⛈️",
        "❓『接下来要去哪』❓", "⬅️『返回上页(小图模式)』⬅️"
    }, nil, "🚹重要提示：此功能需要在正确的小地图内开启🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 10 then
            gg.toast("请在『雨林一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT3Small_1()
    end
    if menu == 2 then
        if currentLocationIndex ~= 11 then
            gg.toast("请在『雨林二图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT3Small_2()
    end
    if menu == 3 then
        if currentLocationIndex ~= 12 then
            gg.toast("请在『雨林隐藏图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT3Small_3()
    end
    if menu == 4 then
        if currentLocationIndex ~= 13 then
            gg.toast("请在『雨林地底图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT3Small_4()
    end
    if menu == 5 then
        if currentLocationIndex ~= 14 then
            gg.toast("请在『雨林水母图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT3Small_5()
    end
    if menu == 6 then
        if currentLocationIndex ~= 15 then
            gg.toast("请在『雨林宫殿图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT3Small_6()
    end
    if menu == 7 then
        TempMenu = "IntelligentFindDoor2"
        IntelligentFindDoor2("RunModeMenuChild3")
    end
    if menu == 8 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    Menu = nil
end

-- [『手动跑图-小图模式』(遇境开) - 霞谷] 菜单
function RunModeMenuChild4()
    local menu = gg.choice({
        "🌈『图 1』🌈", "🌈『霞光城』🌈", "🌈『飞行赛道』🌈",
        "🌈『终点图』🌈", "🌈『接下来要去哪』🌈",
        "⬅️『返回上页(小图模式)』⬅️"
    }, nil, "🚹重要提示：此功能需要在正确的小地图内开启🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 16 then
            gg.toast("请在『霞谷一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT4Small_1()
    end
    if menu == 2 then
        if currentLocationIndex ~= 17 then
            gg.toast("请在『霞谷霞光城图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT4Small_2()
    end
    if menu == 3 then
        if currentLocationIndex ~= 18 then
            gg.toast("请在『霞谷飞行赛道图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT4Small_3()
    end
    if menu == 4 then
        if currentLocationIndex ~= 21 then
            gg.toast("请在『霞谷宫殿图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT4Small_4()
    end
    if menu == 5 then
        TempMenu = "IntelligentFindDoor2"
        IntelligentFindDoor2("RunModeMenuChild4")
    end
    if menu == 6 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    Menu = nil
end

-- [『手动跑图-小图模式』(遇境开) - 墓土] 菜单
function RunModeMenuChild5()
    local menu = gg.choice({
        "🌪️『图 1』🌪️", "🌪️『图 2』🌪️", "🌪️『五龙图』🌪️", "🌪️『沉船』🌪️",
        "🌪️『古战场』🌪️", "🌪️『终点图』🌪️", "❓『接下来要去哪』❓",
        "⬅️『返回上页(小图模式)』⬅️"
    }, nil, "🚹重要提示：此功能需要在正确的小地图内开启🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 22 then
            gg.toast("请在『墓土一图』开启此功能")
            gg.sleep(1000)
        else
            PT5Small_1()
        end
    end
    if menu == 2 then
        if currentLocationIndex ~= 23 then
            gg.toast("请在『墓土二图』开启此功能")
            gg.sleep(1000)
        else
            PT5Small_2()
        end
    end
    if menu == 3 then
        if currentLocationIndex ~= 25 then
            gg.toast("请在『墓土五龙图』开启此功能")
            gg.sleep(1000)
        else
            PT5Small_3()
        end
    end
    if menu == 4 then
        if currentLocationIndex ~= 26 then
            gg.toast("请在『墓土沉船图』开启此功能")
            gg.sleep(1000)
        else
            PT5Small_4()
        end
    end
    if menu == 5 then
        if currentLocationIndex ~= 27 then
            gg.toast("请在『墓土古战场图』开启此功能")
            gg.sleep(1000)
        else
            PT5Small_5()
        end
    end
    if menu == 6 then
        if currentLocationIndex ~= 28 then
            gg.toast("请在『墓土宫殿图』开启此功能")
            gg.sleep(1000)
        else
            PT5Small_6()
        end
    end
    if menu == 7 then
        TempMenu = "IntelligentFindDoor2"
        IntelligentFindDoor2("RunModeMenuChild5")
    end
    if menu == 8 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    Menu = nil
end

-- [『手动跑图-小图模式』(遇境开) - 禁阁] 菜单
function RunModeMenuChild6()
    local menu = gg.choice({
        "🏯『低层』🏯", "🏯『隐藏图』🏯", "🏯『高层』🏯","🏯『办公室』🏯",
        "❓『接下来要去哪』❓", "⬅️『返回上页(小图模式)』⬅️"
    }, nil, "🚹重要提示：此功能需要在正确的小地图内开启🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 29 then
            gg.toast("请在『禁阁低层图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT6Small_1()
    end
    if menu == 2 then
        if currentLocationIndex ~= 30 then
            gg.toast("请在『禁阁隐藏图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT6Small_2()
    end
    if menu == 3 then
        if currentLocationIndex ~= 31 then
            gg.toast("请在『禁阁高层图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT6Small_3()
    end
    if menu == 4 then
        if currentLocationIndex ~= 33 then
            gg.toast("请在『禁阁办公室』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT6Small_4()
    end	
    if menu == 5 then
        TempMenu = "IntelligentFindDoor2"
        IntelligentFindDoor2("RunModeMenuChild6")
    end
    if menu == 6 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    Menu = nil
end

-- [『手动跑图-小图模式』(遇境开)] 和 [『手动跑图-大图模式』(遇境开)] 共用菜单
function RunModeBigOrSmallMenu()
    local menu = gg.choice({
        "🏝️『晨岛』🏝️", "☁️『云野』☁️", "⛈️『雨林』⛈️", "🌈『霞谷』🌈",
        "🌪️『墓土』🌪️", "🏯『禁阁』🏯","❓『接下来想去哪』❓", "⬅️『返回上页(跑图模式)』⬅️"
    }, nil, "🚹请选择要开始跑的地图🚹")
    if TempMenu == "RunModeSmallMenu" then
        if menu == 1 then
            TempMenu = "RunModeMenuChild1"
            RunModeMenuChild1()
        end  	
        if menu == 2 then
            TempMenu = "RunModeMenuChild2"
            RunModeMenuChild2()
        end
        if menu == 3 then
            TempMenu = "RunModeMenuChild3"
            RunModeMenuChild3()
        end
        if menu == 4 then
            TempMenu = "RunModeMenuChild4"
            RunModeMenuChild4()
        end
        if menu == 5 then
            TempMenu = "RunModeMenuChild5"
            RunModeMenuChild5()
        end
        if menu == 6 then
            TempMenu = "RunModeMenuChild6"
            RunModeMenuChild6()
        end
       if menu == 7 then
            TempMenu = "IntelligentFindDoor2"
            IntelligentFindDoor2()
        end
    else
        getLocation()
	   if menu == 1 then
         if currentLocationIndex ~= 2 then
            gg.toast("请在『晨岛』开启此功能")
            gg.sleep(1000)
            return false
           end
		   PT1()
		end
        if menu == 2 then
            if currentLocationIndex ~= 3 then
                gg.toast("请在『云野一图』开启此功能")
                gg.sleep(1000)
                return false
            end
            PT2()
        end
        if menu == 3 then
            if currentLocationIndex ~= 10 then
                gg.toast("请在『雨林一图』开启此功能")
                gg.sleep(1000)
                return false
            end
            PT3()
        end
        if menu == 4 then
            if currentLocationIndex ~= 16 then
                gg.toast("请在『霞谷一图』开启此功能")
                gg.sleep(1000)
                return false
            end
            PT4()
        end
        if menu == 5 then
            if currentLocationIndex ~= 22 then
                gg.toast("请在『墓土一图』开启此功能")
                gg.sleep(1000)
                return false
            end
            PT5()
        end
        if menu == 6 then
            if currentLocationIndex ~= 29 then
                gg.toast("请在『禁阁低层』开启此功能")
                gg.sleep(1000)
                return false
            end
            PT6()
        end
       if menu == 7 then
            TempMenu = "IntelligentFindDoor2"
            IntelligentFindDoor2()
        end
	end
      if menu == 8 then
           TempMenu = "RunModeMenu"
           RunModeMenu()
      end
    Menu = nil
end

-- 伊甸小黑人跑图
function PT7()
    local time = 5 -- 倒计时（秒）

    for i = 1, 55 do
        Teleport(map28[i])
        if i == 29 then
            gg.sleep(1000)
            gg.toast("第一段小黑人已拿完")
        elseif i == 21 or i == 26 or i == 28 or i == 31 or i == 32 or i == 36 or
            i == 43 then
            EdenCount = EdenCount + 2
        elseif i == 27 then
            EdenCount = EdenCount + 3
        else
            EdenCount = EdenCount + 1
        end
        gg.toast("第 " .. EdenCount .. " 个小黑人")
        gg.sleep(1000)
        TimeCountdown(time)
    end
    gg.toast("已经到达终点，关闭无限能量，就可以归西了")
end
-- 失落方舟跑图 
function FindLoseChildMenu1()
    local menu = gg.choice({
        "🌪️『进入龙卷风』🌪️", "🚢『前往小船』🚢", "☑️『开始收集』☑️",
        "⬅️『返回上页(查漏补缺)』⬅️"
    }, nil, "🚹温馨提示：需要哪个，使用哪个🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 22 then
            gg.toast("请在『墓土一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062})
    end
    if menu == 2 then
        if currentLocationIndex ~= 23 then
            gg.toast("请在『墓土二图』开启此功能")
            gg.sleep(1000)
            return false
        end
        Teleport({151.07559204101562, 1.2903770208358765, 46.657100677490234})
        gg.sleep(3000)
        changeRoleStatus(2)
        gg.sleep(1000)
    end
    if menu == 3 then
        if currentLocationIndex ~= 24 then
            gg.toast("请在『墓土方舟图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT5Small_7()
    end
    if menu == 4 then
        TempMenu = "FindLoseMenu"
        FindLoseMenu()
    end
    Menu = nil
end

-- [『查漏补缺』(遇境开)] 菜单
function FindLoseMenu()
    local menu = gg.choice({
        "🚢『失落方舟』🚢", "⛷️『霞谷滑雪』⛷️", "🌈『霞谷飞行』🌈", "☁️『云野八人』☁️", "🗻『晨岛试炼』🗻", "⬅️『返回上页(跑图模式)』⬅️"
    }, nil, "🚹温馨提示：进图再开🚹")
    getLocation()
    if menu == 1 then
        TempMenu = "FindLoseChildMenu1"
        FindLoseChildMenu1()
    end
    if menu == 2 then
        if currentLocationIndex ~= 16 then
            gg.toast("请在『霞谷一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT4Small_5()   
    end
    if menu == 3 then 
     if currentLocationIndex ~= 16 then
            gg.toast("请在『霞谷一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT4Small_6()-- 霞谷飞行
    end	
    if menu == 4 then
        if currentLocationIndex ~= 3 then
            gg.toast("请在『云野一图』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT2Small_7()
    end
    if menu == 5 then
        if currentLocationIndex ~= 2 then
            gg.toast("请在『晨岛』开启此功能")
            gg.sleep(1000)
            return false
        end
        PT1Small_5()
    end
    if menu == 6 then
        TempMenu = "RunModeMenu"
        RunModeMenu()
    end
    Menu = nil
end

--每日任务
function M_MRRW()
    local menu = gg.choice({
        "👨‍🦰‍『先祖任务』👨‍🦰", "🌕『寻找光球』🌕", "🌑『进化黑暗』🌑","🦀『掀翻螃蟹』🦀","🕊️『拯救光鳐』🕊️","🦐『面对冥龙』🦐",
        "⬅️『返回上页(主菜单)』⬅️"
    }, nil, "🚹温馨提示：需要哪个，使用哪个🚹")
    getLocation()
    if menu == 1 then
	  TempMenu = "RW_1"
      RW_1()
    end
    if menu == 2 then
	  TempMenu = "RW_2"
      RW_2()
    end
    if menu == 3 then
	 if KG_qtzh == "关" then
         A_qtzh()
      end
	if currentLocationIndex == 1 then
	    Teleport(map_door[3])
        gg.toast("已传送至雨林")
        gg.sleep(5000)
	else if currentLocationIndex == 10 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或雨林一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end
    Teleport({29.446800231933594, 98.68903350830078, -108.74456024169922}) -- 雨林图一 去 雨林图二
	gg.sleep(5000)
	Teleport({15.788555145263672, 106.4130859375, -66.71271514892578}) --黑暗花朵处
	gg.sleep(3000)
	gg.toast("开始烧吧，自己动手丰衣足食！！！")
    end
	if menu == 4 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[5])
        gg.toast("已传送至墓土")
        gg.sleep(5000)
	else if currentLocationIndex == 22 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或墓土一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	
    Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062}) -- 墓土图一 去 墓土图二（漩涡）
	speedUp(6)
	gg.sleep(9000)
    resetSpeed()
    gg.sleep(2000)
	Teleport({-31.89016532897, 2.02924919128, 245.10450744628})-- 螃蟹堆附近
	gg.sleep(2000)
	gg.toast("开始做任务吧，大叫掀翻螃蟹")
    end
	if menu == 5 then
	  if KG_qtzh == "关" then
         A_qtzh()
      end
	if currentLocationIndex == 1 then
	    Teleport(map_door[3])
        gg.toast("已传送至雨林")
        gg.sleep(5000)
	else if currentLocationIndex == 10 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或雨林一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end  
    Teleport({29.446800231933594, 98.68903350830078, -108.74456024169922})  -- 雨林图一 去 雨林图二
	gg.sleep(5000)
	Teleport({66.42562866210938, 101.82526397705078, 59.000404357910156})  -- 雨林图二 去 雨林水母图
	gg.sleep(5000)
	Teleport({-8.70337200164795,134.84422302246094,137.0506591796875})-- 桥底光鳐附近
	gg.toast("正在拯救被困住的光鳐~~")
	gg.sleep(2000)
    if KG_qtzh ~= "关" then
      A_qtzh()
     end	
    end
	if menu == 6 then
	 if KG_wxnl ~= "关" then
        A_wxnl()
      end
	if currentLocationIndex == 1 then
	    Teleport(map_door[5])
        gg.toast("已传送至墓土")
        gg.sleep(5000)
	else if currentLocationIndex == 22 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或墓土一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	  
    Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062})-- 墓土图一 去 墓土图二（漩涡）
	speedUp(2)
	gg.sleep(5000)
    resetSpeed()
    for d = 1, 5 do
    getLocation()
    if currentLocationIndex ~= 23 then
        gg.sleep(1000)
     end	
    end
    gg.sleep(2000)
    Teleport({-91.68890533447266, 11.773741722106934, 158.20738220214844})--墓土破庙门口附近
    gg.sleep(2000)
    Teleport({-91.55247497558594, 11.722831726074219, 155.88690185546875}) --墓土破庙进墓土龙图
    gg.sleep(2000)
	Teleport({41.35456085205078, 95.7224349975586, 119.43244934082031})--传送到一处烛火处
	gg.sleep(5000)
	Teleport({126.38636016845703,73.70198822021484,-181.5587615966797})--传送到皮皮虾能看到的地方
	gg.toast("皮皮虾！！来啊，谁怕谁！！我天下无敌！！")	
    speedUp(8)
	gg.sleep(8000)
	Teleport({48.4488525390625, 76.01364135742188, -226.05392456054688})-- 传送到皮皮虾看不到的地方
	gg.sleep(3000)
    resetSpeed()
	gg.toast("溜了溜了！")
    end
    if menu == 7 then
        TempMenu = "HomeMenu"
        HomeMenu()
    end
    Menu = nil
end

function A_xzrw(pos_xz)
	speedUp(10)
	for i = 1, #pos_xz do
		Teleport(pos_xz[i])
		gg.sleep(1500)
	end
	resetSpeed()
    gg.toast("若先祖没反应，可以重跑先祖哦~重跑先祖请选下面的菜单！")
end
-- 先祖任务 
function RW_1()
    local menu = gg.choice({
        "👶🏻『云野-蝴蝶先祖』👶🏻", "👦🏻『云野-挥手先祖』👦🏻", "👧🏻『雨林-寒冷先祖』👧🏻","👨🏻『雨林-哭泣先祖』👨🏻","👩🏻‍🦰『霞谷-叉腰先祖』👩🏻‍🦰","👼🏻『墓土-害怕先祖』👼🏻","👳🏻‍♂️『墓土-勇敢先祖』👳🏻‍♂️","👨🏻‍🦱『禁阁-气功先祖』👨🏻‍🦱","🧒🏻『禁阁-站姿先祖』🧒🏻",
		"👶🏻『云野-蝴蝶先祖重跑』👶🏻", "👦🏻『云野-挥手先祖重跑』👦🏻", "👧🏻『雨林-寒冷先祖重跑』👧🏻","👨🏻『雨林-哭泣先祖重跑』👨🏻","👩🏻‍🦰『霞谷-叉腰先祖重跑』👩🏻‍🦰","👼🏻『墓土-害怕先祖重跑』👼🏻","👳🏻‍♂️『墓土-勇敢先祖重跑』👳🏻‍♂️","👨🏻‍🦱『禁阁-气功先祖重跑』👨🏻‍🦱","🧒🏻『禁阁-站姿先祖重跑』🧒🏻",
        "⬅️『返回上页(每日任务)』⬅️"
    }, nil, "🚹温馨提示：需要哪个，使用哪个🚹")
    getLocation()
    if KG_qtzh ~= "关" then
        A_qtzh()
	end
    if menu == 1 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[2])
        gg.toast("已传送至云野")
        gg.sleep(5000)
	else if currentLocationIndex == 3 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或云野一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end		
       Teleport({111.138427734375, 196.75003051757812, -420.8542175292969}) --传送到云野一图先祖附近
       gg.sleep(1000)	   
	   A_xzrw(xz_yy[1][1])
    end
if menu == 2 then
	 if currentLocationIndex == 1 then
	    Teleport(map_door[2])
        gg.toast("已传送至云野")
        gg.sleep(5000)
		Teleport({111.138427734375, 196.75003051757812, -420.8542175292969}) --传送到云野一图先祖附近
        gg.sleep(1000)
        Teleport({78.14214324951, 160.35305786133, 67.12189483643})	--云野一图进云野3塔图 
        gg.sleep(6000)	
	    A_xzrw(xz_yy[4][2])
	 else if currentLocationIndex == 3 then
        gg.sleep(2000)
        Teleport({111.138427734375, 196.75003051757812, -420.8542175292969}) --传送到云野一图先祖附近
        gg.sleep(1000)
        Teleport({78.14214324951, 160.35305786133, 67.12189483643})	--云野一图进云野3塔图 
        gg.sleep(6000)	
	    A_xzrw(xz_yy[4][2])
	 else if currentLocationIndex == 4 then
        A_xzrw(xz_yy[4][2])
     else 
      	gg.toast("请在『遇境或云野一图或云野二图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
    end
  end
end   
    if menu == 3 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[3])
        gg.toast("已传送至雨林")
        gg.sleep(5000)
	else if currentLocationIndex == 10 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或雨林一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	
       Teleport({136.64593505859375, 217.46261596679688, -621.9605102539062}) --雨林一图某个蜡烛
	   gg.sleep(1000)
	   Teleport({20.26995849609375, 97.34878540039062, -198.21612548828125}) --动画处蜡烛
	   speedUp(10)
       gg.sleep(5000)
       speedUp(1)	   
       gg.sleep(2000) 
	   A_xzrw(xz_yl[1][1])
    end
	if menu == 4 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[3])
        gg.toast("已传送至雨林")
        gg.sleep(5000)
	else if currentLocationIndex == 10 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或雨林一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	 
       Teleport({29.446800231933594, 98.68903350830078, -108.74456024169922}) -- 雨林图一 去 雨林图二
	   gg.sleep(6000)
	   Teleport({66.42562866210938, 101.82526397705078, 59.000404357910156}) -- 雨林图二 去 雨林水母图
       gg.sleep(5000)	   
	   A_xzrw(xz_yl[3][3])
    end
	if menu == 5 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[4])
        gg.toast("已传送至霞谷")
        gg.sleep(5000)
	else if currentLocationIndex == 16 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或霞谷一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end		
       Teleport({-44.76485443115, 306.10290527344, 22.63001441956}) -- 霞谷大蜡烛
	   gg.sleep(500)
	   Teleport({186.60269165039, 48.10845947266, -526.18041992188}) -- 霞谷大蜡烛先祖附近
       gg.sleep(1000)	   
	   A_xzrw(xz_xg[1][1])
    end
	if menu == 6 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[5])
        gg.toast("已传送至墓土")
        gg.sleep(5000)
	else if currentLocationIndex == 22 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或墓土一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	 
       Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062}) -- 墓土图一 去 墓土图二（漩涡）
	   	speedUp(2)
     	gg.sleep(6000)
        resetSpeed()
       for d = 1, 5 do
         getLocation()
    if currentLocationIndex ~= 23 then
        gg.sleep(1000)
     end	
    end
       gg.sleep(5000)
       Teleport({65.5763931274414, 42.25419616699219, 410.1432189941406})--传送高台
       speedUp(5)
       gg.sleep(3000)
       speedUp(1)
	   gg.sleep(3000)
	   A_xzrw(xz_mt[1][1])
    end
	if menu == 7 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[5])
        gg.toast("已传送至墓土")
        gg.sleep(5000)
	else if currentLocationIndex == 22 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或墓土一图』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	
    Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062})-- 墓土图一 去 墓土图二（漩涡）
	speedUp(2)
	gg.sleep(5000)
    resetSpeed()
    for d = 1, 5 do
    getLocation()
    if currentLocationIndex ~= 23 then
        gg.sleep(1000)
     end	
    end
       gg.sleep(2000)
	   Teleport({-91.68890533447266, 11.773741722106934, 158.20738220214844})--墓土破庙门口附近
	   gg.sleep(2000)
	   Teleport({-91.55247497558594, 11.722831726074219, 155.88690185546875})--墓土破庙进墓土龙图
	   gg.sleep(2000)
	   Teleport({63.91436767578125, 94.0284194946289, 283.00482177734375})
	   gg.sleep(3000)
	   A_xzrw(xz_mt[2][2])
    end
	if menu == 8 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[6])
        gg.toast("已传送至禁阁")
        gg.sleep(5000)
	else if currentLocationIndex == 29 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或禁阁低层』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end		
       Teleport({-21.98505210876465, 78.67003631591797, -6.959120750427246}) --禁阁二楼
	   gg.sleep(2000)	   
	   A_xzrw(xz_jg[1][2])
    end
	if menu == 9 then
	if currentLocationIndex == 1 then
	    Teleport(map_door[6])
        gg.toast("已传送至禁阁")
        gg.sleep(5000)
	else if currentLocationIndex == 29 then
        gg.sleep(2000)
    else 
      	gg.toast("请在『遇境或禁阁低层』开启此功能")
        gg.sleep(1000)
        return false 
     end  
	end	
       Teleport({-21.98505210876465, 78.67003631591797, -6.959120750427246})--禁阁二楼
	   gg.sleep(2000)
	   Teleport({-15.748322486877441, 149.14781188964844, -35.37989807128906}) -- 禁阁三层
	   gg.sleep(5000)		
	   A_xzrw(xz_jg[1][3])
    end
	if menu == 10 then
	   if currentLocationIndex ~= 3 then
            gg.toast("请在『云野一图』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_yy[1][1])
    end
    if menu == 11 then
	   if currentLocationIndex ~= 4 then
            gg.toast("请在『云野二图』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_yy[4][2])
    end
    if menu == 12 then
	   if currentLocationIndex ~= 10 then
            gg.toast("请在『雨林一图』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_yl[1][1])
    end
	if menu == 13 then
	   if currentLocationIndex ~= 14 then
            gg.toast("请在『雨林水母图』开启此功能")
            gg.sleep(1000)
            return false
       end 
	   A_xzrw(xz_yl[3][3])
    end
	if menu == 14 then
	   if currentLocationIndex ~= 16 then
            gg.toast("请在『霞谷一图』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_xg[1][1])
    end
	if menu == 15 then
	   if currentLocationIndex ~= 23 then
            gg.toast("请在『墓土破庙』开启此功能")
            gg.sleep(1000)
            return false
       end 
	   A_xzrw(xz_mt[1][1])
    end
	if menu == 16 then
	   if currentLocationIndex ~= 25 then
            gg.toast("请在『墓土龙图』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_mt[2][2])
    end
	if menu == 17 then
	   if currentLocationIndex ~= 29 then
            gg.toast("请在『禁阁低层』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_jg[1][2])
    end
	if menu == 18 then
	   if currentLocationIndex ~= 29 then
            gg.toast("请在『禁阁低层』开启此功能")
            gg.sleep(1000)
            return false
       end 	
	   A_xzrw(xz_jg[1][3])
    end
    if menu == 19 then
        TempMenu = "M_MRRW"
        M_MRRW()
    end
    Menu = nil
end

-- 追光任务
function RW_2()
    local menu = gg.choice({
        "☁️『云野』☁️", "⛈️『雨林』⛈️", "🌈『霞谷』🌈","🌪️『暮土』🌪️","🏯『禁阁』🏯",
        "⬅️『返回上页(每日任务)』⬅️"
    }, nil, "🚹温馨提示：需要哪个，使用哪个🚹")
    getLocation()
    if menu == 1 then
	   if currentLocationIndex ~= 1 then
            gg.toast("请在『遇境』开启此功能将自动进入云野")
            gg.sleep(1000)
            return false
       end
       Teleport(map_door[2])
       gg.sleep(500)	   
       Teleport({111.138427734375, 196.75003051757812, -420.8542175292969}) --传送某一处蜡烛	   
	   gg.sleep(500)
	   Teleport({98.19515991210938, 154.94137573242188, -19.274770736694336}) --传送到光球附近
	   gg.sleep(2000)
	   lt()
    end
    if menu == 2 then
	   if currentLocationIndex ~= 1 then
            gg.toast("请在『遇境』开启此功能将自动进入雨林")
            gg.sleep(1000)
            return false
       end
       Teleport(map_door[3])
       gg.sleep(500)	   
       Teleport({136.64593505859375, 217.46261596679688, -621.9605102539062}) --传送到某一处蜡烛	   
	   gg.sleep(500)
	   Teleport({19.444368362426758, 99.27957916259766, -213.29629516601562}) --传送到光球附近
	   gg.sleep(2000)
       lt()
    end
    if menu == 3 then
	   if currentLocationIndex ~= 1 then
            gg.toast("请在『遇境』开启此功能将自动进入霞谷")
            gg.sleep(1000)
            return false
       end 
       Teleport(map_door[4])
       gg.sleep(500)		   
       Teleport({158.03570556640625, 75.53165435791016, -446.781982421875})--传送到某一处蜡烛    
	   gg.sleep(500)
	   Teleport({206.4205322265625,47,-529.426513671875}) --传送到光球附近
	   gg.sleep(2000)
	   lt()
    end
	if menu == 4 then
	   if currentLocationIndex ~= 1 then
            gg.toast("请在『遇境』开启此功能将自动进入墓土")
            gg.sleep(1000)
            return false
       end
    Teleport(map_door[5])
    gg.sleep(5000)
    Teleport({-210.83389282226562, 43.8532829284668, -825.1362915039062})-- 进旋涡
	speedUp(2)
	gg.sleep(5000)
    resetSpeed()
    for d = 1, 5 do
    getLocation()
    if currentLocationIndex ~= 23 then
        gg.sleep(1000)
     end	
    end
    gg.sleep(2000)
    Teleport({-9.478985786437988, 9.33885669708252, 191.30006408691406})  --传送到光球附近
	--[[  local xzy = A_Get_zero()
	   do
        for _FORV_6_ = 1, 60 do
          local xx = tostring(xzy[1]) + 6 * math.cos(_FORV_6_ * 3.14 / 30)
          local zz = tostring(xzy[2]) + 0.025 * _FORV_6_
          local yy = tostring(xzy[3]) + 6 * math.sin(_FORV_6_ * 3.14 / 30)
          Teleport({
            xx,
            zz,
            yy
          })
          gg.sleep(50)
        end
      end]]
      gg.sleep(2000)
      lt()
    end
	if menu == 5 then
	   if currentLocationIndex ~= 1 then
            gg.toast("请在『遇境』开启此功能将自动进入禁阁")
            gg.sleep(1000)
            return false
       end
       Teleport(map_door[6])
       gg.sleep(500)		   
       Teleport({-0.9080491065979004, 40.549259185791016, 25.020217895507812})  --传送到某一处蜡烛    
	   gg.sleep(500)
	   Teleport({-19.381290435791016, 43.49972915649414, 19.06279754638672}) --传送到光球附近
	   gg.sleep(2000)
       lt()
    end
    if menu == 6 then
        TempMenu = "M_MRRW"
        M_MRRW()
    end
    Menu = nil
end

function A_Get_zero(flag) -- 获取角色当前坐标，输出到剪切板，返回{X,Z,Y}类型
	flag = flag or 0
	
	local tmp = {}
	local xzy = {}
	for i = 1, 3 do
		tmp[i] = {}
		tmp[i].address = data[1].address + i * 4
		tmp[i].flags = gg.TYPE_FLOAT
		tmp = gg.getValues(tmp)
		xzy[i] = tmp[i].value
	end
	
	if flag ~= 0 then
		gg.copyText('{' .. xzy[1] .. ', ' .. xzy[2] .. ', ' .. xzy[3] .. '}',
			false)
		gg.toast('{' .. xzy[1] .. ', ' .. xzy[2] .. ', ' .. xzy[3] .. '}')
	end
	return xzy
end

-- 琛修改装扮穿上TGC

--[[KG_bz = '开';KG_bz0 = '开';KG_bz1 = '开';KG_bz2 = '开';KG_bz3 = '开';
KG_bz4 = '开';KG_bz5 = '开';KG_bz6 = '开';KG_bz7 = '开';bz_idx = 0

function getClothes() -- 获取装扮地址
	gg.clearResults()
	gg.setRanges(4)
	YF_Search('31,076', gg.TYPE_DWORD)
	local gbzb = gg.getResultCount()
	if gbzb ~= 0 then
		local zb = gg.getResults(gbzb)
		local tmp = {}
		for i, v in ipairs(zb) do
			tmp[#tmp + 1] = {}
			tmp[#tmp].address = v.address - 196
			tmp[#tmp].flags = 4
		end
		tmp = gg.getValues(tmp)
		for i, v in ipairs(tmp) do
			if v.value == 1 then
				address_clos = tmp[i].address
				break
			end
		end
		KG_bz0 = '关'
	end
	gg.clearResults()
end

function A_TGC()
	
	if KG_bz4 == '开' then
		gg.toast('🔜正在获取 斗篷🕊')
		if KG_bz0 == '开' then getClothes() end
		
		if KG_bz0 == '关' then
			dppy = {}
			dppy[1] = {}
			dppy[1].address = address_clos + 8
			dppy[1].flags = 4
			
			KG_bz4 = '关'
		else
			gg.toast('获取人物斗篷失败❌，请重试或重启游戏')
			gg.sleep(1000)
			return 0
		end
	end
	dppy[1].value = 2219120716
	gg.setValues(dppy)
	gg.toast('TGC 蓝斗篷✔穿戴成功')
	
end
]]

-- [跑图的模式选择] 菜单
function RunModeMenu()
    local menu = gg.choice({
        "💫『全图自动跑图』💫", "💫『光速自动跑图易封』💫", "💫『手动跑图-小图模式』💫",
        "💫『手动跑图-大图模式』💫", "💢『查漏补缺』💢", "♾️『跑图间隔』♾️",
        "⬅️『返回上页(主菜单)』⬅️"
    }, nil, "🚹请选择功能🚹")
    if menu == 1 then
        getLocation()
        if currentLocationIndex ~= 1 then
            gg.toast("请在『遇境』开启此功能")
            gg.sleep(1000)
            return false
        end
        AutoRunMap()
    end
    if menu == 2 then
        TempMenu = "GSmain"
        GSmain()
    end	
    if menu == 3 then
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    end
    if menu == 4 then
        TempMenu = "RunModeBigMenu"
        RunModeBigOrSmallMenu()
    end
    if menu == 5 then
        TempMenu = "FindLoseMenu"
        FindLoseMenu()
    end
    if menu == 6 then
        A_PTJG()
    end	
    if menu == 7 then
        TempMenu = "HomeMenu"
        HomeMenu()
    end
    Menu = nil
end

-- 『献祭』 菜单
function EdenMenu()
    local menu = gg.choice({
        "🧗🏻‍♂️『前往第一段山顶』🧗🏻‍♂️", "✴️『前往靓仔走廊』✴️",
        "☑️『开始拿小黑人』", "『返回上页(主菜单)』☑️"
    }, nil, "🚹请选择功能🚹")
    getLocation()
    if menu == 1 then
        if currentLocationIndex ~= 34 then
            gg.toast("🈲请在『暴风眼一图』开启此功能🈲")
            gg.sleep(1000)
            return false
        end
        Teleport({-3.0845277309417725, 197.02783203125, -21.36142921447754})
    end
    if menu == 2 then
        if currentLocationIndex ~= 35 then
            gg.toast("🈲请在『暴风眼二图』开启此功能🈲")
            gg.sleep(1000)
            return false
        end
        Teleport({6.947006702423096, 266.4453125, -249.5817108154297})
    end
    if menu == 3 then
        if currentLocationIndex ~= 36 then
            gg.toast("🈲请在『伊甸』开启此功能🈲")
            gg.sleep(1000)
            return false
        end
        PT7()
    end
    if menu == 4 then
        TempMenu = "HomeMenu"
        HomeMenu()
    end
    Menu = nil
end

-- 智能找门
function IntelligentFindDoor()
    local menuList = {}
    local tempMap = {}
    getLocation()

    if currentLocationIndex == 1 then
        gg.toast("在『遇境』你就不能走两不吗？")
        gg.sleep(1000)
        TempMenu = "FindWingMenu"
        FindWingMenu()
        return false
    elseif currentLocationIndex == 2 then
        menuList[1] = "前往『云野』"
        tempMap = mapDoor1_1
    elseif currentLocationIndex == 3 then
        menuList[1] = "前往『云野二图』"
        menuList[2] = "前往『云野左图』"
        menuList[3] = "前往『云野右图』"
        tempMap = mapDoor2_1
    elseif currentLocationIndex == 4 then
        menuList[1] = "前往『云野一图』"
        menuList[2] = "前往『云野左图』"
        menuList[3] = "前往『云野右图』"
        menuList[4] = "前往『云野八人门图』"
        menuList[5] = "前往『云野宫殿』"
        tempMap = mapDoor2_2
    elseif currentLocationIndex == 5 then
        menuList[1] = "前往『云野一图』"
        menuList[2] = "前往『云野二图』"
        tempMap = mapDoor2_3
    elseif currentLocationIndex == 6 then
        menuList[1] = "前往『云野一图』"
        menuList[2] = "前往『云野二图』"
        menuList[3] = "前往『云野圣岛图』"
        tempMap = mapDoor2_4
    elseif currentLocationIndex == 7 then
        menuList[1] = "前往『云野右图』"
        tempMap = mapDoor2_5
    elseif currentLocationIndex == 8 then
        menuList[1] = "前往『云野二图』"
        tempMap = mapDoor2_6
    elseif currentLocationIndex == 9 then
        menuList[1] = "前往『云野二图』"
        menuList[2] = "前往『雨林』"
        tempMap = mapDoor2_7
    elseif currentLocationIndex == 10 then
        menuList[1] = "前往『雨林图二』"
        tempMap = mapDoor3_1
    elseif currentLocationIndex == 11 then
        menuList[1] = "前往『雨林一图』"
        menuList[2] = "前往『雨林水母图』"
        menuList[3] = "前往『雨林隐藏图』"
        tempMap = mapDoor3_2
    elseif currentLocationIndex == 12 then
        menuList[1] = "前往『雨林地底隐藏图』"
        menuList[2] = "前往『雨林水母图』"
        tempMap = mapDoor3_3
    elseif currentLocationIndex == 13 then
        menuList[1] = "前往『雨林隐藏图』"
        tempMap = mapDoor3_4
    elseif currentLocationIndex == 14 then
        menuList[1] = "前往『雨林二图』"
        menuList[2] = "前往『雨林隐藏图』"
        menuList[3] = "前往『雨林宫殿图』"
        tempMap = mapDoor3_5
    elseif currentLocationIndex == 15 then
        menuList[1] = "前往『霞谷』"
        tempMap = mapDoor3_6
    elseif currentLocationIndex == 16 then
        menuList[1] = "前往『霞谷霞光城』"
        menuList[2] = "前往『霞谷滑雪赛道』"
        tempMap = mapDoor4_1
    elseif currentLocationIndex == 17 then
        menuList[1] = "前往『霞谷一图』"
        menuList[2] = "前往『霞谷飞行赛道』"
        tempMap = mapDoor4_2
    elseif currentLocationIndex == 18 then
        menuList[1] = "前往『霞谷霞光城』"
        menuList[2] = "前往『霞谷赛道终点』"
        tempMap = mapDoor4_3
    elseif currentLocationIndex == 19 then
        menuList[1] = "前往『霞谷一图』"
        menuList[2] = "前往『霞谷赛道终点』"
        tempMap = mapDoor4_4
    elseif currentLocationIndex == 20 then
        menuList[1] = "前往『霞谷宫殿』"
        tempMap = mapDoor4_5
    elseif currentLocationIndex == 21 then
        menuList[1] = "前往『赛道终点』"
        menuList[2] = "前往『墓土』"
        tempMap = mapDoor4_6
    elseif currentLocationIndex == 22 then
        menuList[1] = "前往『墓土二图』"
        tempMap = mapDoor5_1
    elseif currentLocationIndex == 23 then
        menuList[1] = "前往『墓土三图』"
        menuList[2] = "前往『墓土方舟』"
        tempMap = mapDoor5_2
    elseif currentLocationIndex == 24 then
        menuList[1] = "前往『墓土二图』"
        tempMap = mapDoor5_3
    elseif currentLocationIndex == 25 then
        menuList[1] = "前往『墓土二图』"
        menuList[2] = "前往『墓土沉船图』"
        menuList[3] = "前往『墓土古战场图』"
        tempMap = mapDoor5_4
    elseif currentLocationIndex == 26 then
        menuList[1] = "前往『墓土三图』"
        menuList[2] = "前往『墓土古战场图』"
        tempMap = mapDoor5_5
    elseif currentLocationIndex == 27 then
        menuList[1] = "前往『墓土三图』"
        menuList[2] = "前往『墓土宫殿』"
        menuList[3] = "前往『墓土沉船』"
        tempMap = mapDoor5_6
    elseif currentLocationIndex == 28 then
        menuList[1] = "前往『禁阁』"
        tempMap = mapDoor5_7
    elseif currentLocationIndex == 29 then
        menuList[1] = "前往『禁阁隐藏图』"
        menuList[2] = "前往『禁阁高层』"
        tempMap = mapDoor6_1
    elseif currentLocationIndex == 30 then
        menuList[1] = "前往『禁阁低层』"
        tempMap = mapDoor6_2
    else
        gg.toast("『" .. door[currentLocationIndex][3] ..
                     "』暂时还没有开放此功能")
        TempMenu = "FindWingMenu"
        gg.sleep(1000)
        return false
    end

    table.insert(menuList, "『返回上页』")

    local menu = gg.choice(menuList, nil, "选择传送的地方：")
    if menu == nil then
        TempMenu = "FindWingMenu"
        gg.setVisible(false)
        return false
    elseif tempMap[menu] ~= nil then
        Teleport(tempMap[menu])
        gg.sleep(1000)
        TempMenu = "FindWingMenu"
        FindWingMenu()
    elseif tempMap[menu] == nil then
        TempMenu = "FindWingMenu"
    else
        gg.toast("发生未知错误，请跟管理员反馈")
        gg.sleep(1000)
        TempMenu = "FindWingMenu"
        return false
    end

    Menu = nil
end

-- 寻找光翼 菜单
function FindWingMenu()
    local menu = gg.choice({
        "🔙『上一个』🔙", "🔜『下一个』🔜", "❓『我猜你接下来想去』❓",
        "⬅️『返回上页(主菜单)』⬅️"
    }, nil, "⚡进入某个地图后，直接点下一个即可：⚡")
    if KG_qtdr == "关" then
         A_qtdr()
    end
    if KG_qtzh == "关" then
         A_qtzh()
    end
    if menu == 1 or menu == 2 then
        getLocation()

        local tipsStr = ""

        if menu == 1 then
            tipsStr = "🈲这已经是『" .. door[currentLocationIndex][3] ..
                          "』的第一个光翼了🈲"
        end
        if menu == 2 then
            tipsStr = "🈲这已经是『" .. door[currentLocationIndex][3] ..
                          "』的最后一个光翼了🈲"
        end

        if currentLocationIndex ~= prevCurrentLocationIndex then
            wingCount = 0
            prevCurrentLocationIndex = currentLocationIndex
        end

        local tempMap = {}

        if currentLocationIndex == 2 then
            tempMap = wing1
        elseif currentLocationIndex == 3 then
            tempMap = wing2_1
        elseif currentLocationIndex == 4 then
            tempMap = wing2_5
        elseif currentLocationIndex == 5 then
            tempMap = wing2_2
        elseif currentLocationIndex == 6 then
            tempMap = wing2_3
        elseif currentLocationIndex == 7 then
            tempMap = wing2_4
        elseif currentLocationIndex == 8 then
            tempMap = wing2_6
        elseif currentLocationIndex == 10 then
            tempMap = wing3_1
        elseif currentLocationIndex == 11 then
            tempMap = wing3_2
        elseif currentLocationIndex == 12 then
            tempMap = wing3_3
        elseif currentLocationIndex == 13 then
            tempMap = wing3_4
        elseif currentLocationIndex == 14 then
            tempMap = wing3_5
        elseif currentLocationIndex == 15 then
            tempMap = wing3_6
        elseif currentLocationIndex == 16 then
            tempMap = wing4_1
        elseif currentLocationIndex == 17 then
            tempMap = wing4_4
        elseif currentLocationIndex == 18 then
            tempMap = wing4_5
        elseif currentLocationIndex == 19 then
            tempMap = wing4_2
        elseif currentLocationIndex == 20 then
            tempMap = wing4_3
        elseif currentLocationIndex == 21 then
            tempMap = wing4_6
        elseif currentLocationIndex == 23 then
            tempMap = wing5_1
        elseif currentLocationIndex == 24 then
            tempMap = wing5_6
        elseif currentLocationIndex == 25 then
            tempMap = wing5_2
        elseif currentLocationIndex == 26 then
            tempMap = wing5_3
        elseif currentLocationIndex == 27 then
            tempMap = wing5_4
        elseif currentLocationIndex == 28 then
            tempMap = wing5_5
        elseif currentLocationIndex == 29 then
            tempMap = wing6_2
        elseif currentLocationIndex == 30 then
            tempMap = wing6_1
        elseif currentLocationIndex == 31 then
            tempMap = wing6_3
        else
            gg.toast("你当前在『" .. door[currentLocationIndex][3] ..
                         "』，此处没有光翼")
            gg.sleep(1000)
            return false
        end

        if menu == 1 then wingCount = wingCount - 1 end

        if menu == 2 then wingCount = wingCount + 1 end

        if tempMap[wingCount] == nil then
            gg.toast(tipsStr)
            if menu == 1 then wingCount = wingCount + 1 end
            if menu == 2 then wingCount = wingCount - 1 end
            gg.sleep(1000)
            return false
        end
        Teleport(tempMap[wingCount])
    end

    if menu == 3 then
        TempMenu = "IntelligentFindDoor"
        IntelligentFindDoor()
    end

    if menu == 4 then
        TempMenu = "HomeMenu"
        HomeMenu()
    end

    Menu = nil
end

-- 智能找门
function IntelligentFindDoor2()
    local menuList = {}
    local tempMap = {}
    getLocation()

    if currentLocationIndex == 1 then
        gg.toast("🚹在『遇境』你就不能走两不吗？🚹")
        gg.sleep(1000)
        TempMenu = "RunModeMenu"
         RunModeMenu()
        return false
    elseif currentLocationIndex == 2 then
        menuList[1] = "🈯前往『云野』🈯"
		menuList[2] = "🈯前往『预言山谷』🈯"
        tempMap = mapDoor1_1
    elseif currentLocationIndex == 41 then
		menuList[1] = "🈯前往『晨岛主图』🈯"
        tempMap = mapDoor1_2		
    elseif currentLocationIndex == 3 then
        menuList[1] = "🈯前往『云野二图』🈯"
        menuList[2] = "🈯前往『云野左图』🈯"
        menuList[3] = "🈯前往『云野右图』🈯"
        tempMap = mapDoor2_1
    elseif currentLocationIndex == 4 then
        menuList[1] = "🈯前往『云野一图』🈯"
        menuList[2] = "🈯前往『云野左图』🈯"
        menuList[3] = "🈯前往『云野右图』🈯"
        menuList[4] = "🈯前往『云野八人门』🈯"
        menuList[5] = "🈯前往『云野宫殿』🈯"
        tempMap = mapDoor2_2
    elseif currentLocationIndex == 5 then
        menuList[1] = "🈯前往『云野一图』🈯"
        menuList[2] = "🈯前往『云野二图』🈯"
        tempMap = mapDoor2_3
    elseif currentLocationIndex == 6 then
        menuList[1] = "🈯前往『云野一图』🈯"
        menuList[2] = "🈯前往『云野二图』🈯"
        menuList[3] = "🈯前往『云野圣岛图』🈯"
        tempMap = mapDoor2_4
    elseif currentLocationIndex == 7 then
        menuList[1] = "🈯前往『云野右图』🈯"
        tempMap = mapDoor2_5
    elseif currentLocationIndex == 8 then
        menuList[1] = "前往『云野二图』"
		menuList[2] = "前往『云野八人高层』"
		menuList[3] = "前往『云野图二桥上』"
        tempMap = mapDoor2_6
    elseif currentLocationIndex == 9 then
        menuList[1] = "🈯前往『云野二图』🈯"
        menuList[2] = "🈯前往『雨林』🈯"
        tempMap = mapDoor2_7
    elseif currentLocationIndex == 10 then
        menuList[1] = "🈯前往『雨林图二』🈯"
        tempMap = mapDoor3_1
    elseif currentLocationIndex == 11 then
        menuList[1] = "🈯前往『雨林一图』🈯"
        menuList[2] = "🈯前往『雨林水母图』🈯"
        menuList[3] = "🈯前往『雨林隐藏图』🈯"
        tempMap = mapDoor3_2
    elseif currentLocationIndex == 12 then
        menuList[1] = "🈯前往『雨林地底隐藏图』🈯"
        menuList[2] = "🈯前往『雨林水母图』🈯"
        tempMap = mapDoor3_3
    elseif currentLocationIndex == 13 then
        menuList[1] = "🈯前往『雨林隐藏图』🈯"
        tempMap = mapDoor3_4
    elseif currentLocationIndex == 14 then
        menuList[1] = "🈯前往『雨林二图』🈯"
        menuList[2] = "🈯前往『雨林隐藏图』🈯"
        menuList[3] = "🈯前往『雨林宫殿图』🈯"
        tempMap = mapDoor3_5
    elseif currentLocationIndex == 15 then
        menuList[1] = "🈯前往『霞谷』🈯"
        tempMap = mapDoor3_6
    elseif currentLocationIndex == 16 then
        menuList[1] = "🈯前往『霞谷霞光城』🈯"
        menuList[2] = "🈯前往『霞谷滑雪赛道』🈯"
        tempMap = mapDoor4_1
    elseif currentLocationIndex == 17 then
        menuList[1] = "🈯前往『霞谷一图』🈯"
        menuList[2] = "🈯前往『霞谷飞行赛道』🈯"
        tempMap = mapDoor4_2
    elseif currentLocationIndex == 18 then
        menuList[1] = "🈯前往『霞谷霞光城』🈯"
        menuList[2] = "🈯前往『霞谷赛道终点』🈯"
        tempMap = mapDoor4_3
    elseif currentLocationIndex == 19 then
        menuList[1] = "🈯前往『霞谷一图』🈯"
        menuList[2] = "🈯前往『霞谷赛道终点🈯』"
        tempMap = mapDoor4_4
    elseif currentLocationIndex == 20 then
        menuList[1] = "🈯前往『霞谷宫殿』🈯"
        tempMap = mapDoor4_5
    elseif currentLocationIndex == 21 then
        menuList[1] = "🈯前往『赛道终点』🈯"
        menuList[2] = "🈯前往『墓土』🈯"
        tempMap = mapDoor4_6
    elseif currentLocationIndex == 22 then
        menuList[1] = "🈯前往『墓土二图』🈯"
        tempMap = mapDoor5_1
    elseif currentLocationIndex == 23 then
        menuList[1] = "🈯前往『墓土三图』🈯"
        menuList[2] = "🈯前往『墓土方舟』🈯"
        tempMap = mapDoor5_2
    elseif currentLocationIndex == 24 then
        menuList[1] = "🈯前往『墓土二图』🈯"
        tempMap = mapDoor5_3
    elseif currentLocationIndex == 25 then
        menuList[1] = "🈯前往『墓土二图』🈯"
        menuList[2] = "🈯前往『墓土沉船图』🈯"
        menuList[3] = "🈯前往『墓土古战场图』🈯"
        tempMap = mapDoor5_4
    elseif currentLocationIndex == 26 then
        menuList[1] = "🈯前往『墓土三图』🈯"
        menuList[2] = "🈯前往『墓土古战场图』🈯"
        tempMap = mapDoor5_5
    elseif currentLocationIndex == 27 then
        menuList[1] = "🈯前往『墓土三图』🈯"
        menuList[2] = "🈯前往『墓土宫殿』🈯"
        menuList[3] = "🈯前往『墓土沉船』🈯"
        tempMap = mapDoor5_6
    elseif currentLocationIndex == 28 then
        menuList[1] = "🈯前往『禁阁』🈯"
        tempMap = mapDoor5_7
    elseif currentLocationIndex == 29 then
        menuList[1] = "🈯前往『禁阁隐藏图』🈯"
        menuList[2] = "🈯前往『禁阁高层』🈯"
		menuList[3] = "🈯前往『禁阁办公室』🈯"
        tempMap = mapDoor6_1
    elseif currentLocationIndex == 30 then
        menuList[1] = "🈯前往『禁阁低层』🈯"
        tempMap = mapDoor6_2
    elseif currentLocationIndex == 33 then
        menuList[1] = "🈯前往『禁阁低层』🈯"
        tempMap = mapDoor6_3		
    else
        gg.toast("㊙️『" .. door[currentLocationIndex][3] ..
                     "』暂时还没有开放此功能㊙️")
        TempMenu = "RunModeSmallMenu"
        gg.sleep(1000)
        return false
    end

    table.insert(menuList, "⬅️『返回上页』⬅️")

    local menu = gg.choice(menuList, nil, "*⚡选择传送的地方⚡")
    if menu == nil then
        TempMenu = "RunModeSmallMenu"
        gg.setVisible(false)
        return false
    elseif tempMap[menu] ~= nil then
	  if currentLocationIndex == 29 and  menu==3 then
	    A_TGC()
		gg.sleep(2000)
        Teleport(tempMap[menu])
	  else
        Teleport(tempMap[menu])	
	  end	
        gg.sleep(1000)
        TempMenu = "RunModeSmallMenu"
        RunModeBigOrSmallMenu()
    elseif tempMap[menu] == nil then
        TempMenu = "RunModeSmallMenu"
    else
        gg.toast("🈲发生未知错误，请跟管理员反馈🈲")
        gg.sleep(1000)
        TempMenu = "RunModeSmallMenu"
        return false
    end

    Menu = nil
end
-----------琛随身衣柜--------
KG_bz = '开';KG_bz0 = '开';KG_bz1 = '开';KG_bz2 = '开';KG_bz3 = '开';
KG_bz4 = '开';KG_bz5 = '开';KG_bz6 = '开';KG_bz7 = '开';bz_idx = 0
local KG_bzxs = true
local KG_bz = true
local bz_idx1 = 1
local bz_idx2 = 1
local KG_bzjl = {
  0,
  0,
  0,
  0,
  0,
  0,
  0
}
local zbpy_record = {}
local bz_id = {
  {
    {
      "普通裤子",
      {
        -603624060,
        "初始裤子"
      },
      {
        556395364,
        "超短裤子"
      },
      {
        -224798216,
        "五分裤子"
      },
      {
        739857211,
        "短腿裤子"
      },
      {
        971855908,
        "灯笼裤子"
      },
      {
        -208305596,
        "细腿裤子"
      },
      {
        -149134807,
        "束腿裤子"
      },
      {
        -1862075467,
        "喇叭裤子"
      }
    },
    {
      "季节裤子",
      {
        268095236,
        "归属季白棉裤"
      },
      {
        570621080,
        "凛冬季大棉裤"
      },
      {
        -1203892007,
        "凛冬季小棉裤"
      },
      {
        2119378818,
        "凛冬季束腿裤"
      },
      {
        -1180077310,
        "凛冬季紧身裤"
      },
      {
        1796000040,
        "圣岛季连体裤"
      },
      {
        1394323104,
        "圣岛季褶皱裤"
      },
      {
        19011829,
        "预言季大灰裤"
      },
      {
        -1537431460,
        "梦想季红秋裤"
      },
      {
        2037585691,
        "梦想季雪人裤"
      }
    }
  },
  {
    {
      "普通面具",
      {
        -631576414,
        "初始面具"
      },
      {
        -1340295543,
        "矮人面具"
      },
      {
        1600525874,
        "牛头面具"
      },
      {
        -1087589118,
        "罐子面具"
      },
      {
        252652358,
        "棱形面具"
      },
      {
        -1228262988,
        "弯角面具"
      },
      {
        -1177930131,
        "直角面具"
      },
      {
        -635831343,
        "短角面具"
      },
      {
        1929978494,
        "长筒面具"
      },
      {
        685288461,
        "四角面具"
      },
      {
        -27210618,
        "黑脸面具"
      }
    },
    {
      "感恩季面具",
      {
        2726619261,
        "感恩季功夫面具"
      },
      {
        3107843108,
        "感恩季狐狸面具"
      },
      {
        4228619598,
        "感恩季兔子面具"
      },
      {
        2535142832,
        "感恩季抱拳面具"
      },
      {
        3555166118,
        "感恩季白绒面具"
      },
      {
        1044037391,
        "感恩季鹿头面具"
      },
      {
        1934512129,
        "感恩季毕业面具"
      }
    },
    {
      "追光季面具",
      {
        1984844986,
        "追光季笛子面具"
      },
      {
        1968067367,
        "追光季背背面具"
      },
      {
        1884179272,
        "追光季排箫面具"
      },
      {
        1917734510,
        "追光季思考面具"
      },
      {
        2001622605,
        "追光季雨伞面具"
      },
      {
        1900956891,
        "追光季花瓣面具"
      }
    },
    {
      "归属季面具",
      {
        2699133379,
        "归属季吉他面具"
      },
      {
        378937945,
        "归属季礼花面具"
      },
      {
        2479708305,
        "归属季背手面具"
      },
      {
        3095923099,
        "归属季指挥面具"
      },
      {
        378937945,
        "归属季蹦迪面具"
      }
    },
    {
      "凛冬季面具",
      {
        2580070469,
        "凛冬季思考面具"
      },
      {
        1837529177,
        "凛冬季邀请面具"
      },
      {
        570479295,
        "凛冬季杂技面具"
      },
      {
        3716657324,
        "凛冬季飞吻面具"
      },
      {
        1304488902,
        "凛冬季毕业面具"
      }
    },
    {
      "魔法季面具",
      {
        1481505198,
        "魔法季点头面具"
      },
      {
        3456549768,
        "魔法季惊吓面具"
      },
      {
        1464727579,
        "魔法季疑问面具"
      }
    },
    {
      "圣岛季面具",
      {
        497608138,
        "圣岛季眼镜面具"
      },
      {
        -2066581312,
        "圣岛季胡子面具"
      }
    },
    {
      "预言季面具",
      {
        1841716599,
        "预言季山羊面具"
      },
      {
        874165952,
        "预言季蜘蛛面具"
      },
      {
        1803698272,
        "预言季老鼠面具"
      },
      {
        -1484435705,
        "预言季狮子面具"
      },
      {
        1975317361,
        "预言季毕业面具"
      }
    },
    {
      "梦想季面具",
      {
        1227125760,
        "梦想季兔子面具"
      },
      {
        377387846,
        "梦想季雪怪面具"
      },
      {
        2040915884,
        "梦想季孔雀面具"
      },
      {
        1804120909,
        "梦想季凤凰面具"
      }
    }
  },
  {
    {
      "普通发型",
      {
        1229053584,
        "初始发型"
      },
      {
        158418233,
        "呆毛发型"
      },
      {
        -1510505511,
        "马尾发型"
      },
      {
        589320403,
        "孤岛发型"
      },
      {
        1091766677,
        "短发发型"
      },
      {
        1779588853,
        "鸡冠发型"
      },
      {
        -1492518440,
        "羊辫发型"
      },
      {
        1151632134,
        "披肩发型"
      },
      {
        189805609,
        "蝎辫发型"
      },
      {
        -626389869,
        "蘑菇发型"
      },
      {
        1092648973,
        "中发发型"
      },
      {
        1415190429,
        "麻花发型"
      },
      {
        310226317,
        "美女发型"
      },
      {
        351601302,
        "圆头发型"
      },
      {
        1966947567,
        "三峰发型"
      },
      {
        -1712135015,
        "散乱发型"
      },
      {
        1472657881,
        "寸头发型"
      },
      {
        1747536341,
        "过肩发型"
      },
      {
        -239454226,
        "胡子发型"
      },
      {
        766797080,
        "单辫发型"
      },
      {
        1960678833,
        "双球发型"
      },
      {
        -1219935991,
        "右辫发型"
      },
      {
        21382025,
        "二八发型"
      },
      {
        392918653,
        "可爱发型"
      },
      {
        651777506,
        "狮子发型"
      },
      {
        -857360841,
        "顺毛发型"
      },
      {
        -1628326584,
        "丸子发型"
      },
      {
        1740771042,
        "光头发型"
      },
      {
        2926311387,
        "南瓜发型"
      },
      {
        -1485660690,
        "女巫发型"
      },
      {
        1941159163,
        "圣诞帽发型"
      },
      {
        265421366,
        "绊爱发型"
      }
    },
    {
      "普通毕业发型",
      {
        416680174,
        "晨岛胡子发型"
      },
      {
        -1862365002,
        "云野狗头发型"
      },
      {
        1078517906,
        "雨林妈妈发型"
      },
      {
        777821397,
        "霞谷卡卡发型"
      },
      {
        -913561859,
        "霞谷平菇发型"
      },
      {
        -1613597547,
        "墓土龙骨发型"
      },
      {
        -573731038,
        "禁阁毕业发型"
      }
    },
    {
      "感恩季发型",
      {
        499685406,
        "感恩季伸展发型"
      },
      {
        777066155,
        "感恩季功夫发型"
      },
      {
        3441194314,
        "感恩季狐狸发型"
      }
    },
    {
      "追光季发型",
      {
        2231097150,
        "追光季笛子发型"
      },
      {
        4152249299,
        "追光季背背发型"
      },
      {
        1636174276,
        "追光季排箫发型"
      },
      {
        4161779120,
        "追光季雨伞发型"
      },
      {
        3342968869,
        "追光季花瓣发型"
      }
    },
    {
      "归属季发型",
      {
        1859574381,
        "归属季礼花发型"
      },
      {
        168028151,
        "归属季指挥发型"
      }
    },
    {
      "凛冬季发型",
      {
        298050356,
        "凛冬季毕业发型"
      },
      {
        3216257586,
        "凛冬季邀请发型"
      },
      {
        1458373057,
        "凛冬季杂技发型"
      },
      {
        640785264,
        "凛冬季跳舞发型"
      }
    },
    {
      "魔法季发型",
      {
        -1069436357,
        "魔法季毕业发型"
      },
      {
        4147463881,
        "魔法季点头发型"
      },
      {
        862984657,
        "魔法季惊吓发型"
      },
      {
        1469931494,
        "魔法季疑问发型"
      },
      {
        3559895758,
        "魔法季捶背发型"
      },
      {
        1881845530,
        "魔法季瞌睡发型"
      },
      {
        1001062354,
        "魔法季螃蟹发型"
      }
    },
    {
      "圣岛季发型",
      {
        185578776,
        "圣岛季内秀发型"
      },
      {
        579079763,
        "圣岛季固执发型"
      },
      {
        -1705448850,
        "圣岛季鸣谢发型"
      },
      {
        -1638259346,
        "圣岛季放松发型"
      },
      {
        -871123844,
        "圣岛季热血发型"
      },
      {
        -583372888,
        "圣岛季水母发型"
      }
    },
    {
      "预言季发型",
      {
        -1188160913,
        "预言季高马尾"
      },
      {
        -1215936335,
        "预言季小丸子头"
      },
      {
        335244637,
        "预言季可爱丫鬟头"
      },
      {
        1292019970,
        "预言季泥鳅发型"
      }
    },
    {
      "梦想季发型",
      {
        1181948107,
        "梦想季雪怪发型"
      },
--      {
--        -1143370381,
--        "梦想季高顶帽"
--      },
      {
        -1021358035,
        "梦想季贵妃头"
      }
    }
  },
  {
    {
      "普通斗篷",
      {
        -2049687945,
        "初始斗篷"
      },
      {
        -4950150,
        "黄色斗篷"
      },
      {
        2038455273,
        "红色斗篷"
      },
      {
        -1127259402,
        "浅绿斗篷"
      },
      {
        1611389272,
        "青色斗篷"
      },
      {
        1676224199,
        "深蓝斗篷"
      },
      {
        -828166640,
        "紫色斗篷"
      },
      {
        -285876082,
        "粉色斗篷"
      },
      {
        -12114331,
        "黑色斗篷"
      },
      {
        -1652732985,
        "白色斗篷"
      },
      {
        2731242012,
        "绿芽斗篷"
      },
      {
        2496216296,
        "蝙蝠斗篷"
      },
      {
        832452232,
        "蜘蛛斗篷"
      },
      {
        2022733840,
        "圣诞斗篷"
      },
      {
        1245852319,
        "绊爱斗篷"
      }
    },
    {
      "TGC 蓝斗篷",
      {
        2219120716,
        "TGC 蓝斗篷"
      }
    },
    {
      "感恩季斗篷",
      {
        3130294398,
        "感恩季伸展斗篷"
      },
      {
        1205733815,
        "感恩季白绒斗篷"
      }
    },
    {
      "追光季斗篷",
      {
        2766860709,
        "追光季背背斗篷"
      },
      {
        2716527852,
        "追光季思考斗篷"
      },
      {
        1516488095,
        "追光季花瓣斗篷"
      }
    },
    {
      "归属季斗篷",
      {
        2181608090,
        "归属季吉他斗篷"
      },
      {
        3740388568,
        "归属季礼花斗篷"
      },
      {
        1740444614,
        "归属季背手斗篷"
      }
    },
    {
      "凛冬季斗篷",
      {
        803430286,
        "凛冬季思考斗篷"
      },
      {
        844189904,
        "凛冬季杂技斗篷"
      }
    },
    {
      "魔法季斗篷",
      {
        3952275244,
        "魔法季疑问斗篷"
      },
      {
        4002608101,
        "魔法季捶背斗篷"
      },
      {
        2473421893,
        "魔法季瞌睡斗篷"
      },
      {
        705761080,
        "魔法季螃蟹斗篷"
      }
    },
    {
      "圣岛季斗篷",
      {
        2091421626,
        "圣岛季蝴蝶斗篷"
      },
      {
        1632614382,
        "圣岛季鲲瑶斗篷"
      },
      {
        -2064347239,
        "圣岛季粉色斗篷"
      },
      {
        798847432,
        "圣岛季斑点斗篷"
      }
    },
    {
      "预言季斗篷",
      {
        -1774416765,
        "预言季蓝紫斗篷"
      },
      {
        -120474176,
        "预言季蓝鸟斗篷"
      },
      {
        839472537,
        "预言季红紫斗篷"
      }
    },
    {
      "梦想季斗篷",
      {
        -733531549,
        "梦想季围巾斗蓬"
      },
      {
        122710957,
        "梦想季道袍斗蓬"
      },
      {
        -1268890918,
        "梦想季碳烤红绒"
      },
      {
        441553228,
        "梦想季凤凰斗蓬"
      },
      {
        -1943851225,
        "梦想季圣诞蓝斗"
      },
      {
        1324678683,
        "梦想季隐形斗莲"
      }
    }
  },
  {
    {
      "背饰",
      {-1593950895, "灯笼🏮"},
      {992885953, "板凳💺"},
      {
        -1444947170,
        "圣诞板凳💺"
      },
      {3580839943, "秋千❤"},
      {3779226149, "篝火🔥"},
      {3634028466, "花伞🌂"},
      {2574095143, "雨伞☔"},
      {3269660804, "吉他🎻"},
      {
        2352004821,
        "尤克里里🎸"
      },
      {-1382855507, "琵琶🎸"},
      {396560731, "笛子🎶"},
      {1237767078, "排萧🎺"},
      {
        1889256860,
        "电子琴🎹"
      },
      {
        3275797515,
        "大钢琴🎼"
      },
      {
        3280753494,
        "烟花棒🎆"
      },
      {4246711693, "摇瑟"},
      {4196378836, "大瑟"},
      {900914909, "钢鼓"},
      {
        3499881140,
        "大被子鼓"
      },
      {
        2003040587,
        "小双边鼓"
      },
      {2671000446, "竖琴"},
      {399957901, "板琴"},
      {1064146256, "屁琴"},
      {1021011859, "号角🎷"},
      {
        2186944737,
        "先祖罐子"
      },
      {
        2041015009,
        "先祖水壶"
      },
      {
        776794517,
        "先祖长矛"
      },
      {
        2035109393,
        "啥都没有🈚"
      }
    }
  },
  {
    {
      "头饰",
      {3680499229, "无"},
      {343022577, "红耳机"},
      {
        299998503,
        "1周年帽子"
      },
      {
        -408332940,
        "魔法季耳坠"
      },
      {2066928294, "红独角"},
      {
        465529931,
        "圣诞鹿角"
      }
    }
  },
  {
    {
      "项链",
      {
        2348358260,
        "感恩季项链"
      },
      {
        1117786973,
        "追光季项链"
      },
      {
        1962184054,
        "归属季项链"
      },
      {
        3594119491,
        "凛冬季项链"
      },
      {
        3076646648,
        "魔法季项链"
      },
      {
        268594609,
        "圣岛季项链"
      },
      {
        1539087887,
        "圣岛季领结"
      },
      {
        -494082605,
        "预言季项链"
      },
      {
        148607714,
        "圣诞领结"
      },
      {
        1096380139,
        "梦想季项链"
      }
    }
  }
}
local bz_offset = {
  4,
  16,
  12,
  8,
  36,
  28,
  20
}
function getClothes()
  if Address_clos == nil and KG_bz then
    gg.toast("🔜正在获取 装扮地址👔")
    gg.clearResults()
    YF_Search("31,076", 4)
    local ssyg = gg.getResultCount()
    if ssyg ~= 0 then
      local zb = gg.getResults(ssyg)
      local tmp = {}
      do
        do
          for _FORV_6_, _FORV_7_ in ipairs(zb) do
            tmp[#tmp + 1] = {}
            tmp[#tmp].address = _FORV_7_.address - 196
            tmp[#tmp].flags = 4
          end
        end
      end
      tmp = gg.getValues(tmp)
      do
        do
          for _FORV_6_, _FORV_7_ in ipairs(tmp) do
            if _FORV_7_.value == 1 then
              Address_clos = tmp[_FORV_6_].address
              break
            end
          end
        end
      end
      KG_bz = false
    end
    gg.clearResults()
  end
  if Address_clos == nil then
    gg.toast("装扮地址❌获取失败")
    return false
  end
  zbpy = {}
  do
    do
      for _FORV_3_ = 1, 7 do
        zbpy[_FORV_3_] = {
          address = Address_clos + bz_offset[_FORV_3_],
          flags = 4
        }
      end
    end
  end
  return true
end

function M_ssyg()
  if getClothes() then
    FX = "M_ssyg"
    local menu = gg.choice({
      "裤子👖",
      "面具👓",
      "发型🧑",
      "️斗篷🕊",
      "背饰🎸",
      "头饰👶🏻",
      "项链⭕",
      "🔄随机装扮🔄",
      "🔁自动变装🔁",
      "↪️️恢复装扮↩️",
      "🔙返回上一页",	  
      "💫返回主页"
    }, nil, "随身衣柜👔👔👔——自慰，别人看不见")
    if menu == 12 then
      HomeMenu()
    elseif menu == 11 then
      M_GN()	  
    elseif menu ~= nil then
      if menu >= 1 and menu <= 4 then
        bz_idx1 = menu
        M_ssyg_1()
      elseif menu >= 5 and menu <= 7 then
        bz_idx1 = menu
        bz_idx2 = 1
        M_ssyg_2()
      else
        load("A_ssyg_" .. menu .. "()")()
      end
    end
  end
end

function M_ssyg_1()
  FX = "M_ssyg_1"
  local bz_list = {}
  do
    do
      for _FORV_4_ = 1, #bz_id[bz_idx1] do
        bz_list[_FORV_4_] = tostring(_FORV_4_) .. ". " .. bz_id[bz_idx1][_FORV_4_][1]
      end
    end
  end
  local bz_BackIdx = #bz_list + 1
  local bz_MainIdx = #bz_list + 2
  bz_list[bz_BackIdx] = "🔙返回衣柜"
  bz_list[bz_MainIdx] = "💫返回主页"
  local menu = gg.choice(bz_list, nil, "---想要更换哪种装扮？---")
  if menu == bz_BackIdx then
    M_ssyg()
  elseif menu == bz_MainIdx then
    HomeMenu()
  elseif menu ~= nil then
    bz_idx2 = menu
    M_ssyg_2()
  end
end

function M_ssyg_2()
  FX = "M_ssyg_2"
  local bz_list = {}
  do
    do
      for _FORV_4_ = 2, #bz_id[bz_idx1][bz_idx2] do
        bz_list[_FORV_4_] = tostring(_FORV_4_ - 1) .. ". " .. bz_id[bz_idx1][bz_idx2][_FORV_4_][2]
      end
    end
  end
  local bz_BackIdx = #bz_list + 1
  local bz_MainIdx = #bz_list + 2
  bz_list[bz_BackIdx] = "🔙返回上一页"
  bz_list[bz_MainIdx] = "💫返回衣柜"
  local menu = gg.choice(bz_list, nil, "---想要更换成什么" .. bz_id[bz_idx1][bz_idx2][1] .. "？---")
  if menu == bz_BackIdx then
   if bz_idx1 >= 5 and bz_idx1 <= 7 then
      M_ssyg()
    else
      M_ssyg_1()
    end
  elseif menu == bz_MainIdx then
    M_ssyg()
  elseif menu ~= nil then
    A_ssyg(bz_id[bz_idx1][bz_idx2][menu], bz_idx1)
  end
end

function A_ssyg(Target_Item, idx)
  local ssyg = {}
  ssyg[1] = zbpy[idx]
  if KG_bzjl[idx] == 0 then
    zbpy_record[idx] = gg.getValues(ssyg)[1]
    KG_bzjl[idx] = 1
  end
  ssyg[1].value = Target_Item[1]
  ssyg[1].freeze = true
  gg.addListItems(ssyg)
  if KG_bzxs then
    gg.toast(Target_Item[2] .. "✔穿戴成功")
  end
end

function A_TGC()
  if getClothes() then
    local ssyg = {}
    ssyg[1] = zbpy[4]
    ssyg[1].value = 2219120716
    gg.setValues(ssyg)
    gg.toast("TGC 蓝斗篷✔穿戴成功")
  end
end

function A_ssyg_8()
  KG_bzxs = false
  do
    do
      for _FORV_3_ = 1, 4 do
        local r_type = math.random(1, #bz_id[_FORV_3_])
        local r_num = math.random(2, #bz_id[_FORV_3_][r_type])
        A_ssyg(bz_id[_FORV_3_][r_type][r_num], _FORV_3_)
      end
    end
  end
  do
    do
      for _FORV_3_ = 5, 7 do
        local r_num2 = math.random(2, #bz_id[_FORV_3_][1])
        A_ssyg(bz_id[_FORV_3_][1][r_num2], _FORV_3_)
      end
    end
  end
  KG_bzxs = true
end

function A_ssyg_9()
  local sleep_bz = gg.prompt({
    "❓请输入变装间隔时间（默认5秒）[1,3600]❓"
  }, {
    [1] = "5"
  }, {
    [1] = "number"
  })
  if sleep_bz == nil then
    return 0
  elseif sleep_bz[1] == "" then
    sleep_bz = tonumber(5)
  else
    sleep_bz = tonumber(sleep_bz[1])
  end
  gg.toast("ヾ(￣▽￣)没人比我更时尚~\n\n变装时间间隔【" .. sleep_bz .. "】秒")
  A_ssyg_8()
  local times = tonumber(0)
  while true do
    if sleep_bz <= times then
      A_ssyg_8()
      times = tonumber(0)
    else
      gg.sleep(1000)
      times = times + 1
    end
    if gg.isVisible(true) then
      break
    end
  end
end

function A_ssyg_10()
  gg.removeListItems(zbpy)
  gg.setValues(zbpy_record)
  gg.toast("🔁全部装扮已恢复🔁")
  KG_bzjl = {
    0,
    0,
    0,
    0,
    0,
    0,
    0
  }
  zbpy_record = {}
end

--------琛随身衣柜--------

-- 魔法变装
local magicList = {}
magicList[1] = {2567483762, '烛光多多'}
magicList[2] = {1692428656, '返老还童'}
magicList[3] = {891098028, '长大成人'}
magicList[4] = {2142718166, '小只佬'}
magicList[5] = {2415651134, '大只佬'}
magicList[6] = {1097748727, '璀璨之星'}
magicList[7] = {1750685908, '元气满满'}
magicList[8] = {1860519737, '漂浮魔法'}
magicList[9] = {1067647386, '冥龙抗性'}
magicList[10] = {383062578, '黑暗抗性'}
magicList[11] = {2831023607, '雨水抗性'}
magicList[12] = {1983755432, '女巫帽子'}
magicList[13] = {930203946, '蜘网斗篷'}
magicList[14] = {1046521292, '南瓜头'}
magicList[15] = {625581156, '蝙蝠斗篷'}
magicList[16] = {1909998088, '圣诞鹿角魔法'}
magicList[17] = {1306675982, '圣诞斗篷魔法'}
magicList[18] = {2885283383, '圣诞帽魔法'}
magicList[19] = {256924066, '圣诞椅子魔法'}
magicList[20] = {8361886, '圣诞领结魔法'}
magicList[21] = {135625388, '鰩斗篷'}
magicList[22] = {3254347420, '白鸟头'}
magicList[23] = {3913119578, '篝火'}
magicList[24] = {3302950267, '花伞'}
magicList[25] = {3958237208, '鹿头'}
magicList[26] = {2473956919 ,'纪念帽'}
magicList[27] = {3510136091, '雪花斗篷'}
magicList[28] = {2932498072, '飞行祝福'}
magicList[29] = {4011408092 ,'魔法毕业帽'}
magicList[30] = {1405645877, '背背魔法'}
magicList[31] = {3989864629, '和朋友一起返老还童'}
magicList[32] = {953841005, '友谊魔法：灵魂伴侣'}
magicList[33] = {998754260, '友谊魔法：瞬移'}
magicList[34] = {1725047129, '暗蟹呼喊魔法'}
magicList[35] = {1814753890, '鲲鹏呼喊魔法'}
magicList[36] = {103122035, '传送魔法：晨岛长者'}
magicList[37] = {2661337598, '传传送魔法：云野长者'}
magicList[38] = {3038498957, '传送魔法：雨林长者'}
magicList[39] = {224110574, '传送魔法：雨林树洞入口'}
magicList[40] = {1153544860, '传送魔法：你和我'}
magicList[41] = {1319710173, '灯笼魔法'}
magicList[42] = {2079599063, '绿芽斗篷魔法'}
magicList[43] = {540856305, 'TGC斗篷魔法'}
magicList[44] = {784922793, '感恩狐狸面具魔法'}
magicList[45] = {4076351969, '音韵尖嘴鸟面具魔法'}
magicList[46] = {4288923471, '花瓣斗篷魔法'}
magicList[47] = {1375571404, '灯泡斗篷魔法'}
magicList[48] = {2671704957, '音韵白鸟斗篷魔法'}
magicList[49] = {3293075034, '烟花棒魔法'}

--[[magicList[1] = {-1040619876, '白鸟头'}
magicList[2] = {-381847718, '篝火'}
magicList[3] = {-992017029, '花伞'}
magicList[4] = {-336730088, '鹿头'}
magicList[5] = {1692428656, '返老还童'}
magicList[6] = {891098028, '长大成人'}
magicList[7] = {2142718166, '小只佬'}
magicList[8] = {-1879316162, '大只佬'}
magicList[9] = {1405645877, '背背魔法'}
magicList[10] = {3989864629, '和朋友一起返老还童'}
magicList[11] = {953841005, '友谊魔法：灵魂伴侣'}
magicList[12] = {998754260, '友谊魔法：瞬移'}
magicList[13] = {1725047129, '暗蟹呼喊魔法'}
magicList[14] = {1814753890, '鲲鹏呼喊魔法'}
magicList[15] = {103122035, '传送魔法：晨岛长者'}
magicList[16] = {2661337598, '传传送魔法：云野长者'}
magicList[17] = {3038498957, '传送魔法：雨林长者'}
magicList[18] = {224110574, '传送魔法：雨林树洞入口'}
magicList[19] = {1153544860, '传送魔法：你和我'}
magicList[20] = {1983755432, '女巫帽子'}
magicList[21] = {930203946, '蜘网斗篷'}
magicList[22] = {1046521292, '南瓜头'}
magicList[23] = {625581156, '蝙蝠斗篷'}
magicList[24] = {1909998088, '圣诞鹿角魔法'}
magicList[25] = {1306675982, '圣诞斗篷魔法'}
magicList[26] = {2885283383, '圣诞帽魔法'}
magicList[27] = {256924066, '圣诞椅子魔法'}
magicList[28] = {8361886, '圣诞领结魔法'}
magicList[29] = {-784831205, '雪花斗篷'}
magicList[30] = {-1821010377, '纪念帽'}
magicList[31] = {135625388, '鰩斗篷'}
magicList[32] = {1319710173, '灯笼魔法'}
magicList[33] = {2079599063, '绿芽斗篷魔法'}
magicList[34] = {540856305, 'TGC斗篷魔法'}
magicList[35] = {784922793, '感恩狐狸面具魔法'}
magicList[36] = {4076351969, '音韵尖嘴鸟面具魔法'}
magicList[37] = {4288923471, '花瓣斗篷魔法'}
magicList[38] = {1375571404, '灯泡斗篷魔法'}
magicList[39] = {2671704957, '音韵白鸟斗篷魔法'}
magicList[40] = {-283559204, '魔法毕业帽'}
magicList[41] = {-1727483534, '烛光多多'}
magicList[42] = {1097748727, '璀璨之星'}
magicList[43] = {1750685908, '元气满满'}
magicList[44] = {1860519737, '漂浮魔法'}
magicList[45] = {1067647386, '冥龙抗性'}
magicList[46] = {383062578, '黑暗抗性'}
magicList[47] = {-1463943689, '雨水抗性'}
magicList[48] = {3293075034, '烟花棒魔法'}
]]
---魔法粒子特效（需提前生效一个魔法））
function particle() 
  local jb = {} 
  jb = {} 
  jb[1] = {} 
  jb[1].address = zerb.address + 26724 
  jb[1].flags = gg.TYPE_DWORD jb[1].freeze = false 
  jb[1].value = 0 
  gg.setValues(jb) 
  gg.addListItems(jb) 
  gg.removeListItems(jb) 
end
magicc = "关" 
---冻结特效开关
function magic()
   setMagic(1097748727, 1)  
   magicc = "开" 
   local jb = {} 
   jb = {} 
   jb[1] = {} 
   jb[1].address = zerb.address + 26684+40 
   jb[1].flags = gg.TYPE_DWORD jb[1].freeze = true 
   jb[1].value = 0 
   gg.setValues(jb) 
   gg.addListItems(jb) 
   end
function magicoff() 
   resetMagic() 
   local jb = {} 
   jb = {} 
   jb[1] = {} 
   jb[1].address = zerb.address + 26684+40 
   jb[1].flags = gg.TYPE_DWORD 
   jb[1].freeze = false 
   jb[1].value = 0 
   gg.setValues(jb) 
   gg.addListItems(jb) 
   gg.removeListItems(jb) 
   magicc = "关" 
end

function Baqi()
 if magicc ~= "开" then 
     magic()
  else 
    magicoff() 
 end   
end

local magicNumList = {} -- 已使用魔法列表
local countMagic = 0

local magic = {}

gg.clearResults()
gg.setRanges(gg.REGION_C_ALLOC)

-- 获取能量内存地址
function getEnergyAddress()
    magic[1] = gg.getValues({
        [1] = {
            address = gg.getRangesList('libBootloader.so')[1].start + 0x1E711D0,
            flags = 32
        }
    })[1].value + 3550372 -- 人物核心

    gg.clearResults()
end

function setMagic(magicId, i)
    local index = i - 1 or 0
    local temp = {}
    temp[1] = {}
    temp[1].address = magic[1] + 26684 + 48 * index -- 魔法值，每增加一个偏移 48
    temp[1].flags = gg.TYPE_DWORD
    temp[1].value = magicId
    gg.setValues(temp)

    temp[1] = {}
    temp[1].address = magic[1] + 26692 + 48 * index -- 魔法持续时间，每增加一个偏移 48
    temp[1].flags = gg.TYPE_DWORD
    temp[1].value = 1752658590
    gg.setValues(temp)

    temp[1] = {}
    temp[1].address = magic[1] + 29756 -- 魔法数量，每增加一种魔法状态要加 1
    temp[1].flags = gg.TYPE_DWORD
    temp[1].value = i
    gg.setValues(temp)

    temp[1] = {}
    temp[1].address = magic[1] + 28652
    temp[1].flags = gg.TYPE_DWORD
    temp[1].value = 0
    gg.setValues(temp)

    countMagic = countMagic + 1
end

function resetMagic()
    local temp = {}
    for i = 1, countMagic do
        temp[1] = {}
        temp[1].address = magic[1] + 26684 + 48 * (i - 1) -- 魔法值，每增加一个偏移 48
        temp[1].flags = gg.TYPE_DWORD
        temp[1].value = 0
        gg.setValues(temp)
    end

    temp[1] = {}
    temp[1].address = magic[1] + 29756 -- 魔法数量，每增加一种魔法状态要加 1
    temp[1].flags = gg.TYPE_DWORD
    temp[1].value = 0
    gg.setValues(temp)

    temp[1] = {}
    temp[1].address = magic[1] + 28652
    temp[1].flags = gg.TYPE_DWORD
    temp[1].value = 1
    gg.setValues(temp)

    magicNumList = {}

    countMagic = 0

    gg.toast("🔁已恢复默认状态🔁")
    gg.sleep(1000)
end

function MagicMenu()
    local countMagic = 1
    local menuMenuList = {}
    for k, v in pairs(magicList) do
        menuMenuList[k] = "『" .. v[2] .. "』"
        countMagic = countMagic + 1
    end
    menuMenuList[countMagic] = "🔄『恢复默认』🔄"
    countMagic = countMagic + 1
    menuMenuList[countMagic] = "⬅️『返回上一页』⬅️"
    local menu = gg.choice(menuMenuList, nil, "❓请选择魔法❓")

    if menu == countMagic then
        TempMenu = "M_GN"
        M_GN()  
    elseif menu == countMagic - 1 then
        resetMagic()
    elseif menu == nil then
        TempMenu = "M_GN"
    else
        for i = 1, countMagic do
            if magicNumList[i] == nil then
                magicNumList[i] = magicList[menu][1]
                setMagic(magicList[menu][1], i)
                break
            end
        end

    end

    Menu = nil
end

-- 魔法变装


--[[
-- 还原速度
function resetSpeed()
    data[8][1].value = gameSpeed
    data[8][1].freeze = false
    gg.setValues(data[8])
    gg.removeListItems(data[8])
end

-- 加速
function speedUp(x)
    data[8][1].value = gameSpeed * x
    data[8][1].freeze = true
    gg.setValues(data[8])
    gg.addListItems(data[8])
end
]]
-- 倍速菜单
function SpeedMenu()
    local menu = gg.choice({
        "🔄『默认速度』🔄","2⃣️『2 倍速』2⃣️", "3⃣️『3 倍速』3⃣️", "5⃣️『5 倍速』5⃣️", "6⃣️『6 倍速』6⃣️",
        "9⃣️『9 倍速』9⃣️", "⬅️『返回上页(主菜单)』⬅️"
    }, nil, "💟请选择功能：💟")

    if menu == 1 then resetSpeed() end

    if menu == 2 then speedUp(2) end

    if menu == 3 then speedUp(3) end
	
    if menu == 4 then speedUp(5) end

    if menu == 5 then speedUp(6) end

    if menu == 6 then speedUp(9) end
	
    if menu == 7 then
        TempMenu = "HomeMenu"
        HomeMenu()
    end

    Menu = nil
end


-- 花里胡哨菜单 
function M_GN()
    local menu = gg.choice({
        "👑『魔法变装』👑", "👔『随身衣柜』👔", "🆙『动作升级』🆙", "🎊『无限烟花』🎊", "🔢『获取坐标』🔢", "🈲『无翼』🈲", "🚹『临时光翼』🚹", "✴️『画质增强』✴️", "㊙️『测试功能』㊙️", "☢️『吸光芒』☢️", "☣️『吸烛火』☣️", "⛩️️『开七门』⛩️️", "💥『全身闪耀』💥️",
        "⬅️『返回主页』⬅️"
    }, nil, "🔷温馨提示：需要哪个，使用哪个🔷")
    if menu == 1 then
        TempMenu = "MagicMenu"
        MagicMenu()	
    end
    if menu == 2 then
        TempMenu = "M_ssyg"
        M_ssyg()
    end
    if menu == 3 then
        dzsj()
    end
    if menu == 4 then
        wxyh()
    end	
    if menu == 5 then
        A_Get_zero(1)
    end
    if menu == 6 then
        wuyi()
    end
    if menu == 7 then
        ChangeGY()
    end
    if menu == 8 then
        hzzl()
    end
    if menu == 9 then
      if panduan("/sdcard/cmd.txt") == true then
          cmdd=read("/sdcard/cmd.txt")
          else 
          write("/sdcard/cmd.txt","")
          cmdd=read("/sdcard/cmd.txt")
          end
              if cmdd == nil  then 
                      cmdt = "上一次为空" 
              else
                      if cmdd == "" then cmdt = "上一次为空" end
                      if cmdd ~= "" then cmdt = "留空执行上一次的" .. cmdd .. "" end 
              end
              binn=gg.prompt({"🔶请输入需要执行的代码🔶" .. cmdt .. ""}, {n},{'text'})
              if binn ~= nil then 
                      if binn[1] == "" then
                            dofile("/sdcard/cmd.txt") 
                      else
                            write("/sdcard/cmd.txt",(binn[1]))
                            dofile("/sdcard/cmd.txt") 
                      end
                else 
         end 
    end
    if menu == 10 then
        xiguangmang()
    end
    if menu == 11 then
        absorbCandlelight()
		gg.sleep(1000)
		gg.toast("🔥烛火已吸收完毕🔥")
    end
    if menu == 12 then
       KQM()
    end	
    if menu == 13 then
       Baqi()
    end	
    if menu == 14 then
        TempMenu = "HomeMenu"
        HomeMenu()
    end	
    Menu = nil
end

function M_DTCD()
    FX = "M_DTCD"
    local SN = gg.choice({
      "⛲遇境⛲",
      "🗻晨岛🗻",
      "☁️云野☁️",
      "⛈️雨林⛈️",
      "🌈霞谷🌈",
      "🌪️暮土🌪️",
      "🏯禁阁🏯",
      "🦐暴风眼🦐",
      "✨重生之路✨",
      "⬅️返回主页⬅️",
    }, nil)
    if SN == 1 then
     
      cd_yj()
    elseif SN == 2 then
       
      cd_cd()
    elseif SN == 3 then
       
      cd_yy()
    elseif SN == 4 then
       
      cd_yl()
    elseif SN == 5 then
       
      cd_xg()
    elseif SN == 6 then
       
      cd_mt()
    elseif SN == 7 then
       
      cd_jg()
    elseif SN == 8 then
       
      cd_bfy()
    elseif SN == 9 then
       
      cd_cszl()
    elseif SN == 10 then
      HomeMenu()
    end
end
function cd_yj()
    FX = "cd_yj"
    local list_cd = {
      "小黑屋🌌",
      "观星台🌃",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--遇境彩蛋🐣--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
     renyimen(1)
      Teleport(cdmap_yj[cd_index])
    end
end

function cd_cd()
    FX = "cd_cd"
    local list_cd = {
      "彩虹桥🌈",
      "富士山🏔️",
      "晨岛CG🎆",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--晨岛彩蛋🐣--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    renyimen(2)
      Teleport(cdmap_cd[cd_index])
      gg.sleep(200)
      Teleport(cdmap_cd[cd_index])
    end
end
function cd_yy()
    FX = "cd_yy"
    local list_cd = {
      "青青草原🌴-左侧图",
      "幽灵船🚢-三塔图",
      "小草坝🌴-终点图",
      "云野CG💙-终点图",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--云野彩蛋🐣--") 
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    if cd_index==1 then renyimen(5) end
    if cd_index==2 then renyimen(4) end
    if cd_index==3 then renyimen(9) end
    if cd_index==4 then renyimen(9) end
      Teleport(cdmap_yy[cd_index])
      gg.sleep(200)
      Teleport(cdmap_yy[cd_index])
    end
end

function cd_yl()
    FX = "cd_yl"
    local list_cd = {
      "梅花桩🎋-右侧图",
      "雨林CG💙-终点图",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--雨林彩蛋🐣--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    if cd_index==1 then renyimen(12) end
    if cd_index==2 then renyimen(15) end
      Teleport(cdmap_yl[cd_index])
      gg.sleep(200)
      Teleport(cdmap_yl[cd_index])
    end
end

function cd_xg()
    FX = "cd_xg"
    local list_cd = {
      "千鸟城🗺-终点图️",
      "霞谷城堡🏰-飞行赛道",
      "城堡云朵☁️-飞行赛道",
	  "前版本🗺-霞谷赛道终点️",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--霞谷彩蛋🐔--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    if cd_index==1 then renyimen(21) end
    if cd_index==2 then renyimen(18) end
    if cd_index==3 then renyimen(18) end
	if cd_index==4 then renyimen(49) end
      Teleport(cdmap_xg[cd_index])
      gg.sleep(200)
      Teleport(cdmap_xg[cd_index])
    end
end

function cd_mt()
    FX = "cd_mt"
    local list_cd = {
      "冰淇淋山🍨-起点图",
      "小云海☁️ - 沉船图",
      "暮土CG💙-终点图",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--墓土彩蛋🐣--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    if cd_index==1 then renyimen(22) end
    if cd_index==2 then renyimen(26) end
    if cd_index==3 then renyimen(28) end
      Teleport(cdmap_mt[cd_index])
      gg.sleep(200)
      Teleport(cdmap_mt[cd_index])
    end
end

function cd_jg()
    FX = "cd_jg"
    local list_cd = {
      "闪电桥⚡-终点图",
      "蜡像馆🤶🏻-终点图",
      "日月岛🌓-终点图",
      "办公室门🌁-起点图",
      "空间站🛰-办公室里",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--禁阁彩蛋🐣--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    if cd_index==1 then renyimen(32) end
    if cd_index==2 then renyimen(32) end
    if cd_index==3 then renyimen(32) end
    if cd_index==4 then renyimen(29) end
    if cd_index==5 then renyimen(33) end
    Teleport(cdmap_jg[cd_index])
    gg.sleep(200)
    Teleport(cdmap_jg[cd_index])
    end
end

function cd_bfy()
    FX = "cd_bfy"
    local BFY = gg.choice({
      "图一终点🌄",
      "图二终点🌄",
      "图二 失色之地🗾",
      "上一页"
    }, nil, "--暴风眼彩蛋🐣--")
    if BFY == 1 then
    renyimen(34)
      Teleport(gy_bfy[2])
    elseif BFY == 2 then
    renyimen(35)
      Teleport(gy_bfy[4])
    elseif BFY == 3 then
    renyimen(35)
      Teleport(cdmap_bfy[1])
      gg.sleep(2000)
      Teleport(cdmap_bfy[2])
    elseif BFY == 4 then
      M_DTCD()
    end
end

function cd_cszl()
    FX = "cd_cszl"
    local list_cd = {
      "一图🔥开始上面",
      "一图🔥外围围墙",
      "一图🔥墓  碑",
      "一图🔥断石一",
      "一图🔥断石二",
      "一图🔥塔  尖",
      "一图🔥终点城堡塔顶",
      "一图🔥终点",
      "二图💙高  空",
      "二图💙终点",
      "三图🌹高空",
      "三图🌹聊天椅",
      "三图🌹祈祷石",
      "三图🌹终点",
      "上一页"
    }
    local cd_index = gg.choice(list_cd, nil, "--重生之路彩蛋🐣--")
    if cd_index == #list_cd then
      M_DTCD()
    elseif cd_index ~= nil then
    if cd_index < 9 then renyimen(20) else
    if cd_index < 11 then renyimen(17) else
    if cd_index== 15 then M_DTCD() end end end
      Teleport(cdmap_cszl[cd_index])
    end
end

 --地图数据
  mapN = {}
  --map[x] = {("文本"),代码,("名称"),花,光翼，烛火}
  mapN[1] = {("CandleSpace"),-768833570,("遇境"),0,0,1}
  mapN[2] = {'Dawn',1649439303,("晨岛"),1,1,1}
  mapN[3] = {'Prairie_ButterflyFields',-1817621630,("云野一图"),0,1,1}
  mapN[4] = {'Prairie_Village',-1944435120,("云野二图"),1,1,1}
  mapN[5] = {'Prairie_Cave',-1050035699,("云野左图"),0,1,1}
  mapN[6] = {'Prairie_NestAndKeeper',312004957,("云野右图"),0,1,1}
  mapN[7] = {'Prairie_Island',-1237641587,("云野海岛"),1,1,1}
  mapN[8] = {'DayHubCave',-1900248111,'云野八人门',0,1,1}
  mapN[9] = {'DayEnd',1190972738,("云野宫殿"),0,0,1}
  mapN[10] = {("Rain"),164626931,("雨林一图"),1,1,1}
  mapN[11] = {("RainForest"),-1455381650,'雨林二图',1,1,1}
  mapN[12] = {("RainShelter"),-1574275404,'雨林副本',1,1,1}
  mapN[13] = {("Rain_Cave"),-161371567,'雨林副本隐藏图',1,1,1}
  mapN[14] = {("RainMid"),-2135324521,'雨林水母图',1,1,1}
  mapN[15] = {("RainEnd"),128844448,'雨林宫殿',1,1,1}
  mapN[16] = {("Sunset"),1638008359,'霞谷一图',0,1,1}
  mapN[17] = {("Sunset_Citadel"),-2115418256,'霞谷飞行一图',0,1,1}
  mapN[18] = {("Sunset_FlyRace"),1844499196,'霞谷飞行二图',0,1,1}
  mapN[19] = {("SunsetRace"),571720490,'霞谷地面赛道',0,1,0}
 -- mapN[20] = {("SunsetEnd"),-1934656620,'霞谷终点',0,1,1}
  mapN[20] = {("SunsetColosseum"),263580627,'落日竞技场',0,1,1}
  mapN[21] = {("SunsetEnd2"),507487826,'霞谷宫殿',1,1,1}
  mapN[22] = {("DuskStart"),817373972,'墓土一图',0,0,1}
  mapN[23] = {("Dusk"),1147491976,'墓土二图',1,1,1}
  mapN[24] = {("DuskOasis"),170656205,'墓土魔法季',1,1,1}
  mapN[25] = {("DuskGraveyard"),864432821,'墓土五龙图',1,1,1}
  mapN[26] = {("Dusk_CrabField"),-1644045427,'墓土副本',1,1,1}
  mapN[27] = {("DuskMid"),1597085778,'墓土古战场',1,1,1}
  mapN[28] = {("DuskEnd"),-136010643,'墓土宫殿',1,1,1}
  mapN[29] = {("Night"),-1936060159,'禁阁低层',0,1,1}
  mapN[30] = {("NightArchive"),2518601,'禁阁副本',0,1,1}
  mapN[31] = {("Night2"),-1987505335,'禁阁高层',0,1,1}
  mapN[32] = {("NightEnd"),-2027781754,'禁阁终点',0,0,0}
  mapN[33] = {("TGCOffice"),295816905,'办公室',1,0,1}
  mapN[34] = {("StormStart"),-1184245578,'暴风一图',0,1,0}
  mapN[35] = {("Storm"),1705189686,'暴风二图',1,1,0}
  mapN[36] = {("DawnCave"),748712866,"试炼大厅",0,0,1}
  mapN[37] = {"Dawn_TrialsWater",-410824576,"水之试炼",0,0,1}
  mapN[38] = {"Dawn_TrialsEarth",1887730855,"土之试炼",0,0,1}
  mapN[39] = {"Dawn_TrialsAir",2050064391,"风之试炼",0,0,1}
  mapN[40] = {"Dawn_TrialsFire",1241316521,"火之试炼",0,0,1}
  mapN[41] = {("StormEnd"),-815180717,'伊甸',0,0,0}
  mapN[42] = {("OrbitMid"),-857831781,'重生一图',0,0,0}
  mapN[43] = {("OrbitEnd"),567986524,'重生二图',0,0,0}
  mapN[44] = {("CandleSpaceEnd"),-2043682661,'星光大道',0,0,0}
  mapN[45] = {("Credits"),261807733,'结尾动画',0,0,0}
  mapN[46] = {("SunsetColosseum"),263580627,"圆梦村",0,0,0}
  mapN[47] = {("SunsetVillage"),1759178769,"隐士公园",0,0,0}
  mapN[48] = {("Sunset_YetiPark"),649101397,"雪人公园",0,0,0}
  mapN[49] = {("SunsetEnd"),-1934656620,'霞谷终点',0,1,1}
  mapN[50] = {812663058;1953384759;1761636210;27502;0;0;2002863132;110;0;0;0;0;1768445706;25972;0;0;0;0;-11796322;1;0;0}

a = 1
z = 40
-- 位置
  weizhi = {}
  weizhi[1] = {}
  weizhi[1].address = zera.address + 9081392
  weizhi[1].flags = 4
--位置判断
function weizhipanduan()
    weizhi = gg.getValues(weizhi)
    return weizhi[1].value
end

-- 位置判断
function weizhipanduan1()
    weizhi = gg.getValues(weizhi)
    for i = 1, 40 do
        if weizhi[1].value == mapN[i][2] then
            gg.toast("你现在位于" .. mapN[i][3] .. "")
            X = i
            break
        end
    end
end

--位置判断
function wzpd()
   weizhi = gg.getValues(weizhi)
      for i = 1 , 40 do
        if weizhi[1].value == mapN[i][2] then
          X = i
          break
        end
     end
end

function pdt()
  x = weizhipanduan()
  wzpd()
  repeat 
  wzpd()
  until mapN[X][2] ~= x
end
  --吸花
function xihuaN()
  for i = 1, 3 do
      renzuobiao = gg.getValues(renzuobiao)
      xyz[i] = renzuobiao[i].value
  end
  for v = 1, 3 do
     for i = 1, 266 do huazuobiao[v][i].value = xyz[v] end
      gg.setValues(huazuobiao[v])
      gg.addListItems(huazuobiao[v])
     end
   wzpd()
    if mapN[X][4] == 1 then
       absorbCandlelight()
       gg.toast("等待炸花")
       gg.sleep(2000)
       absorbCandlelight()
    end
   if KG_qtzh ~= "开" then A_qtzh() end
end

function ztcd()
    if gg.isVisible(true) then
        gg.setVisible(false)
        speedUp(1)
        gg.toast("跑图暂停")
        ::menu::
        menu1 = gg.choice({"继续", "控制面板️", "返回跑图菜单"}, nil,
                          "暂停菜单")
        gg.setVisible(false)
        if menu1 == 1 then
            speedUp(10)
            return nil
        end
        if menu1 == 2 then A_PTJG() end
        if menu1 == 3 then RunModeMenu()  end
       
    end
end


function GSmain()
    ::bin0::
    gg.setVisible(false)
    menu = gg.choice({
        "📱控制面版📱", "🗻晨岛️🗻", "☁️云野☁️️", "⛈️雨林⛈️",
        "🌈霞谷🌈", "🌪️暮土🌪️", "🏯禁阁🏯", "🦐暴风眼🦐", "❇️预言季✳️", "❎关闭❎" ,"⬅️返回上页⬅️"
    }, nil,
      "🈲重要事说三遍!易封号!易封号!易封号🈲\n🚹跑图过程中打开GG悬浮窗可以结束跑图返回遇镜🚹\n❓从哪开始跑图❓")
    if menu == nil then goto binend0 end
    if menu == 1 then
        A_PTJG()
        goto binend0
    end
    time0 = os.clock()
    weizhipanduan1()
    if X == 1 then
        absorbCandlelight()
        a = 2
    end
    speedUp(50)
    if menu == 2 then
        a = 2
        Teleport({11.12615299225, 0.5613989234, 1.11112654209})
    end
    if menu == 3 then a = 3 end
    if menu == 4 then a = 10 end
    if menu == 5 then a = 16 end
    if menu == 6 then a = 22 end
    if menu == 7 then a = 29 end
    if menu == 8 then a = 34 end
    if menu == 9 then a = 36 end
    if menu == 10 then goto binend end
    if menu == 11 then  goto binend1 end
    for i = a, z do
        renyimen(i)
        speedUp(50) -- gg.sleep(200)
        gg.sleep(GSJG)
        if i == 8 then
           xianlazhuk()
           gg.sleep(3000)
        end		        
        if i == 13 then
            Teleport({1.76633882522583, 121.0093994140625, -365.9449157714844})
                      gg.sleep(3000)
        end
        if i == 23 then
            Teleport({-83.19969177246094, 9.88492202758789, 162.41334533691406})
            gg.sleep(3000)
        end
        if i == 24 then
            Teleport({120.89712524414, 117.35665893555, 323.57409667969})
            gg.sleep(3000)
        end
        if i == 31 then
            Teleport({-0.02870649286, 309.826171875, 68.02626800537})
            gg.sleep(3000)
        end
        if mapN[i][4] == 1 then xihua() end
        if mapN[i][6] == 1 then absorbCandlelight() end
        if i == 20 then
            Teleport({57.47018432617, 133.44024658203, -217.61511230469})
            gg.sleep(3000)
            xiguangmang()
            gg.sleep(5000)
        end
        if i == 21 then
            if KG_qtdr == "开" then A_qtdr() end
            if KG_qtzh == "开" then A_qtzh() end           
        end
        if i == 18 then 
            gg.sleep(5000)
            xiguangmang()
            if KG_qtdr == "关" then A_qtdr() end
            if KG_qtzh == "关" then A_qtzh() end            
            renyimen(20)
            gg.sleep(9000)
            xiguangmang()
            gg.sleep(5000)
        end
        if i == 19 then
            if KG_qtdr == "开" then A_qtdr() end       
            gg.sleep(5000)
            xiguangmang()
            if KG_qtdr == "关" then A_qtdr() end
        end
        if gg.isVisible(true) then
            break
        end        
   end
    ::binend::
    renyimen(1)
    speedUp(1)
    gg.alert("跑图完成\n耗时：" .. os.clock() - time0 .. "秒")

    ::binend0::
    while true do
        if gg.isVisible(true) then
            gg.setVisible(false)
            goto bin0
        end
    end
    
    ::binend1::
    speedUp(1)
    TempMenu = "RunModeMenu"
    RunModeMenu()

end

-- 主菜单
function HomeMenu()
    local menu = gg.choice({
        "🚆『跑图』🚆", "📩『每日任务』📩","🎇『献祭』🎇", "💞『寻找光翼』💞",
		"🌸『全图炸花(" .. KG_qtzh .. ")』🌸",
		"🔥『全图点燃(" .. KG_qtdr .. ")』🔥",		
        "🥃『无限能量(" .. KG_wxnl .. ")』🥃",
        "‍⏭️『倍速调节』⏭️️",
		"🎉『花里胡哨』🎉",	
		"🌐『打卡圣地』🌐",		
        "📴『退出脚本』📴"
    }, nil, "🚹请选择功能🚹")

    if menu == 1 then
        TempMenu = "RunModeMenu"
        RunModeMenu()
    elseif menu == 2 then
        TempMenu = "M_MRRW"
        M_MRRW()		
    elseif menu == 3 then
        TempMenu = "EdenMenu"
        EdenMenu()
    elseif menu == 4 then
        TempMenu = "FindWingMenu"
        FindWingMenu()
    elseif menu == 5 then
	    A_qtzh()
    elseif menu == 6 then
	    A_qtdr()		
    elseif menu == 7 then
        A_wxnl()
    elseif menu == 8 then
		TempMenu = "SpeedMenu"
        SpeedMenu()
    elseif menu == 9 then
        TempMenu = "M_GN"
        M_GN()	
    elseif menu == 10 then
        TempMenu = "M_DTCD"
        M_DTCD()			
    elseif menu == 11 then
        Exit()
    else
        gg.setVisible(false)
    end
    Menu = nil
end

function init()
    gg.setVisible(false)
    gg.toast("📵脚本初始化中(脚本初始化完成后再操作)📵")

    initRamRange() -- 初始化搜索范围
    getCoordinate() -- 初始化角色坐标
	A_wxnl()
    --getEnergyAddress() -- 初始化能量核心
    getLightAndMap() -- 初始化烛火核心
    getMapLocationAddress() -- 初始化地图核心
    --getFlowerAddress() -- 初始化黑暗植物核心
    A_qtzh()
	A_qtdr()
	getEnergyAddress()
	miaozuotan()
    gg.toast("🔛脚本初始化完成🔛")
    gg.sleep(1000)
    HomeMenu()
end

function a()
gg.alert("测试")
end

function main()
    init() -- 初始化

    while true do
        if gg.isVisible(true) then
            Menu = TempMenu
            gg.setVisible(false)
        end
        if Menu == "HomeMenu" then HomeMenu() end
		if Menu == "GSmain" then GSmain() end
		if Menu == "M_DTCD" then M_DTCD() end
		if Menu == "sg2" then sg2() end
        if Menu == "RunModeMenu" then RunModeMenu() end
        if Menu == "RunModeSmallMenu" or Menu == "RunModeBigMenu" then
            RunModeBigOrSmallMenu()
        end
		if Menu == "RunModeMenuChild1" then RunModeMenuChild1() end
        if Menu == "RunModeMenuChild2" then RunModeMenuChild2() end
        if Menu == "RunModeMenuChild3" then RunModeMenuChild3() end
        if Menu == "RunModeMenuChild4" then RunModeMenuChild4() end
        if Menu == "RunModeMenuChild5" then RunModeMenuChild5() end
        if Menu == "RunModeMenuChild6" then RunModeMenuChild6() end
        if Menu == "FindLoseMenu" then FindLoseMenu() end
        if Menu == "FindLoseChildMenu1" then FindLoseChildMenu1() end
		if Menu == "M_MRRW" then M_MRRW() end
		if Menu == "RW_1" then RW_1() end
		if Menu == "RW_2" then RW_2() end
        if Menu == "EdenMenu" then EdenMenu() end
        if Menu == "FindWingMenu" then FindWingMenu() end
        if Menu == "IntelligentFindDoor" then IntelligentFindDoor() end
		if Menu == "IntelligentFindDoor2" then IntelligentFindDoor2() end
        if Menu == "SpeedMenu" then SpeedMenu() end
        if Menu == "MagicMenu" then MagicMenu() end
		if Menu == "M_ssyg" then M_ssyg() end
		if Menu == "M_GN" then M_GN() end
        gg.sleep(500)
    end
end
main()
